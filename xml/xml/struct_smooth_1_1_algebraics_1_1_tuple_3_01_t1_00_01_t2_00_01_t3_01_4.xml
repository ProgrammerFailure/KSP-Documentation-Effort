<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4" kind="struct" prot="public">
    <compoundname>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IComparable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T1</type>
      </param>
      <param>
        <type>T2</type>
      </param>
      <param>
        <type>T3</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a0a5ad80eefeaecf67463f0f91350d79e" prot="public" static="no" mutable="no">
        <type>readonly T1</type>
        <definition>readonly T1 Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Item1</definition>
        <argsstring></argsstring>
        <name>Item1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="199" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1afee729c962a13881a0d5dfd8fe2cf7a3" prot="public" static="no" mutable="no">
        <type>readonly T2</type>
        <definition>readonly T2 Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Item2</definition>
        <argsstring></argsstring>
        <name>Item2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="200" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a38c7adc21aae5bea675d60c7570dd3c8" prot="public" static="no" mutable="no">
        <type>readonly T3</type>
        <definition>readonly T3 Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Item3</definition>
        <argsstring></argsstring>
        <name>Item3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="201" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a8a3209dde19bd38a28e73ba5f71de247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.CompareTo</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="230" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a9089c97ed9be1f8c8dcfa8e83047de8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Equals</definition>
        <argsstring>(object o)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="209" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a8b970d534fbb0e456afb79bf56feff81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Equals</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; t)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="213" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1aef4bdbd0a8b5bd2a4aa9d1cee53a5959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="220" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a7e237961a2b392911db8bacfff4f9735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="261" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1afa0b6e6c0477e133da83cef3654a6e14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.Tuple</definition>
        <argsstring>(T1 item1, T2 item2, T3 item3)</argsstring>
        <name>Tuple</name>
        <param>
          <type>T1</type>
          <declname>item1</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>item2</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>item3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="203" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="203" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a2f5267ac6469e13bb1ca36e6a82d67bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator!=</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="241" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a48110af4fcde920904fd9b993a9f8502" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator&lt;</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="249" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1ac8982425c6ab1bf82d411dc78b03c53e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator&lt;=</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="257" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a28778a25a5dcd0d33379b4d64a577727" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator==</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="237" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1aa5232b4460dd4b9bbde128563649e310" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator&gt;</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="245" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1af2f50bf0348d76048daa5752d404bf49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;.operator&gt;=</definition>
        <argsstring>(Tuple&lt; T1, T2, T3 &gt; lhs, Tuple&lt; T1, T2, T3 &gt; rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Tuple</ref>&lt; T1, T2, T3 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="253" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="253" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct representing a sequence of three elements, aka: an ordered triplet. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="168196">
        <label>IEquatable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</label>
      </node>
      <node id="168195">
        <label>IComparable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</label>
      </node>
      <node id="168194">
        <label>Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;</label>
        <link refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4"/>
        <childnode refid="168195" relation="public-inheritance">
        </childnode>
        <childnode refid="168196" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="168199">
        <label>IEquatable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</label>
      </node>
      <node id="168198">
        <label>IComparable&lt; Tuple&lt; T1, T2, T3 &gt;&gt;</label>
      </node>
      <node id="168197">
        <label>Smooth.Algebraics.Tuple&lt; T1, T2, T3 &gt;</label>
        <link refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4"/>
        <childnode refid="168198" relation="public-inheritance">
        </childnode>
        <childnode refid="168199" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" line="197" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Tuple.cs" bodystart="195" bodyend="264"/>
    <listofallmembers>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a8a3209dde19bd38a28e73ba5f71de247" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>CompareTo</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a9089c97ed9be1f8c8dcfa8e83047de8d" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a8b970d534fbb0e456afb79bf56feff81" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1aef4bdbd0a8b5bd2a4aa9d1cee53a5959" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>GetHashCode</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a0a5ad80eefeaecf67463f0f91350d79e" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Item1</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1afee729c962a13881a0d5dfd8fe2cf7a3" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Item2</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a38c7adc21aae5bea675d60c7570dd3c8" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Item3</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a2f5267ac6469e13bb1ca36e6a82d67bb" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator!=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a48110af4fcde920904fd9b993a9f8502" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator&lt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1ac8982425c6ab1bf82d411dc78b03c53e" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator&lt;=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a28778a25a5dcd0d33379b4d64a577727" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator==</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1aa5232b4460dd4b9bbde128563649e310" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator&gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1af2f50bf0348d76048daa5752d404bf49" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>operator&gt;=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1a7e237961a2b392911db8bacfff4f9735" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>ToString</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_tuple_3_01_t1_00_01_t2_00_01_t3_01_4_1afa0b6e6c0477e133da83cef3654a6e14" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Tuple&lt; T1, T2, T3 &gt;</scope><name>Tuple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
