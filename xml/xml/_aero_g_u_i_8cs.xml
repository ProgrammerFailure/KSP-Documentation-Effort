<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_aero_g_u_i_8cs" kind="file">
    <compoundname>AeroGUI.cs</compoundname>
    <innerclass refid="class_aero_g_u_i" prot="public">AeroGUI</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.Localization;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">[<ref refid="class_k_s_p_addon" kindref="compound">KSPAddon</ref>(<ref refid="class_k_s_p_addon" kindref="compound">KSPAddon</ref>.<ref refid="class_k_s_p_addon_1a4e296691a7693b9bbb5ab11a7f240cc9" kindref="member">Startup</ref>.Flight,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="7" refid="class_aero_g_u_i" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_aero_g_u_i" kindref="compound">AeroGUI</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DEG2RAD<sp/>=<sp/>Math.PI<sp/>/<sp/>180.0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RAD2DEG<sp/>=<sp/>180.0<sp/>/<sp/>Math.PI;<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Rect<sp/><ref refid="class_aero_g_u_i_1aafdec87806f9478f3e6215a61ca0d6ad" kindref="member">windowPos</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(100,<sp/>100,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Rect<sp/><ref refid="class_aero_g_u_i_1aaf401f1d2ac0f209fa858dc7f1d82c50" kindref="member">windowPosThermal</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rect(200,<sp/>200,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a18f50808dcb7f926563eeba54958d922" kindref="member">winterOwlModeOff</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyEmissiveScalarS0Front<sp/>=<sp/>0.782048841d;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyEmissiveScalarS0Back<sp/>=<sp/>0.093081228d;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyEmissiveScalarS1<sp/>=<sp/>0.87513007d;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyEmissiveScalarS0Top<sp/>=<sp/>0.398806364d;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyEmissiveScalarS1Top<sp/>=<sp/>0.797612728d;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solarFlux,<sp/>backgroundRadTemp,<sp/>bodyAlbedoFlux,<sp/>bodyEmissiveFlux,<sp/>bodySunFlux,<sp/>effectiveFaceTemp,<sp/>bodyTemperature,<sp/>sunDot,<sp/>atmosphereTemperatureOffset,<sp/>altTempMult,<sp/>latitude,<sp/>latTempMod,<sp/>axialTempMod,<sp/>solarAMMult,<sp/>finalAtmoMod,<sp/>sunFinalMult,<sp/>diurnalRange;<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref>,<sp/>alpha,<sp/>sideslip,<sp/>soundSpeed,<sp/>mach,<sp/>eas,<sp/>thrust,<sp/>climbrate,<sp/>srfHeight,<sp/>lift,<sp/>drag,<sp/>lidForce,<sp/>dragUpForce,<sp/>pLift,<sp/>pDrag,<sp/>liftUp,<sp/>grav,<sp/>ldRatio,<sp/>Q,<sp/>pressure,<sp/>density,<sp/>ambientTemp,<sp/>shockTemp,<sp/>CdS,<sp/>ClS,<sp/>ballisticCoeff,<sp/>pitch,<sp/>heading,<sp/>roll,<sp/>pRate,<sp/>yRate,<sp/>rRate,<sp/>pRateA,<sp/>yRateA,<sp/>rRateA;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1ab48049744fb8e691159068c6b7883132" kindref="member">dTime</ref>;<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a6a11cd55d0c82f941ad23bca44096cc9" kindref="member">convectiveTotal</ref><sp/>=<sp/>0d;<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1ab37664441b684c818c769c09f3bab92a" kindref="member">Start</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref><sp/>=<sp/>alpha<sp/>=<sp/>mach<sp/>=<sp/>thrust<sp/>=<sp/>soundSpeed<sp/>=<sp/>climbrate<sp/>=<sp/>srfHeight<sp/>=<sp/>eas<sp/>=<sp/>lift<sp/>=<sp/>drag<sp/>=<sp/>lidForce<sp/>=<sp/>dragUpForce<sp/>=<sp/>pLift<sp/>=<sp/>pDrag<sp/>=<sp/>liftUp<sp/>=<sp/>grav<sp/>=<sp/>ldRatio<sp/>=<sp/>Q<sp/>=<sp/>pressure<sp/>=<sp/>density<sp/>=<sp/>ambientTemp<sp/>=<sp/>shockTemp<sp/>=<sp/>ballisticCoeff<sp/>=<sp/>CdS<sp/>=<sp/>ClS<sp/>=<sp/>pitch<sp/>=<sp/>heading<sp/>=<sp/>roll<sp/>=<sp/>pRate<sp/>=<sp/>yRate<sp/>=<sp/>rRate<sp/>=<sp/>pRateA<sp/>=<sp/>yRateA<sp/>=<sp/>rRateA<sp/>=<sp/>0d;<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solarFlux<sp/>=<sp/>bodyAlbedoFlux<sp/>=<sp/>bodyEmissiveFlux<sp/>=<sp/>bodySunFlux<sp/>=<sp/>effectiveFaceTemp<sp/>=<sp/>bodyTemperature<sp/>=<sp/>sunDot<sp/>=<sp/>atmosphereTemperatureOffset<sp/>=<sp/>altTempMult<sp/>=<sp/>latitude<sp/>=<sp/>latTempMod<sp/>=<sp/>axialTempMod<sp/>=<sp/>solarAMMult<sp/>=<sp/>finalAtmoMod<sp/>=<sp/>sunFinalMult<sp/>=<sp/>diurnalRange<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>settings<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>node<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_game_database" kindref="compound">GameDatabase</ref>.<ref refid="class_game_database_1a48dccd123320774a5acee1d25e729eb7" kindref="member">Instance</ref>.<ref refid="class_game_database_1ae202f040603cf726883794ebf10e84ad" kindref="member">GetConfigNodes</ref>(</highlight><highlight class="stringliteral">&quot;AEROGUI&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(settings.HasValue(</highlight><highlight class="stringliteral">&quot;WinterOwlMode&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>btmp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">.TryParse(settings.GetValue(</highlight><highlight class="stringliteral">&quot;WinterOwlMode&quot;</highlight><highlight class="normal">),<sp/>out<sp/>btmp))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1a18f50808dcb7f926563eeba54958d922" kindref="member">winterOwlModeOff</ref><sp/>=<sp/>!btmp;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1ab42e373e4c014854f06c4d7aa7a1b064" kindref="member">OnGUI</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1aa5b4a3a34686ebac9794047456d05e23" kindref="member">AeroGUIDisplay</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aafdec87806f9478f3e6215a61ca0d6ad" kindref="member">windowPos</ref><sp/>=<sp/>GUILayout.Window(</highlight><highlight class="stringliteral">&quot;AeroGUI&quot;</highlight><highlight class="normal">.GetHashCode(),<sp/><ref refid="class_aero_g_u_i_1aafdec87806f9478f3e6215a61ca0d6ad" kindref="member">windowPos</ref>,<sp/><ref refid="class_aero_g_u_i_1aa67fa92bcdbcbb842e688452f451beea" kindref="member">DrawWindow</ref>,<sp/></highlight><highlight class="stringliteral">&quot;AeroGUI&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1a99af76f9faa36222149a9c5120085e45" kindref="member">ThermoGUIDisplay</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aaf401f1d2ac0f209fa858dc7f1d82c50" kindref="member">windowPosThermal</ref><sp/>=<sp/>GUILayout.Window(</highlight><highlight class="stringliteral">&quot;AeroGUIThermal&quot;</highlight><highlight class="normal">.GetHashCode(),<sp/><ref refid="class_aero_g_u_i_1aaf401f1d2ac0f209fa858dc7f1d82c50" kindref="member">windowPosThermal</ref>,<sp/><ref refid="class_aero_g_u_i_1a9f1cdbb4881dfa97a1c9f6971bf6b966" kindref="member">DrawWindowThermal</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Thermal<sp/>Info&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a75187b78af9eb22d22edd6c5246b636e" kindref="member">Update</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1aa5b4a3a34686ebac9794047456d05e23" kindref="member">AeroGUIDisplay</ref><sp/>||<sp/><ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1a99af76f9faa36222149a9c5120085e45" kindref="member">ThermoGUIDisplay</ref>))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1ab48049744fb8e691159068c6b7883132" kindref="member">dTime</ref><sp/>=<sp/><ref refid="class_time_warp_1a69dbb75229c46cf9e1687c4a2a71c1fd" kindref="member">TimeWarp.deltaTime</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oH<sp/>=<sp/>heading,<sp/>oP<sp/>=<sp/>pitch,<sp/>oR<sp/>=<sp/>roll;<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref><sp/>=<sp/>alpha<sp/>=<sp/>mach<sp/>=<sp/>thrust<sp/>=<sp/>soundSpeed<sp/>=<sp/>climbrate<sp/>=<sp/>srfHeight<sp/>=<sp/>eas<sp/>=<sp/>lift<sp/>=<sp/>drag<sp/>=<sp/>lidForce<sp/>=<sp/>dragUpForce<sp/>=<sp/>pLift<sp/>=<sp/>pDrag<sp/>=<sp/>liftUp<sp/>=<sp/>grav<sp/>=<sp/>ldRatio<sp/>=<sp/>Q<sp/>=<sp/>pressure<sp/>=<sp/>density<sp/>=<sp/>ambientTemp<sp/>=<sp/>shockTemp<sp/>=<sp/>ballisticCoeff<sp/>=<sp/>CdS<sp/>=<sp/>ClS<sp/>=<sp/>pitch<sp/>=<sp/>heading<sp/>=<sp/>roll<sp/>=<sp/>pRate<sp/>=<sp/>yRate<sp/>=<sp/>rRate<sp/>=<sp/>pRateA<sp/>=<sp/>yRateA<sp/>=<sp/>rRateA<sp/>=<sp/>0d;<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solarFlux<sp/>=<sp/>bodyAlbedoFlux<sp/>=<sp/>bodyEmissiveFlux<sp/>=<sp/>bodySunFlux<sp/>=<sp/>effectiveFaceTemp<sp/>=<sp/>bodyTemperature<sp/>=<sp/>sunDot<sp/>=<sp/>atmosphereTemperatureOffset<sp/>=<sp/>altTempMult<sp/>=<sp/>latitude<sp/>=<sp/>latTempMod<sp/>=<sp/>axialTempMod<sp/>=<sp/>solarAMMult<sp/>=<sp/>finalAtmoMod<sp/>=<sp/>sunFinalMult<sp/>=<sp/>diurnalRange<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundRadTemp<sp/>=<sp/><ref refid="class_physics_globals_1ad76c3279e255751d5f67b019fd120504" kindref="member">PhysicsGlobals.SpaceTemperature</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>non-air-dependent<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>v<sp/>=<sp/><ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">FlightGlobals.ActiveVessel</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambientTemp<sp/>=<sp/>v.atmosphericTemperature;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shockTemp<sp/>=<sp/>v.externalTemperature;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1aa5b4a3a34686ebac9794047456d05e23" kindref="member">AeroGUIDisplay</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srfHeight<sp/>=<sp/>v.heightFromTerrain;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grav<sp/>=<sp/>v.totalMass<sp/>*<sp/>FlightGlobals.getGeeForceAtPosition(v.CoM).magnitude;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>nVel<sp/>=<sp/>v.srf_vel_direction;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.srfSpeed<sp/>&gt;=<sp/>0.01d)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>Vector3d.Dot(v.transform.forward,<sp/>Vector3d.Exclude(v.transform.right,<sp/>nVel).normalized);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>Math.Asin(alpha)<sp/>*<sp/>RAD2DEG;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(alpha))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideslip<sp/>=<sp/>Vector3d.Dot(v.transform.up,<sp/>Vector3d.Exclude(v.transform.forward,<sp/>nVel).normalized);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideslip<sp/>=<sp/>Math.Acos(sideslip)<sp/>*<sp/>RAD2DEG;<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(sideslip))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideslip<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sideslip<sp/>&lt;<sp/>0d)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sideslip<sp/>=<sp/>180d<sp/>+<sp/>sideslip;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>climbrate<sp/>=<sp/>Vector3d.Dot(v.srf_velocity,<sp/>v.upAxis);<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotationSurface<sp/>=<sp/>Quaternion.LookRotation(v.north,<sp/>v.upAxis);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotationVesselSurface<sp/>=<sp/>Quaternion.Inverse(Quaternion.Euler(90,<sp/>0,<sp/>0)<sp/>*<sp/>Quaternion.Inverse(v.<ref refid="class_vessel_1abb683058132dbf7b1a6f940dc57d2973" kindref="member">GetTransform</ref>().rotation)<sp/>*<sp/>rotationSurface);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>angularVelocity<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.GetComponent&lt;Rigidbody&gt;()<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angularVelocity<sp/>=<sp/>Quaternion.Inverse(v.GetTransform().rotation)<sp/>*<sp/>v.GetComponent&lt;Rigidbody&gt;().angularVelocity;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>rotationVesselSurface.eulerAngles.y;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>(rotationVesselSurface.eulerAngles.x<sp/>&gt;<sp/>180)<sp/>?<sp/>(360.0<sp/>-<sp/>rotationVesselSurface.eulerAngles.x)<sp/>:<sp/>-rotationVesselSurface.eulerAngles.x;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roll<sp/>=<sp/>(rotationVesselSurface.eulerAngles.z<sp/>&gt;<sp/>180)<sp/>?<sp/>(rotationVesselSurface.eulerAngles.z<sp/>-<sp/>360.0)<sp/>:<sp/>rotationVesselSurface.eulerAngles.z;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yRate<sp/>=<sp/>-angularVelocity.z<sp/>*<sp/>RAD2DEG;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRate<sp/>=<sp/>-angularVelocity.x<sp/>*<sp/>RAD2DEG;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rRate<sp/>=<sp/>-angularVelocity.y<sp/>*<sp/>RAD2DEG;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dTimeRecip<sp/>=<sp/>1d<sp/>/<sp/><ref refid="class_aero_g_u_i_1ab48049744fb8e691159068c6b7883132" kindref="member">dTime</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yRateA<sp/>=<sp/>(heading<sp/>-<sp/>oH)<sp/>*<sp/>dTimeRecip;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRateA<sp/>=<sp/>(pitch<sp/>-<sp/>oP)<sp/>*<sp/>dTimeRecip;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rRateA<sp/>=<sp/>(roll<sp/>-<sp/>oR)<sp/>*<sp/>dTimeRecip;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref>.atmDensity<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>air,<sp/>get<sp/>aero<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1a2c3a835501fa84308c30e85eaad1890e" kindref="member">GetAeroStats</ref>(nVel);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1a99af76f9faa36222149a9c5120085e45" kindref="member">ThermoGUIDisplay</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1a3d2549331caf9add7bf1729c977f0eb6" kindref="member">GetThermalStats</ref>(v);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a3d2549331caf9add7bf1729c977f0eb6" kindref="member">GetThermalStats</ref>(<ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>vessel)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_flight_integrator" kindref="compound">FlightIntegrator</ref><sp/>fi<sp/>=<sp/>vessel.GetComponent&lt;<ref refid="class_flight_integrator" kindref="compound">FlightIntegrator</ref>&gt;();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fi<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shockTemp<sp/>=<sp/>vessel.externalTemperature;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundRadTemp<sp/>=<sp/>fi.backgroundRadiationTemp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>densityThermalLerp<sp/>=<sp/>fi.CalculateDensityThermalLerp();<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>sunVector<sp/>=<sp/>(Planetarium.fetch.Sun.scaledBody.transform.position<sp/>-<sp/>ScaledSpace.LocalToScaledSpace(vessel.transform.position)).normalized;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solarFlux<sp/>=<sp/>vessel.solarFlux;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planetarium" kindref="compound">Planetarium</ref>.<ref refid="class_planetarium_1a96e8fea44d84eda91b975d3d86938c84" kindref="member">fetch</ref>.<ref refid="class_planetarium_1a48b7aed7d7a87d3ea233aced4ecccc35" kindref="member">Sun</ref><sp/>!=<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunDistanceSqr<sp/>=<sp/>((Planetarium.fetch.Sun.scaledBody.transform.position<sp/>-<sp/>vessel.mainBody.scaledBody.transform.position)<sp/>*<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1aeb607935e7cebb31c4bfc8e5a396a819" kindref="member">ScaleFactor</ref>).sqrMagnitude;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodySunFlux<sp/>=<sp/>PhysicsGlobals.SolarLuminosity<sp/>/<sp/>(4d<sp/>*<sp/>Math.PI<sp/>*<sp/>sunDistanceSqr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunDot<sp/>=<sp/>Vector3.Dot(sunVector,<sp/>vessel.upAxis);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>mainBodyUp<sp/>=<sp/>vessel.mainBody.bodyTransform.up;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sunAxialDot<sp/>=<sp/>Vector3.Dot(sunVector,<sp/>mainBodyUp);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyAxialDot<sp/>=<sp/>Vector3.Dot(mainBodyUp,<sp/>vessel.upAxis);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyPolarAngle<sp/>=<sp/>Math.Acos(bodyAxialDot);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(bodyPolarAngle))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyPolarAngle<sp/>=<sp/>bodyAxialDot<sp/>&lt;<sp/>0d<sp/>?<sp/>Math.PI<sp/>:<sp/>0d;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunPolarAngle<sp/>=<sp/>Math.Acos(sunAxialDot);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(sunPolarAngle))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunPolarAngle<sp/>=<sp/>sunAxialDot<sp/>&lt;<sp/>0d<sp/>?<sp/>Math.PI<sp/>:<sp/>0d;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunBodyMaxDot<sp/>=<sp/>(1d<sp/>+<sp/>Math.Cos(sunPolarAngle<sp/>-<sp/>bodyPolarAngle))<sp/>*<sp/>0.5d;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunBodyMinDot<sp/>=<sp/>(1d<sp/>+<sp/>Math.Cos(sunPolarAngle<sp/>+<sp/>bodyPolarAngle))<sp/>*<sp/>0.5d;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bodyAxialDot<sp/>&lt;<sp/>0d)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunAxialDot<sp/>=<sp/>-sunAxialDot;<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracBodyPolar<sp/>=<sp/>bodyPolarAngle;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracSunPolar<sp/>=<sp/>sunPolarAngle;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bodyPolarAngle<sp/>&gt;<sp/>Math.PI<sp/>*<sp/>0.5d)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracBodyPolar<sp/>=<sp/>Math.PI<sp/>-<sp/>fracBodyPolar;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fracSunPolar<sp/>=<sp/>Math.PI<sp/>-<sp/>fracSunPolar;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>sunDot<sp/>based<sp/>on<sp/>the<sp/>fact<sp/>peak<sp/>temp<sp/>is<sp/>~3pm<sp/>and<sp/>min<sp/>temp<sp/>is<sp/>~3am,<sp/>or<sp/>so<sp/>we<sp/>will<sp/>assume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunDotCorrected<sp/>=<sp/>(1d<sp/>+<sp/>Vector3.Dot(sunVector,<sp/>Quaternion.AngleAxis(-45f<sp/>*<sp/>Mathf.Sign((float)vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1aad3b4bb7a1f92542da13dc231b70b4f3" kindref="member">rotationPeriod</ref>),<sp/>mainBodyUp)<sp/>*<sp/>vessel.<ref refid="class_vessel_1a317d583cbe03e62a72fb1dd32dae8bc8" kindref="member">upAxis</ref>))<sp/>*<sp/>0.5d;<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunDotNormalized<sp/>=<sp/>(sunDotCorrected<sp/>-<sp/>sunBodyMinDot)<sp/>/<sp/>(sunBodyMaxDot<sp/>-<sp/>sunBodyMinDot);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(sunDotNormalized))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sunDotCorrected<sp/>&gt;<sp/>0.5d)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunDotNormalized<sp/>=<sp/>1d;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunDotNormalized<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latitude<sp/>=<sp/>(Math.PI<sp/>*<sp/>0.5d<sp/>-<sp/>fracBodyPolar);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latitude<sp/>*=<sp/>(180d<sp/>/<sp/>Math.PI);<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a950c756ef7908efcb4facf8b46e5dea4" kindref="member">atmosphere</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>latitudeF<sp/>=<sp/>(float)latitude;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>orbitBody<sp/>=<sp/>CelestialBody.GetBodyReferencing(vessel.mainBody,<sp/><ref refid="class_flight_integrator_1aab0760e4d20bf796d73e38a3052f40b3" kindref="member">FlightIntegrator.sunBody</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diurnalRange<sp/>=<sp/>vessel.mainBody.latitudeTemperatureSunMultCurve.Evaluate(latitudeF);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latTempMod<sp/>=<sp/>vessel.mainBody.latitudeTemperatureBiasCurve.Evaluate(latitudeF);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ta<sp/>=<sp/>(((float)orbitBody.<ref refid="class_celestial_body_1aee0713b155fadfde0e67356f3c56ffec" kindref="member">orbit</ref>.<ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref><sp/>*<sp/>Mathf.Rad2Deg)<sp/>+<sp/>360.0f)<sp/>%<sp/>360.0f;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axialTempMod<sp/>=<sp/>vessel.mainBody.axialTemperatureSunBiasCurve.Evaluate(ta)<sp/>*<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a179b1998a0a0245c9fc8069cfaa2025b" kindref="member">axialTemperatureSunMultCurve</ref>.<ref refid="class_float_curve_1ad97a55d9bb28e5d15e6da14240c10de3" kindref="member">Evaluate</ref>(latitudeF);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atmosphereTemperatureOffset<sp/>=<sp/>latTempMod<sp/>+<sp/>diurnalRange<sp/>*<sp/>sunDotNormalized<sp/>+<sp/>axialTempMod</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vessel.mainBody.eccentricityTemperatureBiasCurve.Evaluate((float)((orbitBody.<ref refid="class_celestial_body_1aee0713b155fadfde0e67356f3c56ffec" kindref="member">orbit</ref>.<ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>-<sp/>orbitBody.<ref refid="class_celestial_body_1aee0713b155fadfde0e67356f3c56ffec" kindref="member">orbit</ref>.<ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref>)<sp/>/<sp/>(orbitBody.orbit.ApR<sp/>-<sp/>orbitBody.orbit.PeR)));<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altTempMult<sp/>=<sp/>vessel.mainBody.atmosphereTemperatureSunMultCurve.Evaluate((float)vessel.<ref refid="class_vessel_1a0f4f74678e47f27bb21c60a7a11b56d2" kindref="member">altitude</ref>);<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vessel.atmDensity<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>final<sp/>temp<sp/>mod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalAtmoMod<sp/>=<sp/>atmosphereTemperatureOffset<sp/>*<sp/>altTempMult;<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rcosz<sp/>=<sp/>vessel.mainBody.radiusAtmoFactor<sp/>*<sp/>sunDot;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rcosz<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solarAMMult<sp/>=<sp/>Math.Sqrt(2<sp/>*<sp/>vessel.mainBody.radiusAtmoFactor<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solarAMMult<sp/>=<sp/>(Math.Sqrt(rcosz<sp/>*<sp/>rcosz<sp/>+<sp/>2<sp/>*<sp/>vessel.mainBody.radiusAtmoFactor<sp/>+<sp/>1)<sp/>-<sp/>rcosz);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFinalMult<sp/>=<sp/>vessel.mainBody.GetSolarPowerFactor(vessel.atmDensity<sp/>*<sp/>solarAMMult);<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>machLerp<sp/>=<sp/>(vessel.mach<sp/>-<sp/><ref refid="class_physics_globals_1aa564a2356c6bf80f6bc6900255a8ae60" kindref="member">PhysicsGlobals.NewtonianMachTempLerpStartMach</ref>)<sp/>/<sp/>(<ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1aeb4e6df4260bdc36df1bac0a6c280e78" kindref="member">NewtonianMachTempLerpEndMach</ref><sp/>-<sp/><ref refid="class_physics_globals" kindref="compound">PhysicsGlobals</ref>.<ref refid="class_physics_globals_1aa564a2356c6bf80f6bc6900255a8ae60" kindref="member">NewtonianMachTempLerpStartMach</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(machLerp<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machLerp<sp/>=<sp/>Math.Pow(machLerp,<sp/><ref refid="class_physics_globals_1a107416944d44c2768d552c2c2f7e9c4f" kindref="member">PhysicsGlobals.NewtonianMachTempLerpExponent</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machLerp<sp/>=<sp/>Math.Min(1d,<sp/>machLerp);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>machExtTemp<sp/>=<sp/>Math.Pow(0.5d<sp/>*<sp/>vessel.convectiveMachFlux</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(PhysicsGlobals.StefanBoltzmanConstant<sp/>*<sp/><ref refid="class_physics_globals_1ae89698a46ea823470e8300bc1e37cdae" kindref="member">PhysicsGlobals.RadiationFactor</ref>),<sp/>0.25d);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shockTemp<sp/>=<sp/>Math.Max(shockTemp,<sp/>UtilMath.LerpUnclamped(shockTemp,<sp/>machExtTemp,<sp/>machLerp));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>body<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>calculate<sp/>albedo<sp/>and<sp/>emissive<sp/>fluxes,<sp/>and<sp/>body<sp/>temperature<sp/>under<sp/>vessel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nightTempScalar<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyMinTemp<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyMaxTemp<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a950c756ef7908efcb4facf8b46e5dea4" kindref="member">atmosphere</ref>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseTemp<sp/>=<sp/>vessel.mainBody.GetTemperature(0d);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyTemperature<sp/>=<sp/>baseTemp<sp/>+<sp/>atmosphereTemperatureOffset;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMinTemp<sp/>=<sp/>baseTemp<sp/>+<sp/>(vessel.mainBody.latitudeTemperatureBiasCurve.Evaluate(90f)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>lat<sp/>sun<sp/>mult<sp/>since<sp/>night</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a179b1998a0a0245c9fc8069cfaa2025b" kindref="member">axialTemperatureSunMultCurve</ref>.<ref refid="class_float_curve_1ad97a55d9bb28e5d15e6da14240c10de3" kindref="member">Evaluate</ref>(-(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1aee0713b155fadfde0e67356f3c56ffec" kindref="member">orbit</ref>.<ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref>));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMaxTemp<sp/>=<sp/>baseTemp<sp/>+<sp/>(vessel.mainBody.latitudeTemperatureBiasCurve.Evaluate(0f)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a5cf44b4d6d51242393529560be319c7e" kindref="member">latitudeTemperatureSunMultCurve</ref>.<ref refid="class_float_curve_1ad97a55d9bb28e5d15e6da14240c10de3" kindref="member">Evaluate</ref>(0f))</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1a179b1998a0a0245c9fc8069cfaa2025b" kindref="member">axialTemperatureSunMultCurve</ref>.<ref refid="class_float_curve_1ad97a55d9bb28e5d15e6da14240c10de3" kindref="member">Evaluate</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1aee0713b155fadfde0e67356f3c56ffec" kindref="member">orbit</ref>.<ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref>));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nightTempScalar<sp/>=<sp/>1d<sp/>-<sp/>Math.Sqrt(bodyMaxTemp)<sp/>*<sp/>0.0016d;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nightTempScalar<sp/>=<sp/>UtilMath.Clamp01(nightTempScalar);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spaceTemp4<sp/>=<sp/><ref refid="class_physics_globals_1ad76c3279e255751d5f67b019fd120504" kindref="member">PhysicsGlobals.SpaceTemperature</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceTemp4<sp/>*=<sp/>spaceTemp4;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceTemp4<sp/>*=<sp/>spaceTemp4;<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sbERecip<sp/>=<sp/>1d<sp/>/<sp/>(PhysicsGlobals.StefanBoltzmanConstant<sp/>*<sp/>vessel.mainBody.emissivity);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>bodySunFlux<sp/>*<sp/>(1d<sp/>-<sp/>vessel.mainBody.albedo)<sp/>*<sp/>sbERecip;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>effectiveTemp<sp/>=<sp/>Math.Pow(0.25d<sp/>*<sp/>tmp<sp/>+<sp/>spaceTemp4,<sp/>0.25d);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fullSunTemp<sp/>=<sp/>Math.Pow(tmp<sp/>+<sp/>spaceTemp4,<sp/>0.25d);<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempOffset<sp/>=<sp/>fullSunTemp<sp/>-<sp/>effectiveTemp;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMaxTemp<sp/>=<sp/>effectiveTemp<sp/>+<sp/>Math.Sqrt(tempOffset)<sp/>*<sp/>2d;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMinTemp<sp/>=<sp/>effectiveTemp<sp/>-<sp/>Math.Pow(tempOffset,<sp/>1.1d)<sp/>*<sp/>1.22d;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lerpVal<sp/>=<sp/>2d<sp/>/<sp/>Math.Sqrt(Math.Sqrt(vessel.mainBody.solarDayLength));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMaxTemp<sp/>=<sp/>UtilMath.Lerp(bodyMaxTemp,<sp/>effectiveTemp,<sp/>lerpVal);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyMinTemp<sp/>=<sp/>UtilMath.Lerp(bodyMinTemp,<sp/>effectiveTemp,<sp/>lerpVal);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latitudeLerpVal<sp/>=<sp/>Math.Max(0d,<sp/>sunBodyMaxDot<sp/>*<sp/>2d<sp/>-<sp/>1d);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latitudeLerpVal<sp/>=<sp/>Math.Sqrt(latitudeLerpVal);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nightTempScalar<sp/>=<sp/>1d<sp/>-<sp/>Math.Sqrt(bodyMaxTemp)<sp/>*<sp/>0.0016d;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nightTempScalar<sp/>=<sp/>UtilMath.Clamp01(nightTempScalar);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempDiff<sp/>=<sp/>(bodyMaxTemp<sp/>-<sp/>bodyMinTemp)<sp/>*<sp/>latitudeLerpVal;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dayTemp<sp/>=<sp/>bodyMinTemp<sp/>+<sp/>tempDiff;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nightTemp<sp/>=<sp/>bodyMinTemp<sp/>+<sp/>tempDiff<sp/>*<sp/>nightTempScalar;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyTemperature<sp/>=<sp/>Math.Max(<ref refid="class_physics_globals_1ad76c3279e255751d5f67b019fd120504" kindref="member">PhysicsGlobals.SpaceTemperature</ref>,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nightTemp<sp/>+<sp/>(dayTemp<sp/>-<sp/>nightTemp)<sp/>*<sp/>sunDotNormalized<sp/>+<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1ad698159b2828c50fececded154b603c9" kindref="member">coreTemperatureOffset</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quite<sp/>a<sp/>lerp.<sp/>We<sp/>need<sp/>to<sp/>get<sp/>the<sp/>lerp<sp/>between<sp/>front<sp/>and<sp/>back<sp/>faces,<sp/>then<sp/>lerp<sp/>between<sp/>that<sp/>and<sp/>the<sp/>top<sp/>facing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effectiveFaceTemp<sp/>=<sp/>UtilMath.LerpUnclamped(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.LerpUnclamped(<sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.LerpUnclamped(bodyMinTemp,<sp/>bodyMaxTemp,<sp/></highlight><highlight class="comment">//<sp/>front<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.LerpUnclamped(bodyEmissiveScalarS0Front,<sp/>bodyEmissiveScalarS1,<sp/>nightTempScalar)),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.LerpUnclamped(bodyMinTemp,<sp/>bodyMaxTemp,<sp/></highlight><highlight class="comment">//<sp/>back<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.LerpUnclamped(bodyEmissiveScalarS0Back,<sp/>bodyEmissiveScalarS1,<sp/>nightTempScalar)),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunDotNormalized),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>.<ref refid="class_util_math_1a7ada507e3ed066b0091e1c50c3573473" kindref="member">LerpUnclamped</ref>(bodyMinTemp,<sp/>bodyMaxTemp,<sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>.<ref refid="class_util_math_1a7ada507e3ed066b0091e1c50c3573473" kindref="member">LerpUnclamped</ref>(bodyEmissiveScalarS0Top,<sp/>bodyEmissiveScalarS1Top,<sp/>nightTempScalar)),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunBodyMaxDot);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp4<sp/>=<sp/>UtilMath.Lerp(bodyTemperature,<sp/>effectiveFaceTemp,<sp/>0.2d<sp/>+<sp/>vessel.altitude<sp/>/<sp/>vessel.mainBody.Radius<sp/>*<sp/>0.5d);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp4<sp/>*=<sp/>temp4;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp4<sp/>*=<sp/>temp4;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bodyFluxScalar<sp/>=<sp/>(4d<sp/>*<sp/>Math.PI<sp/>*<sp/>vessel.mainBody.Radius<sp/>*<sp/>vessel.mainBody.Radius)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(4d<sp/>*<sp/>Math.PI<sp/>*<sp/>(vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1aff0c92091394522f63428e4a88145a94" kindref="member">Radius</ref><sp/>+<sp/>vessel.<ref refid="class_vessel_1a0f4f74678e47f27bb21c60a7a11b56d2" kindref="member">altitude</ref>)<sp/>*<sp/>(vessel.mainBody.Radius<sp/>+<sp/>vessel.altitude));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyEmissiveFlux<sp/>=<sp/>PhysicsGlobals.StefanBoltzmanConstant<sp/>*<sp/>vessel.mainBody.emissivity<sp/>*<sp/>temp4<sp/>*<sp/>bodyFluxScalar;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyAlbedoFlux<sp/>=<sp/>bodySunFlux<sp/>*<sp/>0.5d<sp/>*<sp/>(sunDot<sp/>+<sp/>1f)<sp/>*<sp/>vessel.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1ac095d0ded16b0806342fd5b6c4a5dc8d" kindref="member">albedo</ref><sp/>*<sp/>bodyFluxScalar;<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyEmissiveFlux<sp/>=<sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>.<ref refid="class_util_math_1a7890fd50a97b7f4607b58b46a961ad19" kindref="member">Lerp</ref>(0d,<sp/>bodyEmissiveFlux,<sp/>densityThermalLerp);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyAlbedoFlux<sp/>=<sp/>UtilMath.Lerp(0d,<sp/>bodyAlbedoFlux,<sp/>densityThermalLerp);<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>vessel.<ref refid="class_vessel_1a3fbd809e39b6d8f147cb19ece4478ea0" kindref="member">Parts</ref>.Count;<sp/>i--<sp/>&gt;<sp/>0;)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1a6a11cd55d0c82f941ad23bca44096cc9" kindref="member">convectiveTotal</ref><sp/>+=<sp/>vessel.Parts[i].thermalConvectionFlux<sp/>*<sp/><ref refid="class_aero_g_u_i_1ab48049744fb8e691159068c6b7883132" kindref="member">dTime</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>will<sp/>calculate<sp/>various<sp/>useful<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>we<sp/>display<sp/>in<sp/>the<sp/>GUI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a2c3a835501fa84308c30e85eaad1890e" kindref="member">GetAeroStats</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>nVel)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>v<sp/>=<sp/><ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">FlightGlobals.ActiveVessel</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vLift<sp/>=<sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vDrag<sp/>=<sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqrMag<sp/>=<sp/>v.srf_velocity.sqrMagnitude;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>=<sp/>0.5<sp/>*<sp/>v.atmDensity<sp/>*<sp/>sqrMag;<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eas<sp/>=<sp/>Math.Sqrt(sqrMag<sp/>*<sp/>v.atmDensity<sp/>/<sp/>1.225);<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>your<sp/>airspeed<sp/>at<sp/>sea<sp/>level<sp/>with<sp/>the<sp/>same<sp/>Q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density<sp/>=<sp/>v.atmDensity;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure<sp/>=<sp/>v.staticPressurekPa<sp/>*<sp/>1000.0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mach<sp/>=<sp/>v.rootPart.machNumber;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundSpeed<sp/>=<sp/>v.speedOfSound;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>0d;<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>way<sp/>we<sp/>get<sp/>all<sp/>drag,<sp/>lift,<sp/>and<sp/>thrust.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>v.Parts.Count;<sp/>++i)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>p<sp/>=<sp/>v.Parts[i];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>+=<sp/>p.mass<sp/>+<sp/>p.GetResourceMass();<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vDrag<sp/>+=<sp/>-p.dragVectorDir<sp/>*<sp/>p.dragScalar;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.<ref refid="class_part_1a94a043981d0050eaefbbbf23a62dd857" kindref="member">hasLiftModule</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>bodyLift<sp/>=<sp/>p.transform.rotation<sp/>*<sp/>(p.bodyLiftScalar<sp/>*<sp/>p.DragCubes.LiftForce);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bodyLift<sp/>=<sp/>Vector3.ProjectOnPlane(bodyLift,<sp/>-p.dragVectorDir);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vLift<sp/>+=<sp/>bodyLift;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>find<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>p.Modules.Count;<sp/>++j)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>m<sp/>=<sp/>p.Modules[j];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>is<sp/><ref refid="class_module_lifting_surface" kindref="compound">ModuleLiftingSurface</ref>)<sp/></highlight><highlight class="comment">//<sp/>control<sp/>surface<sp/>derives<sp/>from<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModuleLiftingSurface<sp/>wing<sp/>=<sp/>(ModuleLiftingSurface)m;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vLift<sp/>+=<sp/>wing.liftForce;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vDrag<sp/>+=<sp/>wing.dragForce;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>thrust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>is<sp/><ref refid="class_module_engines" kindref="compound">ModuleEngines</ref>)<sp/></highlight><highlight class="comment">//<sp/>FX<sp/>derives<sp/>from<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrust<sp/>+=<sp/>((ModuleEngines)m).finalThrust;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pLift<sp/>is<sp/>&apos;pure&apos;<sp/>lift,<sp/>and<sp/>same<sp/>for<sp/>drag,<sp/>i.e.<sp/>just<sp/>the<sp/>magnitude<sp/>of<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLift<sp/>=<sp/>vLift.magnitude;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDrag<sp/>=<sp/>vDrag.magnitude;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>force<sp/>=<sp/>vLift<sp/>+<sp/>vDrag;<sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Vector3d<sp/>liftDir<sp/>=<sp/>-Vector3d.Cross(v.transform.right,<sp/>nVel);<sp/>///&lt;<sp/>we<sp/>need<sp/>the<sp/>&quot;lift&quot;<sp/>direction,<sp/>which</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>is<sp/>&quot;up&quot;<sp/>from<sp/>our<sp/>current<sp/>velocity<sp/>vector<sp/>and<sp/>roll<sp/>angle.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>liftDir<sp/>=<sp/>Vector3d.Exclude(nVel,<sp/>vLift).normalized;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>compute<sp/>the<sp/>dots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lift<sp/>=<sp/>Vector3d.Dot(force,<sp/>liftDir);<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>liftUp<sp/>=<sp/>Vector3d.Dot(force,<sp/>v.upAxis);<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drag<sp/>=<sp/>Vector3d.Dot(force,<sp/>-nVel);<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lidForce<sp/>=<sp/>Vector3d.Dot(vLift,<sp/>-nVel);<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dragUpForce<sp/>=<sp/>Vector3d.Dot(vDrag,<sp/>v.upAxis);<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ldRatio<sp/>=<sp/>lift<sp/>/<sp/>drag;<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref><sp/>=<sp/>Math.Sqrt(grav<sp/>/<sp/>drag)<sp/>*<sp/>v.speed;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(<ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref>))</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1aa9791295203bdd899fcf79a6a130f021" kindref="member">terminalV</ref><sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qRecip<sp/>=<sp/>1000d<sp/>/<sp/>Q;<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClS<sp/>=<sp/>lift<sp/>*<sp/>qRecip;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CdS<sp/>=<sp/>drag<sp/>*<sp/>qRecip;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ballisticCoeff<sp/>=<sp/>1000d<sp/>*<sp/>mass<sp/>/<sp/>CdS;<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1aa67fa92bcdbcbb842e688452f451beea" kindref="member">DrawWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowID)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>closing<sp/>of<sp/>the<sp/>window<sp/>tih<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>buttonStyle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle(<ref refid="_input_lock_manager_8cs_1a0119b266bd804d818bf01e957f37217aa1e3042b2e2a5550b412b37edd1c36b34" kindref="member">GUI</ref>.skin.button);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.padding<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RectOffset(5,<sp/>5,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.margin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RectOffset(1,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.stretchWidth<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.stretchHeight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>labelStyle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle(<ref refid="_input_lock_manager_8cs_1a0119b266bd804d818bf01e957f37217aa1e3042b2e2a5550b412b37edd1c36b34" kindref="member">GUI</ref>.skin.label);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelStyle.wordWrap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginVertical();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.FlexibleSpace();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button(</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/>buttonStyle))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PhysicsGlobals.AeroGUIDisplay<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tmp;<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>above<sp/>in<sp/>the<sp/>method<sp/>where<sp/>they<sp/>are<sp/>calculated<sp/>for<sp/>explanations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357338&quot;</highlight><highlight class="normal">,<sp/>pitch.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">),<sp/>pRate.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">),<sp/>pRateA.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357338<sp/>=<sp/>Pitch:<sp/>&lt;&lt;1&gt;&gt;°<sp/><sp/><sp/>(&lt;&lt;2&gt;&gt;°/s<sp/>R,<sp/>&lt;&lt;3&gt;&gt;°/s<sp/>A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357342&quot;</highlight><highlight class="normal">,<sp/>heading.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">),<sp/>yRate.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">),<sp/>yRateA.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357342<sp/>=<sp/>Heading:<sp/>&lt;&lt;1&gt;&gt;°<sp/><sp/><sp/>(&lt;&lt;2&gt;&gt;°/s<sp/>R,<sp/>&lt;&lt;3&gt;&gt;°/s<sp/>A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357346&quot;</highlight><highlight class="normal">,<sp/>roll.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">),<sp/>rRate.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">),<sp/>rRateA.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357346<sp/>=<sp/>Roll:<sp/>&lt;&lt;1&gt;&gt;°<sp/><sp/><sp/>(&lt;&lt;2&gt;&gt;°/s<sp/>R,<sp/>&lt;&lt;3&gt;&gt;°/s<sp/>A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357350&quot;</highlight><highlight class="normal">,<sp/>mach.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357350<sp/>=<sp/>Mach:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357354&quot;</highlight><highlight class="normal">,<sp/>eas.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357354<sp/>=<sp/>EAS:<sp/>&lt;&lt;1&gt;&gt;<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357358&quot;</highlight><highlight class="normal">,<sp/>terminalV.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357358<sp/>=<sp/>Terminal<sp/>Vel<sp/>(est):<sp/>&lt;&lt;1&gt;&gt;<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_aero_g_u_i_1a18f50808dcb7f926563eeba54958d922" kindref="member">winterOwlModeOff</ref>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(</highlight><highlight class="stringliteral">&quot;<sp/>------<sp/>&quot;</highlight><highlight class="normal">,<sp/>labelStyle);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(Q<sp/>&gt;<sp/>0d<sp/>&amp;&amp;<sp/>Q<sp/>&lt;<sp/>0.1d)<sp/>?<sp/>Q.ToString(</highlight><highlight class="stringliteral">&quot;E6&quot;</highlight><highlight class="normal">)<sp/>:<sp/>Q.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357369&quot;</highlight><highlight class="normal">,<sp/>tmp),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357369<sp/>=<sp/>Dynamic<sp/>Pressure:<sp/>&lt;&lt;1&gt;&gt;<sp/>Pa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(pressure<sp/>&gt;<sp/>0d<sp/>&amp;&amp;<sp/>pressure<sp/>&lt;<sp/>0.1d)<sp/>?<sp/>pressure.ToString(</highlight><highlight class="stringliteral">&quot;E6&quot;</highlight><highlight class="normal">)<sp/>:<sp/>pressure.ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357374&quot;</highlight><highlight class="normal">,<sp/>tmp),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357374<sp/>=<sp/>Static<sp/>Pressure:<sp/>&lt;&lt;1&gt;&gt;<sp/>Pa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(density<sp/>&gt;<sp/>0d<sp/>&amp;&amp;<sp/>density<sp/>&lt;<sp/>1e-5d)<sp/>?<sp/>density.ToString(</highlight><highlight class="stringliteral">&quot;E6&quot;</highlight><highlight class="normal">)<sp/>:<sp/>density.ToString(</highlight><highlight class="stringliteral">&quot;N6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357379&quot;</highlight><highlight class="normal">,<sp/>tmp),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357379<sp/>=<sp/>Density:<sp/>&lt;&lt;1&gt;&gt;<sp/>kg/m^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*double<sp/>dSqrt<sp/>=<sp/>Math.Sqrt(density);</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(dSqrt<sp/>&gt;<sp/>0d<sp/>&amp;&amp;<sp/>dSqrt<sp/>&lt;<sp/>1e-5d)<sp/>?<sp/>dSqrt.ToString(&quot;E6&quot;)<sp/>:<sp/>dSqrt.ToString(&quot;N6&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(&quot;Density<sp/>(Sqrt):<sp/>&quot;<sp/>+<sp/>tmp,<sp/>labelStyle);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357389&quot;</highlight><highlight class="normal">,<sp/>ambientTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357389<sp/>=<sp/>Static<sp/>Amb.<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357393&quot;</highlight><highlight class="normal">,<sp/>shockTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357393<sp/>=<sp/>External<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357397&quot;</highlight><highlight class="normal">,<sp/>soundSpeed.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357397<sp/>=<sp/>Speed<sp/>of<sp/>sound:<sp/>&lt;&lt;1&gt;&gt;<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(</highlight><highlight class="stringliteral">&quot;<sp/>------<sp/>&quot;</highlight><highlight class="normal">,<sp/>labelStyle);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357404&quot;</highlight><highlight class="normal">,<sp/>alpha.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357404<sp/>=<sp/>AoA:<sp/>&lt;&lt;1&gt;&gt;<sp/>deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357408&quot;</highlight><highlight class="normal">,<sp/>sideslip.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357408<sp/>=<sp/>Sideslip:<sp/>&lt;&lt;1&gt;&gt;<sp/>deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357412&quot;</highlight><highlight class="normal">,<sp/>climbrate.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357412<sp/>=<sp/>Climb<sp/>rate:<sp/>&lt;&lt;1&gt;&gt;<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357416&quot;</highlight><highlight class="normal">,<sp/>srfHeight.ToString(</highlight><highlight class="stringliteral">&quot;N0&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357416<sp/>=<sp/>Radar<sp/>Alt:<sp/>&lt;&lt;1&gt;&gt;<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357420&quot;</highlight><highlight class="normal">,<sp/>lift.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357420<sp/>=<sp/>Total<sp/>Lift:<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357424&quot;</highlight><highlight class="normal">,<sp/>drag.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357424<sp/>=<sp/>Total<sp/>Drag:<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357428&quot;</highlight><highlight class="normal">,<sp/>ldRatio.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357428<sp/>=<sp/>Lift<sp/>/<sp/>Drag<sp/>Ratio:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357432&quot;</highlight><highlight class="normal">,<sp/>CdS.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357432<sp/>=<sp/>Cd<sp/>*<sp/>S:<sp/>&lt;&lt;1&gt;&gt;<sp/>m^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357436&quot;</highlight><highlight class="normal">,<sp/>ClS.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357436<sp/>=<sp/>Cl<sp/>*<sp/>S:<sp/>&lt;&lt;1&gt;&gt;<sp/>m^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357440&quot;</highlight><highlight class="normal">,<sp/>ballisticCoeff.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357440<sp/>=<sp/>Ballistic<sp/>Coeff:<sp/>&lt;&lt;1&gt;&gt;<sp/>kg/m^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357444&quot;</highlight><highlight class="normal">,<sp/>thrust.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357444<sp/>=<sp/>Thrust:<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357448&quot;</highlight><highlight class="normal">,<sp/>grav.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357448<sp/>=<sp/>Grav<sp/>Force<sp/>(weight):<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357452&quot;</highlight><highlight class="normal">,<sp/>liftUp.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357452<sp/>=<sp/>Upwards<sp/>Force:<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357456&quot;</highlight><highlight class="normal">,<sp/>lidForce.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357456<sp/>=<sp/>L-I-D:<sp/>&lt;&lt;1&gt;&gt;<sp/>kN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndVertical();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.DragWindow();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_aero_g_u_i_1a9f1cdbb4881dfa97a1c9f6971bf6b966" kindref="member">DrawWindowThermal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowID)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>closing<sp/>of<sp/>the<sp/>window<sp/>tih<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>buttonStyle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle(<ref refid="_input_lock_manager_8cs_1a0119b266bd804d818bf01e957f37217aa1e3042b2e2a5550b412b37edd1c36b34" kindref="member">GUI</ref>.skin.button);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.padding<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RectOffset(5,<sp/>5,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.margin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RectOffset(1,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.stretchWidth<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonStyle.stretchHeight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>labelStyle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle(<ref refid="_input_lock_manager_8cs_1a0119b266bd804d818bf01e957f37217aa1e3042b2e2a5550b412b37edd1c36b34" kindref="member">GUI</ref>.skin.label);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelStyle.wordWrap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginVertical();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.FlexibleSpace();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button(</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/>buttonStyle))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PhysicsGlobals.ThermoGUIDisplay<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357487&quot;</highlight><highlight class="normal">,<sp/>(solarFlux<sp/>*<sp/>0.001d).ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357487<sp/>=<sp/>Solar<sp/>Flux:<sp/>&lt;&lt;1&gt;&gt;<sp/>kW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357491&quot;</highlight><highlight class="normal">,<sp/>solarAMMult.ToString(</highlight><highlight class="stringliteral">&quot;N5&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357491<sp/>=<sp/>Air<sp/>Mass<sp/>Mult:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357495&quot;</highlight><highlight class="normal">,<sp/>sunFinalMult.ToString(</highlight><highlight class="stringliteral">&quot;N5&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357495<sp/>=<sp/>Sol.<sp/>Flux<sp/>Mult:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357499&quot;</highlight><highlight class="normal">,<sp/>sunDot.ToString(</highlight><highlight class="stringliteral">&quot;N4&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357499<sp/>=<sp/>Sun<sp/>Incidence:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357503&quot;</highlight><highlight class="normal">,<sp/>latitude.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357503<sp/>=<sp/>Latitude:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357507&quot;</highlight><highlight class="normal">,<sp/>latTempMod.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357507<sp/>=<sp/>Lat.<sp/>Temp<sp/>Mod:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357511&quot;</highlight><highlight class="normal">,<sp/>axialTempMod.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357511<sp/>=<sp/>Seasonal<sp/>Temp<sp/>Mod:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357515&quot;</highlight><highlight class="normal">,<sp/>diurnalRange.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357515<sp/>=<sp/>Diurnal<sp/>Temp<sp/>Range:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357519&quot;</highlight><highlight class="normal">,<sp/>altTempMult.ToString(</highlight><highlight class="stringliteral">&quot;N5&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357519<sp/>=<sp/>Alt<sp/>Temp<sp/>Offset<sp/>Mult:<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357523&quot;</highlight><highlight class="normal">,<sp/>finalAtmoMod.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357523<sp/>=<sp/>Final<sp/>Temp<sp/>Mod:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(</highlight><highlight class="stringliteral">&quot;<sp/>------<sp/>&quot;</highlight><highlight class="normal">,<sp/>labelStyle);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357531&quot;</highlight><highlight class="normal">,<sp/>ambientTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357531<sp/>=<sp/>Static<sp/>Amb.<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357535&quot;</highlight><highlight class="normal">,<sp/>shockTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357535<sp/>=<sp/>External<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357539&quot;</highlight><highlight class="normal">,<sp/>backgroundRadTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357539<sp/>=<sp/>Background<sp/>Radiation<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357543&quot;</highlight><highlight class="normal">,<sp/>bodyTemperature.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357543<sp/>=<sp/>Body<sp/>Temp<sp/>under<sp/>craft:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357547&quot;</highlight><highlight class="normal">,<sp/>effectiveFaceTemp.ToString(</highlight><highlight class="stringliteral">&quot;N2&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357547<sp/>=<sp/>Effective<sp/>Body<sp/>Face<sp/>Temp:<sp/>&lt;&lt;1&gt;&gt;<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357551&quot;</highlight><highlight class="normal">,<sp/>(bodyEmissiveFlux<sp/>*<sp/>0.001d).ToString(</highlight><highlight class="stringliteral">&quot;N5&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357551<sp/>=<sp/>Body<sp/>Radiation<sp/>Flux:<sp/>&lt;&lt;1&gt;&gt;<sp/>kW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357555&quot;</highlight><highlight class="normal">,<sp/>(bodyAlbedoFlux<sp/>*<sp/>0.001d).ToString(</highlight><highlight class="stringliteral">&quot;N5&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357555<sp/>=<sp/>Body<sp/>Albedo<sp/>Flux:<sp/>&lt;&lt;1&gt;&gt;<sp/>kW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label(Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_357559&quot;</highlight><highlight class="normal">,<sp/>convectiveTotal.ToString(</highlight><highlight class="stringliteral">&quot;N3&quot;</highlight><highlight class="normal">)),<sp/>labelStyle);<sp/></highlight><highlight class="comment">//#autoLOC_357559<sp/>=<sp/>Convective<sp/>Heat<sp/>Load:<sp/>&lt;&lt;1&gt;&gt;<sp/>kJ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button(<ref refid="class_k_s_p_1_1_localization_1_1_localizer" kindref="compound">Localizer</ref>.<ref refid="class_k_s_p_1_1_localization_1_1_localizer_1aa9e06ba428dbe1d6ccc33eebf7c12478" kindref="member">Format</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6001910&quot;</highlight><highlight class="normal">),<sp/>buttonStyle))<sp/></highlight><highlight class="comment">//#autoLOC_6001910<sp/>=<sp/>Reset<sp/>Conv.<sp/>Counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aero_g_u_i_1a6a11cd55d0c82f941ad23bca44096cc9" kindref="member">convectiveTotal</ref><sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndVertical();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.DragWindow();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/UI Scripts/AeroGUI.cs"/>
  </compounddef>
</doxygen>
