<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4" kind="struct" prot="public">
    <compoundname>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; LinkedHeadTail&lt; T &gt;&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a8e335c25a468b599e861f27a87e26ec9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
<para>The number of elements in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="198" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab5a0542d616ed2d266f781e91e687e66" prot="public" static="no" mutable="no">
        <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; T &gt;</type>
        <definition>Linked&lt;T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
<para>The first node in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="188" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab7595fa388751de018c8d9330ce5eee1" prot="public" static="no" mutable="no">
        <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; T &gt;</type>
        <definition>Linked&lt;T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
<para>The last node in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="193" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1af3cd63550befbbf8d3df84c8066b9c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.AddTo&lt; K &gt;</definition>
        <argsstring>(Lookup&lt; K, T &gt; lookup, DelegateFunc&lt; T, K &gt; selector)</argsstring>
        <name>AddTo&lt; K &gt;</name>
        <param>
          <type>Lookup&lt; K, T &gt;</type>
          <declname>lookup</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, K &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Adds the nodes in the list to the specified lookup using the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="390" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="390" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a97616d3d22a7811540ab2cebc8b8cbdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.AddTo&lt; K, P &gt;</definition>
        <argsstring>(Lookup&lt; K, T &gt; lookup, DelegateFunc&lt; T, P, K &gt; selector, P parameter)</argsstring>
        <name>AddTo&lt; K, P &gt;</name>
        <param>
          <type>Lookup&lt; K, T &gt;</type>
          <declname>lookup</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, P, K &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Adds the nodes in the list to the specified lookup using the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="408" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="408" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1af6dae4048203a1542549123fe83fae36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Append</definition>
        <argsstring>(T value)</argsstring>
        <name>Append</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Appends a pooled node with with specified value to the end of the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="254" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="254" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a327071afac05603869929d416e454f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Append</definition>
        <argsstring>(Linked&lt; T &gt; node)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; T &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Appends the specified node to the end of the list. </para>        </briefdescription>
        <detaileddescription>
<para>The node links will be traversed to determine the new tail and count.</para><para>If the specified node is null, the list will not be modified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="272" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="272" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa31d5c7c7f5040cd9b0264d34a910a48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Append</definition>
        <argsstring>(LinkedHeadTail&lt; T &gt; other)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the specified list to the end of this list. </para>        </briefdescription>
        <detaileddescription>
<para>This list and the specified list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour.</para><para>Calling this method will invalidate the specified list and any variables containing its nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="296" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="296" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aad3a4e7fcf58f658b937b849a5771317" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
<para>Releases the head of the list to the node pool. </para>        </briefdescription>
        <detaileddescription>
<para>The list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="333" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="333" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa6716ddcceb0905b0702db1d9170dcd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.DisposeInBackground</definition>
        <argsstring>()</argsstring>
        <name>DisposeInBackground</name>
        <briefdescription>
<para>Adds the head of the list to the disposal queue. </para>        </briefdescription>
        <detaileddescription>
<para>The list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="319" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="319" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ad926c3b5acb0cedb0e94db6730b2d9fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Equals</definition>
        <argsstring>(object other)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="229" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ad5c12ba113f5d27458e6a6ac00ca7713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.Equals</definition>
        <argsstring>(LinkedHeadTail&lt; T &gt; other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="233" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a3e539f59307b1e8f0c912d0a7789b502" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="237" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.LinkedHeadTail</definition>
        <argsstring>(T value)</argsstring>
        <name>LinkedHeadTail</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns a list containing a single node with the specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="203" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a702d308909924256b9c073a14a35893f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.LinkedHeadTail</definition>
        <argsstring>(Linked&lt; T &gt; head)</argsstring>
        <name>LinkedHeadTail</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; T &gt;</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Returns a list that starts with the specified node. </para>        </briefdescription>
        <detaileddescription>
<para>The constructor will traverse the node links to set the tail and count fields.</para><para>If the specified node is null, the resulting list will be empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="212" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="212" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a81430f879ca09b228543783c2cc0a5fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.SlinqAndDispose</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndDispose</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in the list is transferred to the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>. When the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is disposed, the nodes will be added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="371" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="371" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a9d557fe1149ca527ec8ca31129ac8c3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.SlinqAndKeep</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndKeep</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list without reliquishing ownership of the nodes. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for making sure the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is not used after the nodes are modified or returned to the pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="351" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a72db29678cf6ebf9661e68f2987c3d3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.SlinqAndKeep</definition>
        <argsstring>(BacktrackDetector bd)</argsstring>
        <name>SlinqAndKeep</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_context_1_1_backtrack_detector" kindref="compound">BacktrackDetector</ref></type>
          <declname>bd</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list without reliquishing ownership of the nodes. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for making sure the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is not used after the nodes are modified or returned to the pool.</para><para>If backtrack detection is enabled, the supplied backtrack detector can be returned to the pool using its TryReleaseShared method to prevent subsequent enumeration of the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="362" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a7112b7a858f390460d15ab2063735fa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.ToLookup&lt; K &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, K &gt; selector)</argsstring>
        <name>ToLookup&lt; K &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, K &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Returns a pooled lookup with the default key comparer containing the nodes in the list as partitioned by the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="426" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="426" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a7c04b1a773aa1df8d15801f113926825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.ToLookup&lt; K &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, K &gt; selector, IEqualityComparer&lt; K &gt; comparer)</argsstring>
        <name>ToLookup&lt; K &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, K &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>IEqualityComparer&lt; K &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
<para>Returns a pooled lookup with the specified key comparer containing the nodes in the list as partitioned by the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="435" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="435" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab14edd482a72f295a14d39ca69bbc9ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.ToLookup&lt; K, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, K &gt; selector, P parameter)</argsstring>
        <name>ToLookup&lt; K, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, K &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a pooled lookup with the default key comparer containing the nodes in the list as partitioned by the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="444" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="444" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ac77678ae785197a43bbfafd3f5b7799e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.ToLookup&lt; K, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, K &gt; selector, P parameter, IEqualityComparer&lt; K &gt; comparer)</argsstring>
        <name>ToLookup&lt; K, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, K &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>IEqualityComparer&lt; K &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
<para>Returns a pooled lookup with the specified key comparer containing the nodes in the list as partitioned by the specified key selector. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in this list is transerred to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="453" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="453" bodyend="455"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a351e1ec8a8f717d517d3141b62bf95e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.operator!=</definition>
        <argsstring>(LinkedHeadTail&lt; T &gt; lhs, LinkedHeadTail&lt; T &gt; rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="245" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa72c501b31008a9f3c395141c16610f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;.operator==</definition>
        <argsstring>(LinkedHeadTail&lt; T &gt; lhs, LinkedHeadTail&lt; T &gt; rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" kindref="member">LinkedHeadTail</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="241" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="241" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a singly linked list. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="78789">
        <label>Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;</label>
        <link refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4"/>
        <childnode refid="78790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78790">
        <label>IEquatable&lt; LinkedHeadTail&lt; T &gt;&gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="78791">
        <label>Smooth.Slinq.Collections.LinkedHeadTail&lt; T &gt;</label>
        <link refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4"/>
        <childnode refid="78792" relation="public-inheritance">
        </childnode>
        <childnode refid="78793" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
      </node>
      <node id="78794">
        <label>IDisposable</label>
      </node>
      <node id="78792">
        <label>IEquatable&lt; LinkedHeadTail&lt; T &gt;&gt;</label>
      </node>
      <node id="78793">
        <label>Smooth.Slinq.Collections.Linked&lt; T &gt;</label>
        <link refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked_3_01_t_01_4"/>
        <childnode refid="78794" relation="public-inheritance">
        </childnode>
        <childnode refid="78793" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="184" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="184" bodyend="459"/>
    <listofallmembers>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1af3cd63550befbbf8d3df84c8066b9c7f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>AddTo&lt; K &gt;</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a97616d3d22a7811540ab2cebc8b8cbdb" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>AddTo&lt; K, P &gt;</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1af6dae4048203a1542549123fe83fae36" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a327071afac05603869929d416e454f8d" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa31d5c7c7f5040cd9b0264d34a910a48" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a8e335c25a468b599e861f27a87e26ec9" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>count</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aad3a4e7fcf58f658b937b849a5771317" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Dispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa6716ddcceb0905b0702db1d9170dcd8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>DisposeInBackground</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ad926c3b5acb0cedb0e94db6730b2d9fb" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ad5c12ba113f5d27458e6a6ac00ca7713" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a3e539f59307b1e8f0c912d0a7789b502" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>GetHashCode</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab5a0542d616ed2d266f781e91e687e66" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>head</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a96b6ed78e86c6f5920db904553328574" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>LinkedHeadTail</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a702d308909924256b9c073a14a35893f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>LinkedHeadTail</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a351e1ec8a8f717d517d3141b62bf95e0" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>operator!=</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1aa72c501b31008a9f3c395141c16610f8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>operator==</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a81430f879ca09b228543783c2cc0a5fb" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>SlinqAndDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a9d557fe1149ca527ec8ca31129ac8c3e" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>SlinqAndKeep</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a72db29678cf6ebf9661e68f2987c3d3f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>SlinqAndKeep</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab7595fa388751de018c8d9330ce5eee1" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>tail</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a7112b7a858f390460d15ab2063735fa4" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>ToLookup&lt; K &gt;</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1a7c04b1a773aa1df8d15801f113926825" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>ToLookup&lt; K &gt;</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ab14edd482a72f295a14d39ca69bbc9ad" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>ToLookup&lt; K, P &gt;</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_t_01_4_1ac77678ae785197a43bbfafd3f5b7799e" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; T &gt;</scope><name>ToLookup&lt; K, P &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
