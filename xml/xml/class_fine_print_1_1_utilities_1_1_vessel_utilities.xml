<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_fine_print_1_1_utilities_1_1_vessel_utilities" kind="class" prot="public">
    <compoundname>FinePrint::Utilities::VesselUtilities</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1adf57e96bb58472d1f2a68fbcbb6bafec" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int FinePrint.Utilities.VesselUtilities.highestPodCapacity</definition>
        <argsstring></argsstring>
        <name>highestPodCapacity</name>
        <initializer>= int.MinValue</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="13" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1aef9a9a98c4c4c4d699d33943d329b150" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="no">
        <type>int</type>
        <definition>int FinePrint.Utilities.VesselUtilities.HighestPodCapacity</definition>
        <argsstring></argsstring>
        <name>HighestPodCapacity</name>
        <briefdescription>
<para>Determines the highest pod capacity in the game. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The highest pod capacity.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7a505ac6315ad67def45f208ed45958f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.ActiveVesselFallback</definition>
        <argsstring>(ref Vessel v, bool logging=true)</argsstring>
        <name>ActiveVesselFallback</name>
        <param>
          <type>ref <ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logging</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets a vessel to the active vessel if it is null and it is possible. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logging</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional flag to temporarily disable logging.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False if it cannot fall back but needs to.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="45" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="45" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a933f71f91614000ee5b66f0aeb8d2eb0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.VesselUtilities.ActualCrewCapacity</definition>
        <argsstring>(Vessel v=null)</argsstring>
        <name>ActualCrewCapacity</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for its actual crew capacity, works for protovessels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The crew capacity of the vessel.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="759" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="759" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a89fa4a6e01ee8766b4a43bca86de82bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dictionary&lt; <ref refid="class_vessel" kindref="compound">Vessel</ref>, <ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edb" kindref="member">VesselType</ref> &gt;</type>
        <definition>static Dictionary&lt;Vessel, VesselType&gt; FinePrint.Utilities.VesselUtilities.ClassifyAllVesselsAt</definition>
        <argsstring>(CelestialBody body, bool useVesselType=true)</argsstring>
        <name>ClassifyAllVesselsAt</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useVesselType</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Identifies the vessel type of all vessels at a particular celestial body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useVesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>Use part config vesselType if vessel cannot be classified.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dictionary of all vessels at the body and their types.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="554" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="554" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a15f976ba7c4a838eec1b22419b05918e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edb" kindref="member">VesselType</ref></type>
        <definition>static VesselType FinePrint.Utilities.VesselUtilities.ClassifyVesselType</definition>
        <argsstring>(Vessel v=null, bool useVesselType=true)</argsstring>
        <name>ClassifyVesselType</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useVesselType</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Classifies the type of a vessel based on its physical characteristics, not an arbitrarily defined type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useVesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>Use part config vesselType if vessel cannot be classified.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A VesselType describing the vessel.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="495" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="495" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a1ed5d0d153f44c4a85c5cf9383a5facc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.VesselUtilities.CrewTraitMissionAvailability</definition>
        <argsstring>(string trait, CelestialBody targetBody=null, Vessel excludeVessel=null)</argsstring>
        <name>CrewTraitMissionAvailability</name>
        <param>
          <type>string</type>
          <declname>trait</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>targetBody</declname>
          <defval>null</defval>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>excludeVessel</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Determines how many kerbals with a particular experience trait are available or already near the area of a mission. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trait</parametername>
</parameternamelist>
<parameterdescription>
<para>The trait name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetBody</parametername>
</parameternamelist>
<parameterdescription>
<para>The target body of the mission.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excludeVessel</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel to exclude in the search.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The amount of crew with that trait that are available for missions.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Tourists are treated a bit differently, we need to scan active and offered contracts, and look at where they are heading.</para><para>&lt; This tourist is heading to where our request is at anyway, and might want to visit our establishment.</para><para>&lt; Now for the ones in the wilderness. We want to find ones that are near the target body, but not on excludeVessel. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="974" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="974" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a9e0adb93a2236cd3d4833fcbbf0459f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.VesselUtilities.DiscoverVessel</definition>
        <argsstring>(Vessel v=null)</argsstring>
        <name>DiscoverVessel</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Marks a vessel as &quot;owned&quot; with the discovery system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="883" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="883" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7d58fde5bb5347959d6865f1f0641de1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 FinePrint.Utilities.VesselUtilities.EstimatePartSize</definition>
        <argsstring>(Part p)</argsstring>
        <name>EstimatePartSize</name>
        <param>
          <type><ref refid="class_part" kindref="compound">Part</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Estimates the size of a part, taking SkinnedMeshRenderer oddities into account. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The part.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The part size.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1307" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1307" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a2a82728d8862ead8e1108ff753726995" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_part" kindref="compound">Part</ref></type>
        <definition>static Part FinePrint.Utilities.VesselUtilities.FindFirstPartOrModuleName</definition>
        <argsstring>(List&lt; string &gt; partNames, List&lt; string &gt; moduleNames)</argsstring>
        <name>FindFirstPartOrModuleName</name>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>partNames</declname>
        </param>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>moduleNames</declname>
        </param>
        <briefdescription>
<para>Does a simple search for the first part that exists in a list of part and module names. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partNames</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of part names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleNames</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of module names.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first part found that has a part or module in the lists.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1337" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1337" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ab2083e234d036a23d80cb70b31ce19fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
        <definition>static Vessel FinePrint.Utilities.VesselUtilities.FindVesselWithPartIDs</definition>
        <argsstring>(List&lt; uint &gt; partIDs)</argsstring>
        <name>FindVesselWithPartIDs</name>
        <param>
          <type>List&lt; uint &gt;</type>
          <declname>partIDs</declname>
        </param>
        <briefdescription>
<para>Finds a vessel with the most part IDs from a given list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partIDs</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of part IDs.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The vessel containing the most of the part IDs.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; By following the largest chunk of a collection of parts, we can follow a vessel even if it blows up into a million pieces. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="450" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="450" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ae044b0daade28bd80f587fc2a6fbfac4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
        <definition>static Orbit FinePrint.Utilities.VesselUtilities.GenerateAdjustedVesselOrbit</definition>
        <argsstring>(double minimumDeviation, double modificationLength, int numberOfModifications, System.Random generator=null, Vessel v=null)</argsstring>
        <name>GenerateAdjustedVesselOrbit</name>
        <param>
          <type>double</type>
          <declname>minimumDeviation</declname>
        </param>
        <param>
          <type>double</type>
          <declname>modificationLength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberOfModifications</declname>
        </param>
        <param>
          <type><ref refid="_waypoint_manager_8cs_1a24953b19d956caa76c403684c71b4e5b" kindref="member">System.Random</ref></type>
          <declname>generator</declname>
          <defval>null</defval>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Returns a vessel&apos;s orbit with a slight modification by a certain percentage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minimumDeviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The matching deviation of the contract.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modificationLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the resulting adjustment after deviation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfModifications</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of properties of the orbit to modify.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generator</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional random generator to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A slightly modified orbit.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Do not attempt to adjust hyperbolic orbits. It ends badly.</para><para>&lt; Modifications will be to inclination, argument if eccentric, LAN if inclined, periapsis, and apoapsis.</para><para>&lt; LAN changes are not fun at horizontal inclinations.</para><para>&lt; And argument changes are not fun in circular orbits.</para><para>&lt; We want to modify a few properties (modCount), shuffle and remove all but those.</para><para>&lt; If inclination is negative, fix it and flip the LAN. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1073" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1073" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1afadb556779abd935192e18708254926f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_fine_print_1_1_utilities_1a2e4c758d9d90fd189d70ec824f692a37" kindref="member">FlightBand</ref></type>
        <definition>static FlightBand FinePrint.Utilities.VesselUtilities.GetFlightBand</definition>
        <argsstring>(double threshold, Vessel v=null)</argsstring>
        <name>GetFlightBand</name>
        <param>
          <type>double</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets the flight band of a vessel based on an altitude threshold. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>The border between high and low altitudes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flight band of the vessel.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="720" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="720" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1af404aa0ebd91f8c20282bb77ee9bafa8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; uint &gt;</type>
        <definition>static List&lt;uint&gt; FinePrint.Utilities.VesselUtilities.GetPartIDList</definition>
        <argsstring>(Vessel v=null)</argsstring>
        <name>GetPartIDList</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets a list of part IDs for a specific vessel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of part IDs.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="420" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="420" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a07ef602039c01c0d63db7c386184ed28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string FinePrint.Utilities.VesselUtilities.GetPartName</definition>
        <argsstring>(Part p)</argsstring>
        <name>GetPartName</name>
        <param>
          <type><ref refid="class_part" kindref="compound">Part</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Grabs the name of a part using its part info. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The part.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The part&apos;s name.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1372" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1372" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a34394db0cc71a383faeecc8940f02ec2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_vessel" kindref="compound">Vessel</ref> &gt;</type>
        <definition>static List&lt;Vessel&gt; FinePrint.Utilities.VesselUtilities.SpecificVesselClassAt</definition>
        <argsstring>(CelestialBody body, VesselType vesselType, bool requireOwned=false, bool excludeActive=false, bool useVesselType=true)</argsstring>
        <name>SpecificVesselClassAt</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edb" kindref="member">VesselType</ref></type>
          <declname>vesselType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>requireOwned</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>excludeActive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useVesselType</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Identifies the vessels at a particular celestial body and collects those of a particular type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel classification.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requireOwned</parametername>
</parameternamelist>
<parameterdescription>
<para>Skip unowned vessels.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excludeActive</parametername>
</parameternamelist>
<parameterdescription>
<para>Skip active vessels.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useVesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>Use part config vesselType if vessel cannot be classified.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of all vessels at the body of that classification.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="581" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="581" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a801f68a977dcd31d3c5e6f3070093a45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_vessel" kindref="compound">Vessel</ref> &gt;</type>
        <definition>static List&lt;Vessel&gt; FinePrint.Utilities.VesselUtilities.SpecificVesselClassAt</definition>
        <argsstring>(Vessel.Situations situation, CelestialBody body, VesselType vesselType, bool requireOwned=false, bool excludeActive=false, bool useVesselType=true)</argsstring>
        <name>SpecificVesselClassAt</name>
        <param>
          <type><ref refid="class_vessel_1acea90b73d9b4523383503ec82f2f63bb" kindref="member">Vessel.Situations</ref></type>
          <declname>situation</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edb" kindref="member">VesselType</ref></type>
          <declname>vesselType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>requireOwned</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>excludeActive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useVesselType</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Identifies the vessels at a particular celestial body and collects those of a particular type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>situation</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel situation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel classification.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requireOwned</parametername>
</parameternamelist>
<parameterdescription>
<para>Skip unowned vessels.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excludeActive</parametername>
</parameternamelist>
<parameterdescription>
<para>Skip active vessels.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useVesselType</parametername>
</parameternamelist>
<parameterdescription>
<para>Use part config vesselType if vessel cannot be classified.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of all vessels at the body of that classification.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="618" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="618" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a521672ecd7c88deebdbe405ed18d842e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselAtOrbit</definition>
        <argsstring>(Orbit o, double deviationWindow, Vessel v=null)</argsstring>
        <name>VesselAtOrbit</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviationWindow</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks whether a specific vessel is present at or near a specific orbit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>The specific orbit.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deviationWindow</parametername>
</parameternamelist>
<parameterdescription>
<para>The acceptable margin - percent value 0-&gt;100.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel is present at the orbit.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Check periapsis and apoapsis, enforce minimum deviation to prevent low orbits (Molniya) from becoming super hard to match.</para><para>&lt; Argdifference was originally argument of periapsis, but on horizontal orbits, use longitude of periapsis instead.</para><para>&lt; Only checks argument of periapsis on non-circular orbits. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1192" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1192" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1aafb1328a081a5f21ea55b1602fba57c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.VesselUtilities.VesselAtOrbitAccuracy</definition>
        <argsstring>(Orbit o, double deviationWindow, Vessel v=null)</argsstring>
        <name>VesselAtOrbitAccuracy</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviationWindow</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets the accuracy whether a specific vessel is present at or near a specific orbit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>The specific orbit.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>The accuracy we are expecting as a percentage. eg: 80% - pass in 80</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel is present at the orbit.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="1289" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="1289" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a2ab183156d3895ee40f05442c4777a27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_proto_crew_member" kindref="compound">ProtoCrewMember</ref> &gt;</type>
        <definition>static List&lt;ProtoCrewMember&gt; FinePrint.Utilities.VesselUtilities.VesselCrewWithTrait</definition>
        <argsstring>(string trait, Vessel v=null)</argsstring>
        <name>VesselCrewWithTrait</name>
        <param>
          <type>string</type>
          <declname>trait</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets a List of the ProtoCrewMembers on a vessel with a certain experience trait. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trait</parametername>
</parameternamelist>
<parameterdescription>
<para>The trait name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The crew with the trait.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="928" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="928" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1acd2f5b18b54393249016ec93019263e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.VesselUtilities.VesselCrewWithTraitCount</definition>
        <argsstring>(string trait, Vessel v=null)</argsstring>
        <name>VesselCrewWithTraitCount</name>
        <param>
          <type>string</type>
          <declname>trait</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets a count of the ProtoCrewMembers on a vessel with a certain experience trait. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trait</parametername>
</parameternamelist>
<parameterdescription>
<para>The trait name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The crew with the trait.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="950" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="950" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a42997724ea1c1e6a2d9386324fd15f31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasAnyModules</definition>
        <argsstring>(List&lt; string &gt; moduleList, Vessel v=null)</argsstring>
        <name>VesselHasAnyModules</name>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>moduleList</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for many modules at once, to save performance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moduleList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of module names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If any of the modules are on the ship.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="236" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="236" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1af4c619fe52c4e085931c7687dd621825" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasAnyParts</definition>
        <argsstring>(List&lt; string &gt; partList, Vessel v=null)</argsstring>
        <name>VesselHasAnyParts</name>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>partList</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for many parts at once, to save performance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of part names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If any of the parts are on the ship.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="192" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="192" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ae06b841c43a7607f4f1d7ac1ff66b7c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasAnyPartsOrModules</definition>
        <argsstring>(List&lt; string &gt; partList, List&lt; string &gt; moduleList, Vessel v=null)</argsstring>
        <name>VesselHasAnyPartsOrModules</name>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>partList</declname>
        </param>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>moduleList</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for many different things at once, to save performance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of part names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of module names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If any of the things are on the vessel.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Double check all of the parameters, redirect to appropriate methods if something&apos;s awry.</para><para>&lt; This gets pretty deep, but it&apos;s best to do this all in one loop, rather than multiple loops. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="283" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="283" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a6714d223eb38429379e89292a4864dc9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasModuleName</definition>
        <argsstring>(string moduleName, Vessel v=null)</argsstring>
        <name>VesselHasModuleName</name>
        <param>
          <type>string</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for a specific module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moduleName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel has that module.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="115" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="115" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1acb1ae4f798e43b9755631315bacb2846" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasPartName</definition>
        <argsstring>(string partName, Vessel v=null)</argsstring>
        <name>VesselHasPartName</name>
        <param>
          <type>string</type>
          <declname>partName</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for a specific part. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the part.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel has that part.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; <ref refid="class_part" kindref="compound">Part</ref> names cannot have underscores. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="72" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="72" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a60c69f49496e31e2d9a9b22b437daf08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselHasWheelsOnGround</definition>
        <argsstring>(Vessel v=null, params WheelType[] validWheelTypes)</argsstring>
        <name>VesselHasWheelsOnGround</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>params <ref refid="_module_wheel_base_8cs_1adcccfb96fcf18b118833297701ac5255" kindref="member">WheelType</ref>[]</type>
          <declname>validWheelTypes</declname>
        </param>
        <briefdescription>
<para>Determines whether the vessel is landed with wheels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validWheelTypes</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_wheel" kindref="compound">Wheel</ref> types that are checked.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel is landed with wheels.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="654" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="654" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ab9b6679e7a902a8e27fbf9f5f0ac80aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>static uint FinePrint.Utilities.VesselUtilities.VesselID</definition>
        <argsstring>(Vessel v=null)</argsstring>
        <name>VesselID</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Grabs the flightID of a vessel&apos;s root part. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="911" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="911" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7aeed0ab99a11b5dfc965dc68fa905c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselIsOwned</definition>
        <argsstring>(Vessel v=null)</argsstring>
        <name>VesselIsOwned</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks if a vessel is &quot;owned&quot; with the discovery system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="862" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="862" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a31b8b37c51d3cab6caa15e6cc3a49634" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.VesselUtilities.VesselLaunchedAfterID</definition>
        <argsstring>(uint launchID, Vessel v, params string[] ignore)</argsstring>
        <name>VesselLaunchedAfterID</name>
        <param>
          <type>uint</type>
          <declname>launchID</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>params string[]</type>
          <declname>ignore</declname>
        </param>
        <briefdescription>
<para>Makes sure a vessel was launched after a certain point. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>launchID</parametername>
</parameternamelist>
<parameterdescription>
<para>The launch ID to compare.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel to check.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ignore</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional part names to ignore in the check.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the vessel was launched after the given ID.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="790" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="790" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a4a3b76e967e0d0a858e6211ffa597f7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.VesselUtilities.VesselPartAndModuleCount</definition>
        <argsstring>(List&lt; string &gt; partList, List&lt; string &gt; moduleList, Vessel v=null)</argsstring>
        <name>VesselPartAndModuleCount</name>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>partList</declname>
        </param>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>moduleList</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Checks a vessel for many different things at once, to save performance, returns full amount </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of part names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleList</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of module names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The full amount of matches.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; This gets pretty deep, but it&apos;s best to do this all in one loop, rather than multiple loops. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="353" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="353" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a9cbb45a287881f0f5b83b28a27074804" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.VesselUtilities.VesselResourceAmount</definition>
        <argsstring>(string resourceName, Vessel v=null)</argsstring>
        <name>VesselResourceAmount</name>
        <param>
          <type>string</type>
          <declname>resourceName</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Calculates how much of a particular resource is on a vessel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resourceName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the resource.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel if not ActiveVessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>How much of the resource is on the vessel.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="152" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="152" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" line="12" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/VesselUtilities.cs" bodystart="11" bodyend="1379"/>
    <listofallmembers>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7a505ac6315ad67def45f208ed45958f" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>ActiveVesselFallback</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a933f71f91614000ee5b66f0aeb8d2eb0" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>ActualCrewCapacity</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a89fa4a6e01ee8766b4a43bca86de82bb" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>ClassifyAllVesselsAt</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a15f976ba7c4a838eec1b22419b05918e" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>ClassifyVesselType</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a1ed5d0d153f44c4a85c5cf9383a5facc" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>CrewTraitMissionAvailability</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a9e0adb93a2236cd3d4833fcbbf0459f4" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>DiscoverVessel</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7d58fde5bb5347959d6865f1f0641de1" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>EstimatePartSize</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a2a82728d8862ead8e1108ff753726995" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>FindFirstPartOrModuleName</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ab2083e234d036a23d80cb70b31ce19fe" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>FindVesselWithPartIDs</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ae044b0daade28bd80f587fc2a6fbfac4" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>GenerateAdjustedVesselOrbit</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1afadb556779abd935192e18708254926f" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>GetFlightBand</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1af404aa0ebd91f8c20282bb77ee9bafa8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>GetPartIDList</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a07ef602039c01c0d63db7c386184ed28" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>GetPartName</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1aef9a9a98c4c4c4d699d33943d329b150" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>HighestPodCapacity</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1adf57e96bb58472d1f2a68fbcbb6bafec" prot="private" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>highestPodCapacity</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a34394db0cc71a383faeecc8940f02ec2" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>SpecificVesselClassAt</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a801f68a977dcd31d3c5e6f3070093a45" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>SpecificVesselClassAt</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a521672ecd7c88deebdbe405ed18d842e" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselAtOrbit</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1aafb1328a081a5f21ea55b1602fba57c8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselAtOrbitAccuracy</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a2ab183156d3895ee40f05442c4777a27" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselCrewWithTrait</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1acd2f5b18b54393249016ec93019263e7" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselCrewWithTraitCount</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a42997724ea1c1e6a2d9386324fd15f31" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasAnyModules</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1af4c619fe52c4e085931c7687dd621825" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasAnyParts</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ae06b841c43a7607f4f1d7ac1ff66b7c1" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasAnyPartsOrModules</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a6714d223eb38429379e89292a4864dc9" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasModuleName</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1acb1ae4f798e43b9755631315bacb2846" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasPartName</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a60c69f49496e31e2d9a9b22b437daf08" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselHasWheelsOnGround</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1ab9b6679e7a902a8e27fbf9f5f0ac80aa" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselID</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a7aeed0ab99a11b5dfc965dc68fa905c2" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselIsOwned</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a31b8b37c51d3cab6caa15e6cc3a49634" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselLaunchedAfterID</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a4a3b76e967e0d0a858e6211ffa597f7e" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselPartAndModuleCount</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_vessel_utilities_1a9cbb45a287881f0f5b83b28a27074804" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::VesselUtilities</scope><name>VesselResourceAmount</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
