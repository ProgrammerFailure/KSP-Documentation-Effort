<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_packages_2_vehicle_physics_pro_2_core_2_vehicle_01_physics_01core_2_editor_2_inspectors_2_wheel_collider_inspector_8cs" kind="file">
    <compoundname>WheelColliderInspector.cs</compoundname>
    <innerclass refid="class_vehicle_physics_1_1_editor_tools_1_1_wheel_collider_inspector" prot="public">VehiclePhysics::EditorTools::WheelColliderInspector</innerclass>
    <innernamespace refid="namespace_vehicle_physics_1_1_editor_tools">VehiclePhysics::EditorTools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Vehicle<sp/>Physics<sp/>Pro:<sp/>advanced<sp/>vehicle<sp/>physics<sp/>kit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>©<sp/>2011-2019<sp/>Angel<sp/>Garcia<sp/>&quot;Edy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://vehiclephysics.com<sp/>|<sp/>@VehiclePhysics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>EdyCommonTools;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>EdyCommonTools.EditorTools;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">VehiclePhysics.EditorTools</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">[CustomEditor(typeof(VPWheelCollider)),<sp/>CanEditMultipleObjects]</highlight></codeline>
<codeline lineno="18" refid="class_vehicle_physics_1_1_editor_tools_1_1_wheel_collider_inspector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vehicle_physics_1_1_editor_tools_1_1_wheel_collider_inspector" kindref="compound">WheelColliderInspector</ref><sp/>:<sp/><ref refid="class_vehicle_physics_1_1_editor_tools_1_1_v_p_inspector" kindref="compound">VPInspector</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_referencePos<sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_showSuspensionData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawInspectorGUI<sp/>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinLabelWidth(120);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propMass<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Mass<sp/>of<sp/>the<sp/>wheel<sp/>assembly<sp/>(Kg)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propRadius<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;radius&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Radius&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Radius<sp/>of<sp/>the<sp/>wheel<sp/>and<sp/>tire<sp/>(m)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>propMass.floatValue;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>propRadius.floatValue;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inertia<sp/>=<sp/>0.5f<sp/>*<sp/>mass<sp/>*<sp/>radius<sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Inertia&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.00}<sp/>Kg·m²&quot;</highlight><highlight class="normal">,<sp/>inertia),<sp/></highlight><highlight class="stringliteral">&quot;Inertia<sp/>is<sp/>approximated<sp/>as<sp/>½mr²&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Space();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;center&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Position<sp/>for<sp/>the<sp/>WheelCollider<sp/>with<sp/>regards<sp/>to<sp/>this<sp/>game<sp/>object.<sp/>WheelCollider<sp/>should<sp/>be<sp/>located<sp/>at<sp/>the<sp/>outer<sp/>bound<sp/>of<sp/>the<sp/>visual<sp/>wheel.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suspension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHeader(</highlight><highlight class="stringliteral">&quot;Suspension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indent();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propSuspensionDistance<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;suspensionDistance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Distance&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>extension<sp/>distance<sp/>of<sp/>wheel<sp/>suspension<sp/>(m)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;suspensionAnchor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Anchor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Relative<sp/>position<sp/>of<sp/>the<sp/>suspension<sp/>travel<sp/>with<sp/>regards<sp/>to<sp/>this<sp/>game<sp/>object.<sp/>Use<sp/>for<sp/>matching<sp/>the<sp/>suspension<sp/>travel<sp/>with<sp/>the<sp/>position<sp/>of<sp/>the<sp/>wheel<sp/>in<sp/>the<sp/>3D<sp/>model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propSpringRate<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;springRate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Spring<sp/>Rate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Spring<sp/>rate<sp/>in<sp/>N/m.<sp/>Springs<sp/>sustain<sp/>the<sp/>weight<sp/>of<sp/>the<sp/>vehicle.<sp/>Spring<sp/>force<sp/>will<sp/>be<sp/>calculated<sp/>as<sp/>Force<sp/>=<sp/>springRate<sp/>*<sp/>contactDepth.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propDamperRate<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;damperRate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Damper<sp/>Rate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Damper<sp/>rate<sp/>in<sp/>N/ms-1.<sp/>Dampers<sp/>absorb<sp/>the<sp/>oscillation<sp/>at<sp/>the<sp/>springs.<sp/>Suspension<sp/>force<sp/>is<sp/>calculated<sp/>as<sp/>Force<sp/>=<sp/>springRate<sp/>*<sp/>contactDepth<sp/>+<sp/>damperRate<sp/>*<sp/>contactSpeed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>multi-object<sp/>with<sp/>different<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canShowData<sp/>=<sp/>!propSuspensionDistance.hasMultipleDifferentValues</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!propSpringRate.hasMultipleDifferentValues</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!propDamperRate.hasMultipleDifferentValues;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suspension<sp/>specifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canShowData)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>suspensionDistance<sp/>=<sp/>propSuspensionDistance.floatValue;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>springRate<sp/>=<sp/>propSpringRate.floatValue;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>damperRate<sp/>=<sp/>propDamperRate.floatValue;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxForce<sp/>=<sp/>suspensionDistance<sp/>*<sp/>springRate;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxWeight<sp/>=<sp/>maxForce<sp/>/<sp/>9.81f;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>currentCol<sp/>=<sp/>GUI.contentColor;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.contentColor<sp/>=<sp/>Color.white<sp/>*<sp/>0.8f;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Max<sp/>force&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.}<sp/>N<sp/><sp/>({1,0:0.}<sp/>Kg)&quot;</highlight><highlight class="normal">,<sp/>maxForce,<sp/>maxWeight),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>applied<sp/>by<sp/>the<sp/>suspension<sp/>at<sp/>the<sp/>maximum<sp/>compression<sp/>(and<sp/>the<sp/>equivalent<sp/>weight)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_showSuspensionData<sp/>=<sp/>CommonEditorTools.LayoutFoldout(m_showSuspensionData,<sp/></highlight><highlight class="stringliteral">&quot;Suspension<sp/>analysis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Tool<sp/>for<sp/>analysing<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>suspension<sp/>at<sp/>a<sp/>given<sp/>compression<sp/>ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_showSuspensionData)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.BeginVertical(</highlight><highlight class="stringliteral">&quot;HelpBox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinLabelWidth(133);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Space(5);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>live<sp/>data<sp/>on<sp/>play<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_edy_common_tools_1_1_editor_tools_1_1_common_editor_tools" kindref="compound">CommonEditorTools</ref>.<ref refid="class_edy_common_tools_1_1_editor_tools_1_1_common_editor_tools_1aac2ea1b99d8aa45d4ea31a95a5803956" kindref="member">IsActiveAndPlaying</ref>((MonoBehaviour)target))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref><sp/>wheelCol<sp/>=<sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref>)serializedObject.targetObject;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelHit<sp/>hit;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(wheelCol.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1add3c81f9cf8dd95e9165f5980b65c064" kindref="member">GetGroundHit</ref>(out<sp/>hit))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referencePos<sp/>=<sp/>wheelCol.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a522e544574b14d9f91cf7ccb66a26a2c" kindref="member">GetContactDepth</ref>(hit.point,<sp/>wheelCol.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref>)<sp/>/<sp/>wheelCol.suspensionDistance;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referencePos<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_referencePos<sp/>=<sp/>EditorGUILayout.Slider(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Compression<sp/>ratio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Compression<sp/>ratio<sp/>for<sp/>the<sp/>analysis<sp/>data<sp/>to<sp/>be<sp/>calculated.\n\n0<sp/>=<sp/>fully<sp/>elongated,<sp/>1<sp/>=<sp/>fully<sp/>compressed\n\nThis<sp/>setting<sp/>doesn&apos;t<sp/>affect<sp/>the<sp/>actual<sp/>suspension<sp/>behavior.&quot;</highlight><highlight class="normal">),<sp/>m_referencePos,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>suspensionDistance<sp/>*<sp/>m_referencePos;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a800618943025315f869e4e1f09471012" kindref="member">F</ref><sp/>=<sp/>x<sp/>*<sp/>springRate;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>F<sp/>/<sp/>9.81f;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w0<sp/>=<sp/>Mathf.Sqrt(springRate<sp/>/<sp/>m);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a0d61f8370cad1d412f80b84d143e1257" kindref="member">C</ref><sp/>=<sp/>damperRate<sp/>/<sp/>(2.0f<sp/>*<sp/>Mathf.Sqrt(m<sp/>*<sp/>springRate));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w1<sp/>=<sp/>w0<sp/>*<sp/>Mathf.Sqrt(1.0f<sp/>-<sp/>C*<ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a0d61f8370cad1d412f80b84d143e1257" kindref="member">C</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>(1.0f<sp/>/<sp/>Time.fixedDeltaTime)<sp/>*<sp/>Mathf.Sqrt(m<sp/>/<sp/>springRate);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>dampingType<sp/>=<sp/>Mathf.RoundToInt(C<sp/>*<sp/>1000.0f)<sp/>==<sp/>1000<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;critically<sp/>damped&quot;</highlight><highlight class="normal"><sp/>:<sp/>C<sp/>&lt;<sp/>1.0f<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;underdamped&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;overdamped&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alternate<sp/>formulas<sp/>for<sp/>calculating<sp/>w0,<sp/>C<sp/>and<sp/>a:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>w0<sp/>=<sp/>Mathf.Sqrt(9.81f<sp/>/<sp/>x);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>C<sp/>=<sp/>damperRate<sp/>/<sp/>(2.0f<sp/>*<sp/>springRate<sp/>*<sp/>Mathf.Sqrt(x<sp/>/<sp/>9.81f));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>C<sp/>=<sp/>w0<sp/>*<sp/>damperRate<sp/>/<sp/>(2.0f<sp/>*<sp/>springRate);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>a<sp/>=<sp/>1.0f<sp/>/<sp/>(w0<sp/>*<sp/>Time.fixedDeltaTime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Contact<sp/>depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.000}<sp/>m&quot;</highlight><highlight class="normal">,<sp/>x),<sp/></highlight><highlight class="stringliteral">&quot;Distance<sp/>the<sp/>suspension<sp/>is<sp/>compressed<sp/>at<sp/>the<sp/>selected<sp/>compression<sp/>ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Suspension<sp/>force&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.}<sp/>N&quot;</highlight><highlight class="normal">,<sp/>F),<sp/></highlight><highlight class="stringliteral">&quot;Force<sp/>developed<sp/>by<sp/>suspension<sp/>springs<sp/>at<sp/>the<sp/>selected<sp/>compression<sp/>ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Sprung<sp/>mass&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.0}<sp/>Kg&quot;</highlight><highlight class="normal">,<sp/>m),<sp/></highlight><highlight class="stringliteral">&quot;Equivalent<sp/>sprung<sp/>mass<sp/>that<sp/>would<sp/>cause<sp/>the<sp/>selected<sp/>compression<sp/>ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(C<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Damped<sp/>frequency&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.000}<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>w1),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;Frequency<sp/>at<sp/>which<sp/>the<sp/>underdamped<sp/>suspension<sp/>oscillates<sp/>(Natural<sp/>Frequency<sp/>=<sp/>{0,0:0.000}<sp/>Hz)&quot;</highlight><highlight class="normal">,<sp/>w0));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Natural<sp/>frequency&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.000}<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>w0),<sp/></highlight><highlight class="stringliteral">&quot;Speed<sp/>at<sp/>which<sp/>the<sp/>spring<sp/>can<sp/>respond<sp/>to<sp/>changes<sp/>in<sp/>load&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Damping<sp/>ratio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.000}<sp/>({1})&quot;</highlight><highlight class="normal">,<sp/>C,<sp/>dampingType),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Whether<sp/>the<sp/>suspension<sp/>is<sp/>overdamped<sp/>(sluggish<sp/>suspension)<sp/>or<sp/>underdamped<sp/>(bouncy<sp/>suspension)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawInfoLabel(</highlight><highlight class="stringliteral">&quot;Alpha&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;{0,0:0.0}<sp/>(@<sp/>{1,0:0.}<sp/>Hz)&quot;</highlight><highlight class="normal">,<sp/>a,<sp/>1.0f<sp/>/<sp/>Time.fixedDeltaTime),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>simulation<sp/>steps<sp/>per<sp/>oscillating<sp/>cycle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Space(5);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button(</highlight><highlight class="stringliteral">&quot;Open<sp/>advanced<sp/>documentation&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help.BrowseURL(</highlight><highlight class="stringliteral">&quot;http://vehiclephysics.com/advanced/how-suspensions-work/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.EndVertical();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinLabelWidth(120);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.contentColor<sp/>=<sp/>currentCol;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Space();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHelpBox(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>show<sp/>suspension<sp/>data<sp/>when<sp/>selected<sp/>objects<sp/>have<sp/>multiple<sp/>different<sp/>suspension<sp/>values.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unindent();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visual<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHeader(</highlight><highlight class="stringliteral">&quot;Visual<sp/>objects&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>parts<sp/>of<sp/>the<sp/>suspension<sp/>and<sp/>wheel<sp/>assembly.<sp/>All<sp/>of<sp/>them<sp/>are<sp/>optional.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indent();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propSuspensionTransform<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;suspensionTransform&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Suspension&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Moves<sp/>vertically<sp/>as<sp/>for<sp/>the<sp/>suspension<sp/>position.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propCaliperTransform<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;caliperTransform&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Caliper&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Rotates<sp/>around<sp/>Y<sp/>axis<sp/>as<sp/>for<sp/>the<sp/>steering.<sp/>Also<sp/>affected<sp/>by<sp/>suspension.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SerializedProperty<sp/>propWheelTransform<sp/>=<sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;wheelTransform&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Wheel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Rotates<sp/>around<sp/>X<sp/>as<sp/>for<sp/>the<sp/>wheel&apos;s<sp/>spin.<sp/>Also<sp/>affected<sp/>by<sp/>suspension<sp/>and<sp/>steering.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>hierarchies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>wheelTransform<sp/>=<sp/>(Transform)propWheelTransform.objectReferenceValue;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>caliperTransform<sp/>=<sp/>(Transform)propCaliperTransform.objectReferenceValue;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>suspensionTransform<sp/>=<sp/>(Transform)propSuspensionTransform.objectReferenceValue;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wheelColliderCheck<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(suspensionTransform<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caliperTransform<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>suspensionTransform.IsChildOf(caliperTransform))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHelpBox(</highlight><highlight class="stringliteral">&quot;Suspension<sp/>should<sp/>not<sp/>be<sp/>child<sp/>of<sp/>Caliper.<sp/>Suspension<sp/>would<sp/>be<sp/>affected<sp/>by<sp/>steering.&quot;</highlight><highlight class="normal">,<sp/>MessageType.Warning);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelTransform<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>suspensionTransform.IsChildOf(wheelTransform))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHelpBox(</highlight><highlight class="stringliteral">&quot;Suspension<sp/>should<sp/>not<sp/>be<sp/>child<sp/>of<sp/>Wheel.<sp/>Suspension<sp/>would<sp/>be<sp/>affected<sp/>by<sp/>wheel&apos;s<sp/>spin.&quot;</highlight><highlight class="normal">,<sp/>MessageType.Warning);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(suspensionTransform.GetComponentInChildren&lt;<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref>&gt;()<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelColliderCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caliperTransform<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelTransform<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>caliperTransform.IsChildOf(wheelTransform))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHelpBox(</highlight><highlight class="stringliteral">&quot;Caliper<sp/>should<sp/>not<sp/>be<sp/>child<sp/>of<sp/>Wheel.<sp/>Caliper<sp/>would<sp/>be<sp/>affected<sp/>by<sp/>wheel&apos;s<sp/>spin.&quot;</highlight><highlight class="normal">,<sp/>MessageType.Warning);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caliperTransform.GetComponentInChildren&lt;<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref>&gt;()<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelColliderCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelTransform<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelTransform.GetComponentInChildren&lt;<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref>&gt;()<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelColliderCheck<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wheelColliderCheck)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawHelpBox(</highlight><highlight class="stringliteral">&quot;VPWheelCollider<sp/>cannot<sp/>be<sp/>part<sp/>of<sp/>the<sp/>visual<sp/>meshes,<sp/>nor<sp/>any<sp/>of<sp/>their<sp/>children.&quot;</highlight><highlight class="normal">,<sp/>MessageType.Error);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visual<sp/>ground<sp/>penetration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinLabelWidth(135);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Space();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;groundPenetration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ground<sp/>Penetration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Distance<sp/>the<sp/>visual<sp/>objects<sp/>are<sp/>pushed<sp/>into<sp/>the<sp/>terrain<sp/>(m).<sp/>Useful<sp/>for<sp/>simulating<sp/>wheel&apos;s<sp/>deformation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetMinLabelWidth(200);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;disableSuspensionMovement&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Disable<sp/>Suspension<sp/>Movement&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Keeps<sp/>the<sp/>visual<sp/>suspension<sp/>elements<sp/>static,<sp/>so<sp/>the<sp/>suspension<sp/>appears<sp/>to<sp/>come<sp/>from<sp/>the<sp/>tire<sp/>itself.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawProperty(</highlight><highlight class="stringliteral">&quot;hideWheelOnDisable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hide<sp/>Wheel<sp/>On<sp/>Disable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hides<sp/>the<sp/>Wheel<sp/>visual<sp/>object<sp/>if<sp/>the<sp/>VPWheelCollider<sp/>component<sp/>is<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unindent();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>[DrawGizmo(GizmoType.InSelectionHierarchy)]</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawWheelColliderGizmo<sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref><sp/>src,<sp/>GizmoType<sp/>gizmoType)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6ce52859a2486ee26a4a3256a98ef412" kindref="member">hidden</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>suspensionTravel<sp/>=<sp/>Application.isPlaying?<sp/>src.lastRuntimeSuspensionTravel<sp/>:<sp/>src.suspensionDistance;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>startPosition<sp/>=<sp/>src.transform.TransformPoint(src.center);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>topPosition<sp/>=<sp/>startPosition<sp/>+<sp/>src.transform.up<sp/>*<sp/>(1.0f<sp/>-<sp/>src.suspensionAnchor)<sp/>*<sp/>src.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>topLimit<sp/>=<sp/>topPosition<sp/>+<sp/>src.transform.up<sp/>*<sp/>src.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>bottomPosition<sp/>=<sp/>topPosition<sp/>-<sp/>src.transform.up<sp/>*<sp/>suspensionTravel;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>from<sp/>this<sp/>gameobject&apos;s<sp/>position<sp/>to<sp/>the<sp/>actual<sp/>wheel<sp/>position<sp/>given<sp/>by<sp/>center.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/><ref refid="class_edy_common_tools_1_1_g_color" kindref="compound">GColor</ref>.<ref refid="class_edy_common_tools_1_1_g_color_1a6df232897eae2a4306d2ec0fc76c1bdb" kindref="member">accentDeepOrange</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(src.transform.position,<sp/>startPosition);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>line<sp/>a&apos;la<sp/>WheelCollider,<sp/>including<sp/>suspension<sp/>and<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/>GColor.accentGreen;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(topPosition,<sp/>topPosition<sp/>-<sp/>src.transform.up<sp/>*<sp/>(src.radius<sp/>+<sp/>suspensionTravel));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wheel<sp/>disc<sp/>and<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Disc<sp/>matches<sp/>the<sp/>actual<sp/>position<sp/>of<sp/>the<sp/>wheel<sp/>mesh,<sp/>including<sp/>ground<sp/>penetration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Line<sp/>shows<sp/>the<sp/>position<sp/>of<sp/>the<sp/>suspension<sp/>along<sp/>the<sp/>suspension<sp/>travel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>suspensionPosition;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Application.isPlaying)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wheelPosition<sp/>=<sp/>src.visualGrounded?<sp/>src.visualHit.distance<sp/>-<sp/>src.radius*2.0f<sp/>:<sp/>suspensionTravel;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelCenter<sp/>=<sp/>topPosition<sp/>-<sp/>src.transform.up<sp/>*<sp/>wheelPosition;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>suspensionCenter<sp/>=<sp/>topPosition<sp/>-<sp/>src.transform.up<sp/>*<sp/>wheelPosition;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelForward<sp/>=<sp/><sp/>Quaternion.AngleAxis(src.steerAngle,<sp/>src.transform.up)<sp/>*<sp/>src.transform.forward;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelRight<sp/>=<sp/>Quaternion.AngleAxis(src.<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad236a329c743f8b79b73d6aed78edf8e" kindref="member">steerAngle</ref>,<sp/>src.transform.up)<sp/>*<sp/>src.transform.right;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>becomes<sp/>red<sp/>when<sp/>hitting<sp/>the<sp/>limit<sp/>of<sp/>the<sp/>suspension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelPosition<sp/>&lt;=<sp/>0.005f)<sp/>Handles.color<sp/>=<sp/>GColor.solidRed;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawWireDisc(wheelCenter,<sp/>wheelRight,<sp/>src.radius);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(suspensionCenter<sp/>-<sp/>wheelForward<sp/>*<sp/>src.radius,<sp/>suspensionCenter<sp/>+<sp/>wheelForward<sp/>*<sp/>src.radius);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspensionPosition<sp/>=<sp/>suspensionCenter;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawWireDisc(startPosition,<sp/>src.transform.right,<sp/>src.radius);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(startPosition<sp/>-<sp/>src.transform.forward<sp/>*<sp/>src.radius,<sp/>startPosition<sp/>+<sp/>src.transform.forward<sp/>*<sp/>src.radius);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspensionPosition<sp/>=<sp/>startPosition;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suspension<sp/>travel<sp/>and<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>suspensionHandleLen<sp/>=<sp/>src.radius<sp/>*<sp/>0.25f;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/>GColor.accentDeepOrange;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(topPosition<sp/>-<sp/>src.transform.forward<sp/>*<sp/>suspensionHandleLen,<sp/>topPosition<sp/>+<sp/>src.transform.forward<sp/>*<sp/>suspensionHandleLen);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(topPosition,<sp/>bottomPosition);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(bottomPosition<sp/>-<sp/>src.transform.forward<sp/>*<sp/>suspensionHandleLen,<sp/>bottomPosition<sp/>+<sp/>src.transform.forward<sp/>*<sp/>suspensionHandleLen);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>topLimitHandleLen<sp/>=<sp/>suspensionHandleLen<sp/>*<sp/>0.25f;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawWireArc(topPosition,<sp/>src.transform.right,<sp/>-src.transform.forward+src.transform.up*2,<sp/>60,<sp/>src.radius);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(topLimit<sp/>-<sp/>src.transform.up*topLimitHandleLen,<sp/>topLimit);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/>GColor.solidRed;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine(suspensionPosition,<sp/>bottomPosition);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Packages/VehiclePhysicsPro/Core/Vehicle Physics core/Editor/Inspectors/WheelColliderInspector.cs"/>
  </compounddef>
</doxygen>
