<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_compare_1_1_factory" kind="class" prot="public">
    <compoundname>Smooth::Compare::Factory</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_factory_1a4b2f137e7430b664d2c254362b1cdb5a" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Smooth.Compare.Factory.hashCodeSeed</definition>
        <argsstring></argsstring>
        <name>hashCodeSeed</name>
        <initializer>= 17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="16" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_factory_1a8ba6bed926bd47dd94f2ce6c7274709a" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Smooth.Compare.Factory.hashCodeStepMultiplier</definition>
        <argsstring></argsstring>
        <name>hashCodeStepMultiplier</name>
        <initializer>= 29</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="17" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1ab197417e90bd1448645f9dadbcb988ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; IComparer&lt; T &gt; &gt;</type>
        <definition>static Option&lt;IComparer&lt;T&gt; &gt; Smooth.Compare.Factory.Comparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>Comparer&lt; T &gt;</name>
        <briefdescription>
<para>Returns an option containing a sort order comparer for type T, or None if no comparer can be created. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create comparers for the following types:</para><para>System.Collections.KeyValuePair&lt;,&gt;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="28" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="28" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1addd240e91757c93321bfb2e45db8e788" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; IEqualityComparer&lt; T &gt; &gt;</type>
        <definition>static Option&lt;IEqualityComparer&lt;T&gt; &gt; Smooth.Compare.Factory.EqualityComparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>EqualityComparer&lt; T &gt;</name>
        <briefdescription>
<para>Returns an option containing an equality comparer for type T, or None if no comparer can be created. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create comparers for the following types:</para><para>Enumerations, System.Collections.KeyValuePair&lt;,&gt;s, Value types T with a public T.Equals(T) method or ==(T,T) operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="53" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="53" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a981174ea5544a1ea1723a18a92482d01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; Expression &gt;</type>
        <definition>static Option&lt;Expression&gt; Smooth.Compare.Factory.EqualsExpression</definition>
        <argsstring>(Expression l, Expression r)</argsstring>
        <name>EqualsExpression</name>
        <param>
          <type>Expression</type>
          <declname>l</declname>
        </param>
        <param>
          <type>Expression</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Returns an option containing an expression that compares l and r for equality without casting, or None if no such comparison can be found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="89" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="89" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1abe35fa51a787a58b4e69f8fcd5cf0442" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; Expression, MethodInfo &gt;</type>
        <definition>static Smooth.Algebraics.Tuple&lt;Expression, MethodInfo&gt; Smooth.Compare.Factory.ExistingComparer</definition>
        <argsstring>(Type type)</argsstring>
        <name>ExistingComparer</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns a tuple containing: an Expression for the default comparer for the specified type, and a MethodInfo for the comparer&apos;s Compare(T, T) method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="137" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="137" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a741ada8b58902c9da3ee233a52290574" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; Expression, MethodInfo &gt;</type>
        <definition>static Smooth.Algebraics.Tuple&lt;Expression, MethodInfo&gt; Smooth.Compare.Factory.ExistingComparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>ExistingComparer&lt; T &gt;</name>
        <briefdescription>
<para>Returns a tuple containing: an Expression for the default sort order comparer for type T, and a MethodInfo for the comparer&apos;s Compare(T, T) method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="128" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a47fde02e557b4f81fad17dcbdc7a5ebe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; Expression, MethodInfo, MethodInfo &gt;</type>
        <definition>static Smooth.Algebraics.Tuple&lt;Expression, MethodInfo, MethodInfo&gt; Smooth.Compare.Factory.ExistingEqualityComparer</definition>
        <argsstring>(Type type)</argsstring>
        <name>ExistingEqualityComparer</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns a tuple containing: an expression for the default equality comparer for the specified type, and a MethodInfo for the comparer&apos;s Equals(T, T) method, and a MethodInfo for the comparer&apos;s GetHashCode(T) method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="169" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="169" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a9aa5b2bf8db8922f26a631c753ee6919" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; Expression, MethodInfo, MethodInfo &gt;</type>
        <definition>static Smooth.Algebraics.Tuple&lt;Expression, MethodInfo, MethodInfo&gt; Smooth.Compare.Factory.ExistingEqualityComparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>ExistingEqualityComparer&lt; T &gt;</name>
        <briefdescription>
<para>Returns a tuple containing: an expression for the default equality comparer for type T, and a MethodInfo for the comparer&apos;s Equals(T, T) method, and a MethodInfo for the comparer&apos;s GetHashCode(T) method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="159" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="159" bodyend="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1af741c7e3e5b0db9220bcb88cea63658d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Expression</type>
        <definition>static Expression Smooth.Compare.Factory.HashCodeSeed</definition>
        <argsstring>()</argsstring>
        <name>HashCodeSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="78" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a1b53791aa850243bd2e19ed91af37cf1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Expression</type>
        <definition>static Expression Smooth.Compare.Factory.HashCodeStepMultiplier</definition>
        <argsstring>()</argsstring>
        <name>HashCodeStepMultiplier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="82" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1aa46ba805c26fd063db94689dc28f8f6e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IComparer&lt; T &gt;</type>
        <definition>static IComparer&lt;T&gt; Smooth.Compare.Factory.KeyValuePairComparer&lt; T &gt;</definition>
        <argsstring>(Type type)</argsstring>
        <name>KeyValuePairComparer&lt; T &gt;</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="190" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="190" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_factory_1a2ec27798048a282ad28d302025f593bf" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEqualityComparer&lt; T &gt;</type>
        <definition>static IEqualityComparer&lt;T&gt; Smooth.Compare.Factory.KeyValuePairEqualityComparer&lt; T &gt;</definition>
        <argsstring>(Type type)</argsstring>
        <name>KeyValuePairEqualityComparer&lt; T &gt;</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="223" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="223" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" line="15" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Factory.cs" bodystart="15" bodyend="256"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_compare_1_1_factory_1ab197417e90bd1448645f9dadbcb988ca" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>Comparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1addd240e91757c93321bfb2e45db8e788" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>EqualityComparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a981174ea5544a1ea1723a18a92482d01" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>EqualsExpression</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1abe35fa51a787a58b4e69f8fcd5cf0442" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>ExistingComparer</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a741ada8b58902c9da3ee233a52290574" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>ExistingComparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a47fde02e557b4f81fad17dcbdc7a5ebe" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>ExistingEqualityComparer</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a9aa5b2bf8db8922f26a631c753ee6919" prot="public" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>ExistingEqualityComparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1af741c7e3e5b0db9220bcb88cea63658d" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>HashCodeSeed</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a4b2f137e7430b664d2c254362b1cdb5a" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>hashCodeSeed</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a8ba6bed926bd47dd94f2ce6c7274709a" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>hashCodeStepMultiplier</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a1b53791aa850243bd2e19ed91af37cf1" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>HashCodeStepMultiplier</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1aa46ba805c26fd063db94689dc28f8f6e" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>KeyValuePairComparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_factory_1a2ec27798048a282ad28d302025f593bf" prot="private" virt="non-virtual"><scope>Smooth::Compare::Factory</scope><name>KeyValuePairEqualityComparer&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
