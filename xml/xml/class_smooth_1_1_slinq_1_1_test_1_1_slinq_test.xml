<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test" kind="class" prot="public">
    <compoundname>Smooth::Slinq::Test::SlinqTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <innerclass refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1_1_equals__1_3_01_t1_00_01_t2_01_4" prot="public">Smooth::Slinq::Test::SlinqTest::Equals_1&lt; T1, T2 &gt;</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a4d3924410bc4b3b623ac9de24d1a143f" prot="public" static="yes" mutable="no">
        <type>readonly DelegateFunc&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt;, <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt;, bool &gt;</type>
        <definition>readonly DelegateFunc&lt;Smooth.Algebraics.Tuple&lt;int, int&gt;, Smooth.Algebraics.Tuple&lt;int, int&gt;, bool&gt; Smooth.Slinq.Test.SlinqTest.eq</definition>
        <argsstring></argsstring>
        <name>eq</name>
        <initializer>= (a, b) =&gt; a == b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="18" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a03e28378d12d041579c1c5381cd3126b" prot="public" static="yes" mutable="no">
        <type>readonly IEqualityComparer&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt; &gt;</type>
        <definition>readonly IEqualityComparer&lt;Smooth.Algebraics.Tuple&lt;int, int&gt; &gt; Smooth.Slinq.Test.SlinqTest.eq_1</definition>
        <argsstring></argsstring>
        <name>eq_1</name>
        <initializer>= new Equals_1&lt;int, int&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="24" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a84eee5b53f7fda6981a74253048b3648" prot="public" static="yes" mutable="no">
        <type>readonly DelegateFunc&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int, int &gt;, <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int, int &gt;, bool &gt;</type>
        <definition>readonly DelegateFunc&lt;Smooth.Algebraics.Tuple&lt;int, int, int&gt;, Smooth.Algebraics.Tuple&lt;int, int, int&gt;, bool&gt; Smooth.Slinq.Test.SlinqTest.eq_t3</definition>
        <argsstring></argsstring>
        <name>eq_t3</name>
        <initializer>= (a, b) =&gt; a == b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a954d218bfb63b00306d48e3bf5cce067" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.loops</definition>
        <argsstring></argsstring>
        <name>loops</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="32" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a186a3918a545006f8de7d5f566565953" prot="public" static="yes" mutable="no">
        <type>readonly StringBuilder</type>
        <definition>readonly StringBuilder Smooth.Slinq.Test.SlinqTest.stringBuilder</definition>
        <argsstring></argsstring>
        <name>stringBuilder</name>
        <initializer>= new StringBuilder()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="27" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aa9d7b10cf3be5df3dc2dc252e1980d02" prot="public" static="yes" mutable="no">
        <type>readonly DelegateFunc&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt;, int &gt;</type>
        <definition>readonly DelegateFunc&lt;Smooth.Algebraics.Tuple&lt;int, int&gt;, int&gt; Smooth.Slinq.Test.SlinqTest.to_1</definition>
        <argsstring></argsstring>
        <name>to_1</name>
        <initializer>= t =&gt; t.Item1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="21" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a72a7b5095636fd18fef2c5445e094cd0" prot="public" static="yes" mutable="no">
        <type>readonly Func&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt;, int &gt;</type>
        <definition>readonly Func&lt;Smooth.Algebraics.Tuple&lt;int, int&gt;, int&gt; Smooth.Slinq.Test.SlinqTest.to_1f</definition>
        <argsstring></argsstring>
        <name>to_1f</name>
        <initializer>= t =&gt; t.Item1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="22" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a3aeb4a83bea33a4d0f90d5a5853cbbf1" prot="public" static="yes" mutable="no">
        <type>List&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt; &gt;</type>
        <definition>List&lt;Smooth.Algebraics.Tuple&lt;int, int&gt; &gt; Smooth.Slinq.Test.SlinqTest.tuples1</definition>
        <argsstring></argsstring>
        <name>tuples1</name>
        <initializer>= new List&lt;<ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt;int, int&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="29" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1ae6fcc69cabaee91a4dec6366120237c0" prot="public" static="yes" mutable="no">
        <type>List&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt; &gt;</type>
        <definition>List&lt;Smooth.Algebraics.Tuple&lt;int, int&gt; &gt; Smooth.Slinq.Test.SlinqTest.tuples2</definition>
        <argsstring></argsstring>
        <name>tuples2</name>
        <initializer>= new List&lt;<ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt;int, int&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="30" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a1f97f2c7c9c1b387a541e07c1ecb9b3f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.maxCount</definition>
        <argsstring></argsstring>
        <name>maxCount</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="35" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aae5688b2eaab2ce21aae33c95d624b54" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.maxValue</definition>
        <argsstring></argsstring>
        <name>maxValue</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="38" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1ab97645ce6d09e89dd3cba0d623472aef" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.minCount</definition>
        <argsstring></argsstring>
        <name>minCount</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a0921c27dda6d96871d602008248f72f9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.minValue</definition>
        <argsstring></argsstring>
        <name>minValue</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="37" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a163340d26d4cb9bcce1eca81354cb42b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Test.SlinqTest.speedLoops</definition>
        <argsstring></argsstring>
        <name>speedLoops</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="40" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a65e800e7329c0bcd369565481fafc6c8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Smooth.Slinq.Test.SlinqTest.testCorrectness</definition>
        <argsstring></argsstring>
        <name>testCorrectness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="42" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a918c9f52167eb570307342a681c573c7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Test.SlinqTest.LateUpdate</definition>
        <argsstring>()</argsstring>
        <name>LateUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="62" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="62" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a65b23a25b6d3fe332ef5f479216ec58b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LinkedList&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt; &gt;</type>
        <definition>LinkedList&lt;Smooth.Algebraics.Tuple&lt;int, int&gt; &gt; Smooth.Slinq.Test.SlinqTest.RemovableLinkedList</definition>
        <argsstring>()</argsstring>
        <name>RemovableLinkedList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="597" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="597" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aa8902e8bac792b7d0e1b1d378d317471" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; int, int &gt; &gt;</type>
        <definition>List&lt;Smooth.Algebraics.Tuple&lt;int, int&gt; &gt; Smooth.Slinq.Test.SlinqTest.RemovableList</definition>
        <argsstring>()</argsstring>
        <name>RemovableList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="593" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="593" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a571a9d9474cb3744a9398e2e84d29c4d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Test.SlinqTest.Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="44" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1af153c0ff809a8c43c06875c7fa8a26f6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Test.SlinqTest.TestCorrectness</definition>
        <argsstring>()</argsstring>
        <name>TestCorrectness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="75" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="75" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a0715b569ea9a9b1bd74c34951593796e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Test.SlinqTest.Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="56" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="56" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespace_smooth_1_1_slinq_1_1_test" kindref="compound">Test</ref> controller and (de)verifier for <ref refid="namespace_smooth_1_1_slinq" kindref="compound">Smooth.Slinq</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="150623">
        <label>MonoBehaviour</label>
      </node>
      <node id="150622">
        <label>Smooth.Slinq.Test.SlinqTest</label>
        <link refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test"/>
        <childnode refid="150623" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="150625">
        <label>MonoBehaviour</label>
      </node>
      <node id="150624">
        <label>Smooth.Slinq.Test.SlinqTest</label>
        <link refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test"/>
        <childnode refid="150625" relation="public-inheritance">
        </childnode>
        <childnode refid="150626" relation="usage">
          <edgelabel>tuples2</edgelabel>
          <edgelabel>eq_1</edgelabel>
          <edgelabel>to_1f</edgelabel>
          <edgelabel>to_1</edgelabel>
          <edgelabel>eq_t3</edgelabel>
          <edgelabel>stringBuilder</edgelabel>
          <edgelabel>loops</edgelabel>
          <edgelabel>eq</edgelabel>
          <edgelabel>tuples1</edgelabel>
        </childnode>
      </node>
      <node id="150626">
        <label>static</label>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" line="17" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Test/SlinqTest.cs" bodystart="17" bodyend="640"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a4d3924410bc4b3b623ac9de24d1a143f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>eq</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a03e28378d12d041579c1c5381cd3126b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>eq_1</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a84eee5b53f7fda6981a74253048b3648" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>eq_t3</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a918c9f52167eb570307342a681c573c7" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>LateUpdate</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a954d218bfb63b00306d48e3bf5cce067" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>loops</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a1f97f2c7c9c1b387a541e07c1ecb9b3f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>maxCount</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aae5688b2eaab2ce21aae33c95d624b54" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>maxValue</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1ab97645ce6d09e89dd3cba0d623472aef" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>minCount</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a0921c27dda6d96871d602008248f72f9" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>minValue</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a65b23a25b6d3fe332ef5f479216ec58b" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>RemovableLinkedList</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aa8902e8bac792b7d0e1b1d378d317471" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>RemovableList</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a163340d26d4cb9bcce1eca81354cb42b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>speedLoops</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a571a9d9474cb3744a9398e2e84d29c4d" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>Start</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a186a3918a545006f8de7d5f566565953" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>stringBuilder</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1af153c0ff809a8c43c06875c7fa8a26f6" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>TestCorrectness</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a65e800e7329c0bcd369565481fafc6c8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>testCorrectness</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1aa9d7b10cf3be5df3dc2dc252e1980d02" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>to_1</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a72a7b5095636fd18fef2c5445e094cd0" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>to_1f</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a3aeb4a83bea33a4d0f90d5a5853cbbf1" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>tuples1</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1ae6fcc69cabaee91a4dec6366120237c0" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>tuples2</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_test_1_1_slinq_test_1a0715b569ea9a9b1bd74c34951593796e" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Test::SlinqTest</scope><name>Update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
