<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4" kind="class" prot="public">
    <compoundname>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IDisposable</basecompoundref>
    <templateparamlist>
      <param>
        <type>K</type>
      </param>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a2c8c9c040f4d0df6061667a34c11f7d4" prot="private" static="yes" mutable="no">
        <type>readonly Stack&lt; Lookup&lt; K, T &gt; &gt;</type>
        <definition>readonly Stack&lt;Lookup&lt;K, T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <initializer>= new Stack&lt;Lookup&lt;K, T&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="12" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a04a539a5dd1f34b22b43ee16d368c3a7" prot="public" static="no" mutable="no">
        <type>readonly Dictionary&lt; K, LinkedHeadTail&lt; T &gt; &gt;</type>
        <definition>readonly Dictionary&lt;K, LinkedHeadTail&lt;T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.dictionary</definition>
        <argsstring></argsstring>
        <name>dictionary</name>
        <briefdescription>
<para>The dictionary used to map keys to lists of values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="22" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a268dc2da9c29e8d9ca3b91d6e72d78b2" prot="public" static="no" mutable="no">
        <type>LinkedHeadTail&lt; K &gt;</type>
        <definition>LinkedHeadTail&lt;K&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <briefdescription>
<para>The list of keys mapped by the lookup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="17" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a176a7fc282b853ee958c02fe1c5b3222" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Lookup</definition>
        <argsstring>()</argsstring>
        <name>Lookup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="24" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ac4197e7eb39506d9c37d8feff1fc126b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Lookup</definition>
        <argsstring>(IEqualityComparer&lt; K &gt; comparer)</argsstring>
        <name>Lookup</name>
        <param>
          <type>IEqualityComparer&lt; K &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="26" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="26" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4d2a08466a818d9227bc98023c906ebc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>static Lookup&lt;K, T&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Borrow</definition>
        <argsstring>(IEqualityComparer&lt; K &gt; comparer)</argsstring>
        <name>Borrow</name>
        <param>
          <type>IEqualityComparer&lt; K &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
<para>Returns a pooled lookup for the specified comparer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a983058b1426b840520aea8483396d23c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Add</definition>
        <argsstring>(K key, T value)</argsstring>
        <name>Add</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Appends the specified value to the value list for the specified key. If the key was previously unmapped it is appended to the key list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="76" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afd344f023a8085fd1f915d07b78fb32c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Add</definition>
        <argsstring>(K key, Linked&lt; T &gt; value)</argsstring>
        <name>Add</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; T &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Appends the specified value to the value list for the specified key. If the key was previously unmapped it is appended to the key list. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this method transfers ownership of the specified node and any linked nodes to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="90" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab4393d430e85ac4ccac263104d419be8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Add</definition>
        <argsstring>(K key, LinkedHeadTail&lt; T &gt; values)</argsstring>
        <name>Add</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <param>
          <type>LinkedHeadTail&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Appends the specified list to the value list for the specified key. If the key was previously unmapped it is appended to the key list. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this method transfers ownership of the nodes in the specified list to the lookup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="104" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="104" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a7c28ef503b27d155ff80d08afbd8c615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
<para>Releases the lookup and any key and/or value nodes it contains to their respective pools. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="48" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="48" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1aeeaea1028567b18e188ebc4116962b4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.DisposeInBackground</definition>
        <argsstring>()</argsstring>
        <name>DisposeInBackground</name>
        <briefdescription>
<para>Relinquishes ownership of the lookup and adds it to the disposal queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="41" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a73b4c97f609ea8eeabbc654cdc00f26d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LinkedHeadTail&lt; T &gt;</type>
        <definition>LinkedHeadTail&lt;T&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.FlattenAndDispose</definition>
        <argsstring>()</argsstring>
        <name>FlattenAndDispose</name>
        <briefdescription>
<para>Returns a list of all the values contained in this lookup and adds the lookup to the disposal queue. </para>        </briefdescription>
        <detaileddescription>
<para>Items in the list will be ordered based on the ordering of the key list, then by the position within value list for the item&apos;s key.</para><para>Ownership of the returned nodes is transferred to the caller, who is responsible for their disposal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="156" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a9b623f3d64b7c3e0c6953393713f9b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LinkedHeadTail&lt; T &gt;</type>
        <definition>LinkedHeadTail&lt;T&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.GetValues</definition>
        <argsstring>(K key)</argsstring>
        <name>GetValues</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the list of values for the specified key, without transfer of ownership. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for mananging the scope of the returned nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="120" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4362190dae1632588abb5f62c16cca1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, GroupJoinContext&lt; U, K, T, T2, C2 &gt; &gt;</type>
        <definition>Slinq&lt;U, GroupJoinContext&lt;U, K, T, T2, C2&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.GroupJoinAndDispose&lt; U, T2, C2 &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, K &gt; outerSelector, DelegateFunc&lt; T2, Slinq&lt; T, LinkedContext&lt; T &gt;&gt;, U &gt; resultSelector)</argsstring>
        <name>GroupJoinAndDispose&lt; U, T2, C2 &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt;&gt;, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates a group join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>When the enumeration is complete, the lookup and any values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="242" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab8740b9c595c52ca3771ca15439e2c34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, GroupJoinContext&lt; U, K, T, T2, C2, P &gt; &gt;</type>
        <definition>Slinq&lt;U, GroupJoinContext&lt;U, K, T, T2, C2, P&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.GroupJoinAndDispose&lt; U, T2, C2, P &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, P, K &gt; outerSelector, DelegateFunc&lt; T2, Slinq&lt; T, LinkedContext&lt; T &gt;&gt;, P, U &gt; resultSelector, P parameter)</argsstring>
        <name>GroupJoinAndDispose&lt; U, T2, C2, P &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, P, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt;&gt;, P, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates a group join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>When the enumeration is complete, the lookup and any values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="251" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1aa411242703a79cae0491da00a9d9d3d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, GroupJoinContext&lt; U, K, T, T2, C2 &gt; &gt;</type>
        <definition>Slinq&lt;U, GroupJoinContext&lt;U, K, T, T2, C2&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.GroupJoinAndKeep&lt; U, T2, C2 &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, K &gt; outerSelector, DelegateFunc&lt; T2, Slinq&lt; T, LinkedContext&lt; T &gt;&gt;, U &gt; resultSelector)</argsstring>
        <name>GroupJoinAndKeep&lt; U, T2, C2 &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt;&gt;, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates a group join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="224" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a915793932371d7e30068416c26416c93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, GroupJoinContext&lt; U, K, T, T2, C2, P &gt; &gt;</type>
        <definition>Slinq&lt;U, GroupJoinContext&lt;U, K, T, T2, C2, P&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.GroupJoinAndKeep&lt; U, T2, C2, P &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, P, K &gt; outerSelector, DelegateFunc&lt; T2, Slinq&lt; T, LinkedContext&lt; T &gt;&gt;, P, U &gt; resultSelector, P parameter)</argsstring>
        <name>GroupJoinAndKeep&lt; U, T2, C2, P &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, P, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; T &gt;&gt;, P, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates a group join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="233" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afac244d3aa778adc5c41dd2e33080f97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, JoinContext&lt; U, K, T, T2, C2 &gt; &gt;</type>
        <definition>Slinq&lt;U, JoinContext&lt;U, K, T, T2, C2&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.JoinAndDispose&lt; U, T2, C2 &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, K &gt; outerSelector, DelegateFunc&lt; T2, T, U &gt; resultSelector)</argsstring>
        <name>JoinAndDispose&lt; U, T2, C2 &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, T, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates an inner join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>When the enumeration is complete, the lookup and any values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="282" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afd6590ce6d2cd664693546e546d0b895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, JoinContext&lt; U, K, T, T2, C2, P &gt; &gt;</type>
        <definition>Slinq&lt;U, JoinContext&lt;U, K, T, T2, C2, P&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.JoinAndDispose&lt; U, T2, C2, P &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, P, K &gt; outerSelector, DelegateFunc&lt; T2, T, P, U &gt; resultSelector, P parameter)</argsstring>
        <name>JoinAndDispose&lt; U, T2, C2, P &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, P, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, T, P, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates an inner join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>When the enumeration is complete, the lookup and any values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="291" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab37466d8b2155123a572bb77f7560209" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, JoinContext&lt; U, K, T, T2, C2 &gt; &gt;</type>
        <definition>Slinq&lt;U, JoinContext&lt;U, K, T, T2, C2&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.JoinAndKeep&lt; U, T2, C2 &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, K &gt; outerSelector, DelegateFunc&lt; T2, T, U &gt; resultSelector)</argsstring>
        <name>JoinAndKeep&lt; U, T2, C2 &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, T, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates an inner join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="264" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ace56a8c4e7c741d0b34df537824d8867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; U, JoinContext&lt; U, K, T, T2, C2, P &gt; &gt;</type>
        <definition>Slinq&lt;U, JoinContext&lt;U, K, T, T2, C2, P&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.JoinAndKeep&lt; U, T2, C2, P &gt;</definition>
        <argsstring>(Slinq&lt; T2, C2 &gt; outer, DelegateFunc&lt; T2, P, K &gt; outerSelector, DelegateFunc&lt; T2, T, P, U &gt; resultSelector, P parameter)</argsstring>
        <name>JoinAndKeep&lt; U, T2, C2, P &gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T2, C2 &gt;</type>
          <declname>outer</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, P, K &gt;</type>
          <declname>outerSelector</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T2, T, P, U &gt;</type>
          <declname>resultSelector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates an inner join of the lookup with the specified <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> using the specified selectors. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="273" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a3afec1434a847926bd16d141c9c3ae36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LinkedHeadTail&lt; T &gt;</type>
        <definition>LinkedHeadTail&lt;T&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.RemoveValues</definition>
        <argsstring>(K key)</argsstring>
        <name>RemoveValues</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the list of values for the specified key with ownership of the nodes transferred to the caller. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for the disposal of the returned nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="131" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="131" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a6bd672bce0722188836490bed1596932" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.SlinqAndDispose</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndDispose</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the key, value groupings contained in the lookup, with the values returned in <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> form. </para>        </briefdescription>
        <detaileddescription>
<para>As the groupings are enumerated, ownership of the values in each grouping is transferred to the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> contained in the grouping.</para><para>When the enumeration is complete, the lookup and any unenumerated values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="191" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a7e049d1eae177f490143127bac82186a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.SlinqAndKeep</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndKeep</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the key, value groupings contained in the lookup, with the values returned in <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> form. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="180" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4ceccc174b5467d789ac043eb461185d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.SlinqLinkedAndDispose</definition>
        <argsstring>()</argsstring>
        <name>SlinqLinkedAndDispose</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the key, value groupings contained in the lookup, with the values returned in <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref> form. </para>        </briefdescription>
        <detaileddescription>
<para>As the groupings are enumerated, ownership of the values in each grouping is transferred to the owner of the grouping, who is responsible for their disposal.</para><para>When the enumeration is complete, the lookup and any unenumerated values it contains are added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="211" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ad395a73a36deb9edd89c31e7e8e51ae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.SlinqLinkedAndKeep</definition>
        <argsstring>()</argsstring>
        <name>SlinqLinkedAndKeep</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the key, value groupings contained in the lookup, with the values returned in <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref> form. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the lookup and any values it contains is retained by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="200" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a596ccc76555d14d4deef5ae375973fbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Lookup&lt; K, T &gt;</type>
        <definition>Lookup&lt;K, T&gt; Smooth.Slinq.Collections.Lookup&lt; K, T &gt;.SortKeys</definition>
        <argsstring>(Comparison&lt; K &gt; comparison, bool ascending)</argsstring>
        <name>SortKeys</name>
        <param>
          <type>Comparison&lt; K &gt;</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <briefdescription>
<para>Sorts the lookup&apos;s keys using the specified comparison and ordering. </para>        </briefdescription>
        <detaileddescription>
<para>This method uses an introspective merge sort algorithm that will optimally sort rather than split lists with 3 or fewer nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="144" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="144" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a list of keys each mapped to a list of values. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="79249">
        <label>IDisposable</label>
      </node>
      <node id="79248">
        <label>Smooth.Slinq.Collections.Lookup&lt; K, T &gt;</label>
        <link refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4"/>
        <childnode refid="79249" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="79251">
        <label>IDisposable</label>
      </node>
      <node id="79250">
        <label>Smooth.Slinq.Collections.Lookup&lt; K, T &gt;</label>
        <link refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4"/>
        <childnode refid="79251" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Lookup.cs" bodystart="11" bodyend="299"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a983058b1426b840520aea8483396d23c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Add</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afd344f023a8085fd1f915d07b78fb32c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Add</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab4393d430e85ac4ccac263104d419be8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Add</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4d2a08466a818d9227bc98023c906ebc" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Borrow</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a04a539a5dd1f34b22b43ee16d368c3a7" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>dictionary</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a7c28ef503b27d155ff80d08afbd8c615" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Dispose</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1aeeaea1028567b18e188ebc4116962b4d" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>DisposeInBackground</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a73b4c97f609ea8eeabbc654cdc00f26d" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>FlattenAndDispose</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a9b623f3d64b7c3e0c6953393713f9b95" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>GetValues</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4362190dae1632588abb5f62c16cca1c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>GroupJoinAndDispose&lt; U, T2, C2 &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab8740b9c595c52ca3771ca15439e2c34" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>GroupJoinAndDispose&lt; U, T2, C2, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1aa411242703a79cae0491da00a9d9d3d8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>GroupJoinAndKeep&lt; U, T2, C2 &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a915793932371d7e30068416c26416c93" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>GroupJoinAndKeep&lt; U, T2, C2, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afac244d3aa778adc5c41dd2e33080f97" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>JoinAndDispose&lt; U, T2, C2 &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1afd6590ce6d2cd664693546e546d0b895" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>JoinAndDispose&lt; U, T2, C2, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ab37466d8b2155123a572bb77f7560209" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>JoinAndKeep&lt; U, T2, C2 &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ace56a8c4e7c741d0b34df537824d8867" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>JoinAndKeep&lt; U, T2, C2, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a268dc2da9c29e8d9ca3b91d6e72d78b2" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>keys</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a176a7fc282b853ee958c02fe1c5b3222" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Lookup</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ac4197e7eb39506d9c37d8feff1fc126b" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>Lookup</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a2c8c9c040f4d0df6061667a34c11f7d4" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>pool</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a3afec1434a847926bd16d141c9c3ae36" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>RemoveValues</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a6bd672bce0722188836490bed1596932" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>SlinqAndDispose</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a7e049d1eae177f490143127bac82186a" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>SlinqAndKeep</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a4ceccc174b5467d789ac043eb461185d" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>SlinqLinkedAndDispose</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1ad395a73a36deb9edd89c31e7e8e51ae5" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>SlinqLinkedAndKeep</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_collections_1_1_lookup_3_01_k_00_01_t_01_4_1a596ccc76555d14d4deef5ae375973fbd" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::Lookup&lt; K, T &gt;</scope><name>SortKeys</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
