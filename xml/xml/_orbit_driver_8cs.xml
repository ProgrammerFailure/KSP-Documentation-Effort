<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_orbit_driver_8cs" kind="file">
    <compoundname>OrbitDriver.cs</compoundname>
    <innerclass refid="class_orbit_driver" prot="public">OrbitDriver</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.Localization;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_orbit_driver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>,<sp/>vel;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>to<sp/>track<sp/>when<sp/>orbits<sp/>become<sp/>hyperbolic<sp/>or<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHyperbolic;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_viewport_controller_8cs_1a25bbfb7442459b8d546e1f1551835479a76e1ab7a1df8e64fe867b420645c8a68" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a761b2262039ebd136d08829f276f050d" kindref="member">drawOrbit</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1ae602886d666d6587a31556f3ec691953" kindref="member">reverse</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a461820d63249e81245acbb0dffabf980" kindref="member">frameShift</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1af88e1d005003ae140e66171faf42ec7b" kindref="member">QueuedUpdate</ref>,<sp/>QueueOnce;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598afe65302983d88d4d3041ed64241b11b1" kindref="member">TRACK_Phys</ref>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">UPDATE</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598aa5daf7f2ebbba4975d61dab1c40188c7" kindref="member">IDLE</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref><sp/><ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_renderer_base" kindref="compound">OrbitRendererBase</ref><sp/><ref refid="class_orbit_driver_1a80ba6f5a92879c53931a683a41b451eb" kindref="member">Renderer</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1ab8d9ac1a2a7a80cb0f2228cb6886adea" kindref="member">Ready</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ready;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/><ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/><ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orbit.referenceBody;<sp/>}<sp/>set<sp/>{<sp/>orbit.referenceBody<sp/>=<sp/>value;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_orbit_driver_1adb0ef3fd81f65db54acd375a45278337" kindref="member">orbitColor</ref><sp/>=<sp/>Color.grey;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1aace61d317e4fcc9a3ff9ea52004f8dbd" kindref="member">lowerCamVsSmaRatio</ref><sp/>=<sp/>0.03f;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a34d6cf564b0503a0d7d2f894591718ff" kindref="member">upperCamVsSmaRatio</ref><sp/>=<sp/>25f;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_orbit_driver_1a47f9e8f843418e7a36ee48ddd6f5e2ac" kindref="member">driverTransform</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="interface_i_targetable" kindref="compound">ITargetable</ref><sp/><ref refid="class_orbit_driver_1a4e53bc8476c7848258a16498ae046833" kindref="member">Targetable</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>as<sp/><ref refid="interface_i_targetable" kindref="compound">ITargetable</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>as<sp/><ref refid="interface_i_targetable" kindref="compound">ITargetable</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>of<sp/>these<sp/>would<sp/>be<sp/>non-null<sp/>for<sp/>each<sp/>instance<sp/>(unless<sp/>things<sp/>get<sp/>seriously<sp/>freaky)<sp/>(that&apos;s<sp/>a<sp/>moon,<sp/>right?)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a47f9e8f843418e7a36ee48ddd6f5e2ac" kindref="member">driverTransform</ref><sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>=<sp/>GetComponent&lt;Vessel&gt;();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>=<sp/>GetComponent&lt;CelestialBody&gt;();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.IDLE:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.TRACK_Phys:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>have<sp/>a<sp/>reference<sp/>body<sp/>before<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>)<sp/><ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref><sp/>=<sp/>FlightGlobals.getMainBody(driverTransform.position);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a25d67b21a99272a733b1ca3829a8a674" kindref="member">TrackRigidbody</ref>(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>,<sp/>-fdtLast);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.UPDATE:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.Init();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a2f70279cd3ee6df42a26ee2334a9dad9" kindref="member">updateFromParameters</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print(&quot;[&quot;<sp/>+<sp/>name<sp/>+<sp/>&quot;]:<sp/>Orbit<sp/>started&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ready<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Planetarium.Orbits.Add(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a657b65ae3db1bd987596d4288c177511" kindref="member">OnReferenceBodyChange</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a657b65ae3db1bd987596d4288c177511" kindref="member">OnReferenceBodyChange</ref>(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a3d41a2dad2e23f775fa69b75a4fe1aaa" kindref="member">CelestialBodyDelegate</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CelestialBodyDelegate<sp/><ref refid="class_orbit_driver_1a657b65ae3db1bd987596d4288c177511" kindref="member">OnReferenceBodyChange</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDestroy()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planetarium" kindref="compound">Planetarium</ref>.<ref refid="class_planetarium_1aea8f0dc857a7e6074d5f2b113b9927b1" kindref="member">Orbits</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Planetarium.Orbits.Remove(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a80ba6f5a92879c53931a683a41b451eb" kindref="member">Renderer</ref>)<sp/>Destroy(<ref refid="class_orbit_driver_1a80ba6f5a92879c53931a683a41b451eb" kindref="member">Renderer</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FixedUpdate()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1af88e1d005003ae140e66171faf42ec7b" kindref="member">QueuedUpdate</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QueueOnce)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QueueOnce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a4b1bbd8bd5586114990df329c5790b0e" kindref="member">UpdateOrbit</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a4b1bbd8bd5586114990df329c5790b0e" kindref="member">UpdateOrbit</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ready)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1ab7cff3ce504debe3ed66d728a6d9282f" kindref="member">lastMode</ref><sp/>=<sp/><ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.IDLE:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.TRACK_Phys:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref>.<ref refid="class_part_1a8ed07547fa8042b63d1de64b20ceb004" kindref="member">rb</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!offset)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdtLast<sp/>=<sp/>-0d;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_orbit_driver_1a8fb5448cc8d83a05539a210df3a7f289" kindref="member">CheckDominantBody</ref>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1aff64548d90f1ec07cbee04470ccb853e" kindref="member">CoMD</ref>))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a25d67b21a99272a733b1ca3829a8a674" kindref="member">TrackRigidbody</ref>(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>,<sp/>-fdtLast);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UpdateMode.UPDATE:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a2f70279cd3ee6df42a26ee2334a9dad9" kindref="member">updateFromParameters</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a8fb5448cc8d83a05539a210df3a7f289" kindref="member">CheckDominantBody</ref>(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>+<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdtLast<sp/>=<sp/><ref refid="class_time_warp_1ac3240fb7f50651ecb725b19c9af6016a" kindref="member">TimeWarp.fixedDeltaTime</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isHyperbolic<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isHyperbolic<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselOrbitClosed.Fire(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isHyperbolic<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isHyperbolic<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselOrbitEscaped.Fire(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawRay(driverTransform.position,<sp/>orbit.vel.xzy<sp/>*<sp/>TimeWarp.fixedDeltaTime,<sp/>updateMode<sp/>==<sp/>UpdateMode.UPDATE<sp/>?<sp/>Color.cyan<sp/>:<sp/>Color.white);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a761b2262039ebd136d08829f276f050d" kindref="member">drawOrbit</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.DrawOrbit();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1ad9c3bacdf4e0794cdf397303d24b569f" kindref="member">SetOrbitMode</ref>(<ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdtLast<sp/>=<sp/><ref refid="class_time_warp_1ac3240fb7f50651ecb725b19c9af6016a" kindref="member">TimeWarp.fixedDeltaTime</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a8fb5448cc8d83a05539a210df3a7f289" kindref="member">CheckDominantBody</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>refPos)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>body<sp/>detection<sp/>(used<sp/>to<sp/>be<sp/>in<sp/>OrbitPhysicsManager.<sp/>Moved<sp/>here<sp/>to<sp/>make<sp/>this<sp/>happen<sp/>outside<sp/>the<sp/>flight<sp/>scene)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>curBody<sp/>=<sp/>FlightGlobals.getMainBody(refPos);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref><sp/>!=<sp/>curBody<sp/>&amp;&amp;<sp/>!<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a0629782f088c61f394954ee7e548fb03" kindref="member">overrideOrbit</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a8f4a2798648b7dfbd0a4724debc100f6" kindref="member">RecalculateOrbit</ref>(curBody);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fdtLast<sp/>=<sp/>0.02d;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a72067006453e986f8f500385fa25c95e" kindref="member">lastTrackUT</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref><sp/><ref refid="class_orbit_driver_1ab7cff3ce504debe3ed66d728a6d9282f" kindref="member">lastMode</ref><sp/>=<sp/>UpdateMode.TRACK_Phys;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a25d67b21a99272a733b1ca3829a8a674" kindref="member">TrackRigidbody</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>refBody,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fdtOffset)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateUT<sp/>=<sp/>Planetarium.GetUniversalTime();<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref><sp/>=<sp/>(vessel.CoMD<sp/>-<sp/>referenceBody.position).xzy;<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref>.<ref refid="class_part_1a8ed07547fa8042b63d1de64b20ceb004" kindref="member">rb</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>!<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref>.<ref refid="class_part_1a8ed07547fa8042b63d1de64b20ceb004" kindref="member">rb</ref>.isKinematic)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateUT<sp/>+=<sp/>fdtOffset;<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PhysX<sp/>integration<sp/>runs,<sp/>i.e.<sp/>after<sp/>all<sp/>behaviours&apos;<sp/>FixedUpdate.<sp/>So<sp/>our<sp/>pos<sp/>and<sp/>vel<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>this<sp/>frame<sp/>are<sp/>not<sp/>correct<sp/>for<sp/>this<sp/>timestamp,<sp/>they<sp/>are<sp/>correct<sp/>for<sp/>the<sp/>_previous_<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>vessel.velocityD.xzy<sp/>+<sp/>orbit.GetRotFrameVelAtPos(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>,<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>);<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref><sp/>==<sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref>.IDLE)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>orbit.GetRotFrameVel(<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBody<sp/>!=<sp/><ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>)<sp/></highlight><highlight class="comment">//<sp/>update<sp/>orbital<sp/>pos<sp/>and<sp/>vel<sp/>for<sp/>new<sp/>ref<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref><sp/>=<sp/>(vessel.CoMD<sp/>-<sp/>refBody.position).xzy;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>+=<sp/>referenceBody.GetFrameVel()<sp/>-<sp/>refBody.<ref refid="class_celestial_body_1a9b0f7f75cda9b65de2bd967bcd8e7865" kindref="member">GetFrameVel</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a72067006453e986f8f500385fa25c95e" kindref="member">lastTrackUT</ref><sp/>=<sp/>updateUT;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>was<sp/>the<sp/>last<sp/>tracked<sp/>UT.<sp/>This<sp/>is<sp/>needed<sp/>for<sp/>orbital<sp/>drift<sp/>compensation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.UpdateFromStateVectors(<ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>,<sp/>vel,<sp/>refBody,<sp/>updateUT);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-swizzle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.Swizzle();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.Swizzle();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>propagate<sp/>orbit<sp/>from<sp/>the<sp/>keplerian<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>updateUT;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a2f70279cd3ee6df42a26ee2334a9dad9" kindref="member">updateFromParameters</ref>()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a2f70279cd3ee6df42a26ee2334a9dad9" kindref="member">updateFromParameters</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a2f70279cd3ee6df42a26ee2334a9dad9" kindref="member">updateFromParameters</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setPosition)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateUT<sp/>=<sp/>Planetarium.GetUniversalTime();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.UpdateFromUT(updateUT);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref><sp/>=<sp/>orbit.pos;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>orbit.vel;<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.Swizzle();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.Swizzle();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(pos.x))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ObT<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;M<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;E<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;V<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radius:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vel:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vel.<ref refid="struct_vector3d_1a18339ec7802322876753d57b02563f8d" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AN:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>orbit.an.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;period:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[OrbitDriver<sp/>Warning!]:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vessel.GetDisplayName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>had<sp/>a<sp/>NaN<sp/>Orbit<sp/>and<sp/>was<sp/>removed.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.Unload();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.gameObject);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setPosition)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_driver_1ae602886d666d6587a31556f3ec691953" kindref="member">reverse</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>CoMoffset<sp/>=<sp/>(<ref refid="struct_unity_engine_1_1_quaternion_d" kindref="compound">QuaternionD</ref>)(<ref refid="class_orbit_driver_1a47f9e8f843418e7a36ee48ddd6f5e2ac" kindref="member">driverTransform</ref>.rotation)<sp/>*<sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>)<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1a7271d800ed0f4b07598f41d0026c15a5" kindref="member">localCoM</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>.<ref refid="class_vessel_1ade78cfe46f9a11a91982466cc390d1c8" kindref="member">SetPosition</ref>((<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>+<sp/>pos)<sp/>-<sp/>CoMoffset);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>celestialBody.position<sp/>=<sp/>(referenceBody.position<sp/>+<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>);</highlight><highlight class="comment">//<sp/>-<sp/>(Vector3d)CoMoffset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driverTransform.position<sp/>=<sp/>(referenceBody.position<sp/>+<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>);</highlight><highlight class="comment">//<sp/>-<sp/>(Vector3d)CoMoffset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceBody.position<sp/>=<sp/>((<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>?<sp/>celestialBody.position<sp/>:<sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>)<ref refid="class_orbit_driver_1a47f9e8f843418e7a36ee48ddd6f5e2ac" kindref="member">driverTransform</ref>.position)<sp/>-<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a8f4a2798648b7dfbd0a4724debc100f6" kindref="member">RecalculateOrbit</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>newReferenceBody)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a461820d63249e81245acbb0dffabf980" kindref="member">frameShift</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a461820d63249e81245acbb0dffabf980" kindref="member">frameShift</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>previousBody<sp/>=<sp/><ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref><sp/>==<sp/><ref refid="class_orbit_driver_1abfb41796b3c54130184353d55649d598" kindref="member">UpdateMode</ref>.UPDATE<sp/>&amp;&amp;<sp/>Time.timeScale<sp/>&gt;<sp/>0f)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a9d954d02019a7d577feae025ad63436f" kindref="member">OnRailsSOITransition</ref>(<ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>,<sp/>newReferenceBody);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;recalculating<sp/>orbit<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>referenceBody.bodyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(<sp/>Update<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a2822b185f22949dbb4f2c9f0a8446621" kindref="member">updateMode</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>)\nrPos:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pos.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>rVel:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vel.<ref refid="struct_vector3d_1a18339ec7802322876753d57b02563f8d" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal"><sp/>+<sp/>vel.magnitude<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a25d67b21a99272a733b1ca3829a8a674" kindref="member">TrackRigidbody</ref>(newReferenceBody,<sp/>-fdtLast);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>npos,<sp/>nvel;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.GetOrbitalStateVectorsAtUT(<ref refid="class_orbit_driver_1a72067006453e986f8f500385fa25c95e" kindref="member">lastTrackUT</ref>,<sp/>out<sp/>npos,<sp/>out<sp/>nvel);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newReferenceBody<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>previousBody<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;recalculated<sp/>orbit<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>newReferenceBody.bodyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(<sp/>UT:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Planetarium.GetUniversalTime()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>)\nrPos:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_orbit_driver_1a685a19e5a5d4572d6cff4313a483626d" kindref="member">pos</ref>.<ref refid="struct_vector3d_1a18339ec7802322876753d57b02563f8d" kindref="member">ToString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>rVel:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>orbit.GetFrameVel().ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal"><sp/>+<sp/>vel.magnitude<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;|\nDelta:<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(npos<sp/>+<sp/>orbit.referenceBody.position.xzy<sp/>-<sp/>vessel.CoMD.xzy).ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(nvel<sp/>-<sp/>(vessel.rb_velocityD<sp/>+<sp/>Krakensbane.GetFrameVelocity()).xzy<sp/>-<sp/>(previousBody.orbit<sp/>!=<sp/>null<sp/>?<sp/>previousBody.orbit.GetFrameVel()<sp/>:<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">zero</ref>)).ToString());<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a657b65ae3db1bd987596d4288c177511" kindref="member">OnReferenceBodyChange</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver_1a657b65ae3db1bd987596d4288c177511" kindref="member">OnReferenceBodyChange</ref>(newReferenceBody);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselSOIChanged.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.HostedFromToAction&lt;<ref refid="class_vessel" kindref="compound">Vessel</ref>,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>&gt;(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>,<sp/>previousBody,<sp/>newReferenceBody));<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModuleTripLogger.ForceVesselLog(<ref refid="class_orbit_driver_1ab197e71bfc0d4d6219995cee041b97f4" kindref="member">vessel</ref>,<sp/>FlightLog.EntryType.Flyby,<sp/>newReferenceBody);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Invoke(</highlight><highlight class="stringliteral">&quot;unlockFrameSwitch&quot;</highlight><highlight class="normal">,<sp/>1f);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver_1a9d954d02019a7d577feae025ad63436f" kindref="member">OnRailsSOITransition</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>ownOrbit,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>to)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>prev<sp/>=<sp/><ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>Planetarium.GetUniversalTime();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneFrameAgo<sp/>=<sp/>now<sp/>-<sp/><ref refid="class_time_warp_1ac3240fb7f50651ecb725b19c9af6016a" kindref="member">TimeWarp.fixedDeltaTime</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>now<sp/>-<sp/>oneFrameAgo;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>range<sp/>*<sp/>1e-7;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transitionUT<sp/>=<sp/>now;<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SOIsqr<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a65d967421827bdf702d51f1517cc1909" kindref="member">HasChild</ref>(to))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOIsqr<sp/>=<sp/>to.sphereOfInfluence<sp/>*<sp/>to.sphereOfInfluence;<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fetch<sp/>state<sp/>vectors<sp/>relative<sp/>to<sp/>new<sp/>cb<sp/>at<sp/>that<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>new<sp/>orbit<sp/>from<sp/>those,<sp/>propagate<sp/>to<sp/>current<sp/>UT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.BSPSolver(ref<sp/>transitionUT,<sp/>range,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=&gt;<sp/>Math.Abs((ownOrbit.getPositionAtUT(t)<sp/>-<sp/>to.<ref refid="class_celestial_body_1aede1e25e37ca8d335a89604ee4584225" kindref="member">getPositionAtUT</ref>(t)).sqrMagnitude<sp/>-<sp/>SOIsqr),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oneFrameAgo,<sp/>now,<sp/>limit,<sp/>64);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to.<ref refid="class_celestial_body_1a65d967421827bdf702d51f1517cc1909" kindref="member">HasChild</ref>(<ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>escape<sp/>case:<sp/>find<sp/>the<sp/>moment<sp/>we<sp/>left<sp/>the<sp/>current<sp/>body&apos;s<sp/>SOI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOIsqr<sp/>=<sp/>orbit.referenceBody.sphereOfInfluence<sp/>*<sp/>orbit.referenceBody.sphereOfInfluence;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>=</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.BSPSolver(ref<sp/>transitionUT,<sp/>range,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=&gt;<sp/>Math.Abs(ownOrbit.getRelativePositionAtUT(t).sqrMagnitude<sp/>-<sp/>SOIsqr),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oneFrameAgo,<sp/>now,<sp/>limit,<sp/>64);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownOrbit.UpdateFromOrbitAtUT(ownOrbit,<sp/>transitionUT,<sp/>to);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;[OrbitDriver]:<sp/>On-Rails<sp/>SOI<sp/>Transition<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>prev.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Transition<sp/>UT<sp/>Range:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>oneFrameAgo.ToString(</highlight><highlight class="stringliteral">&quot;0.###&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>now.ToString(</highlight><highlight class="stringliteral">&quot;0.###&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Transition<sp/>UT:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>transitionUT.ToString(</highlight><highlight class="stringliteral">&quot;0.###&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Iterations:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>iterations<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlockFrameSwitch()<sp/>{<sp/><ref refid="class_orbit_driver_1a461820d63249e81245acbb0dffabf980" kindref="member">frameShift</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitDriver.cs"/>
  </compounddef>
</doxygen>
