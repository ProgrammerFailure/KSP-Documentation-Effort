<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_module_docking_node_8cs" kind="file">
    <compoundname>ModuleDockingNode.cs</compoundname>
    <innerclass refid="class_module_docking_node" prot="public">ModuleDockingNode</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.Localization;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Expansions.Missions.Adjusters;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_module_docking_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>:<sp/><ref refid="class_part_module" kindref="compound">PartModule</ref>,<sp/><ref refid="interface_i_targetable" kindref="compound">ITargetable</ref>,<sp/><ref refid="interface_i_stage_separator" kindref="compound">IStageSeparator</ref>,<sp/><ref refid="interface_i_contract_objective_module" kindref="compound">IContractObjectiveModule</ref>,<sp/><ref refid="interface_i_resource_consumer" kindref="compound">IResourceConsumer</ref>,<sp/><ref refid="interface_i_joint_lock_state" kindref="compound">IJointLockState</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dockingNode&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a197e26f6653a355778f9c1372ca347f3" kindref="member">controlTransformName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref><sp/>=<sp/>10f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2ef5a4c7bfb4d76c85fec10c9f07e496" kindref="member">minDistanceToReEngage</ref><sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a164c7745c83d9a1e97c3597210eebbec" kindref="member">acquireRange</ref><sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af7c2330056bbf39ff6c194338471d093" kindref="member">acquireMinFwdDot</ref><sp/>=<sp/>0.7f;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a8efb3724bc8cc3b8e2de476d1debd31b" kindref="member">acquireMinRollDot</ref><sp/>=<sp/>float.MinValue;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8002397&quot;</highlight><highlight class="normal">,<sp/>guiUnits<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_8002397<sp/>=<sp/>Docking<sp/>Acquire<sp/>Force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(scene<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.All,<sp/>minValue<sp/>=<sp/>0f,<sp/>maxValue<sp/>=<sp/>200f,<sp/>stepIncrement<sp/>=<sp/>5f,<sp/>affectSymCounterparts<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.All)]</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>=<sp/>100f;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2eee57388c71038077f0ca7f5b6a31f1" kindref="member">acquireForce</ref><sp/>=<sp/>2f;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad9ec95492dd0a31a882eb3b47d71021d" kindref="member">acquireTorque</ref><sp/>=<sp/>2f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1afb66573181ad2cf24a2ed9939ed2fdf2" kindref="member">acquireTorqueRoll</ref><sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2b9f6996c013b9f6bdc5751a15d2259a" kindref="member">captureRange</ref><sp/>=<sp/>0.06f;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a9ff442b7fbda1bc2b43eece4f1cfa3c6" kindref="member">captureMinFwdDot</ref><sp/>=<sp/>0.998f;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a7d78ce9ff2889a1a7a86bbde28605e9b" kindref="member">captureMinRollDot</ref><sp/>=<sp/>float.MinValue;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab3e5b05c8c9e9b96e044beff2ed71549" kindref="member">captureMaxRvel</ref><sp/>=<sp/>0.3f;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1adb994bd8c18fb88247f1e09b74e2f62e" kindref="member">useReferenceAttachNode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1abf5f97e689928b57dd7ddbd13f76ed70" kindref="member">nodeType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;size1&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a31850788bf29bc48c5518dbb844b9f8f" kindref="member">deployAnimationController</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a6cae253b6404cc41ed63a8f0f903a67b" kindref="member">deployAnimationTarget</ref><sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab38f76e00972358ab6173b56c9cd58e1" kindref="member">animReadyEnter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a7b1548b6476e15afe7a044914ac48c06" kindref="member">animReadyExit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab397174a8595c6815fe21dd8eb397386" kindref="member">animDisengageEnter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2d7ea4ea5f93e10ca6d3fea6d5bc4546" kindref="member">animDisengageExit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a53ee937108acd1ae6051e01264598f7b" kindref="member">animDisabledEnter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0a2e2e3d42fc69ddcec01e231e7c6928" kindref="member">animDisabledExit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a450dccf72430c78e5b6c9b6c7efa569a" kindref="member">animDisableIfNot1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a58361f108fabc911f904eed6c5f57af1" kindref="member">animEnableIf1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a24ef775dc90f8f90cfbeacfddf88954e" kindref="member">animCaptureOff</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af503deb967f387ba2ca377385db8d049" kindref="member">animUndockOn</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a12ea089c5b89edd5017a0c66667f7ed1" kindref="member">setAnimWrite</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a70f0bf8a35cca9a03999ebcb5f557d95" kindref="member">gendered</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a401c1d3a1dbcb5c8272c33cfe723a934" kindref="member">genderFemale</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a587be21701b69ec24a5c0ae62198dd5e" kindref="member">snapRotation</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4729abbc219eade33d230083ff778084" kindref="member">snapOffset</ref><sp/>=<sp/>90f;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a3b9f4954e6389979b63490d7ce514ee9" kindref="member">rotationTransformName</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Transform<sp/>rotationTransform;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a8390f69aa9c053729e18cb3a03ce163c" kindref="member">rotationAxis</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>initialRotation;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cachedInitialAngle;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0c2367c439fd7504d43076bdee935141" kindref="member">traverseVelocity</ref><sp/>=<sp/>2.5f;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector2<sp/><ref refid="class_module_docking_node_1ab71d1bf85ab59851461c5384e72823fd" kindref="member">hardMinMaxLimits</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(-15,<sp/>15);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a34defb06162219d4dc6205e07b664e4a" kindref="member">efficiency</ref><sp/>=<sp/>0.75f;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a9a6eeed1935130069f143b35a8a6aee4" kindref="member">maxMotorOutput</ref><sp/>=<sp/>100f;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a791033dcb73ae32e28b873333265abe5" kindref="member">baseResourceConsumptionRate</ref><sp/>=<sp/>0.02f;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a9151e343222eb5e49d56dbc1a2363d37" kindref="member">referenceConsumptionVelocity</ref><sp/>=<sp/>180f;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a69e52ad068e83763f11ea6e0372d435d" kindref="member">motorRate</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6002700&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/></highlight><highlight class="comment">//#autoLOC_6002700<sp/>=<sp/>Rotation<sp/>Locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___toggle" kindref="compound">UI_Toggle</ref>(scene<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.All,<sp/>disabledText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_439840&quot;</highlight><highlight class="normal">,<sp/>enabledText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_439839&quot;</highlight><highlight class="normal">,<sp/>affectSymCounterparts<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.All)]<sp/><sp/></highlight><highlight class="comment">//#autoLOC_439840<sp/>=<sp/>No<sp/>//#autoLOC_439839<sp/>=<sp/>Yes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_axis_field" kindref="compound">KSPAxisField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8014167&quot;</highlight><highlight class="normal">,<sp/>guiFormat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axisMode<sp/>=<sp/><ref refid="_axis_field_8cs_1abed852b8e5a63e68eaf0757a32754d20" kindref="member">KSPAxisMode</ref>.Incremental,<sp/>incrementalSpeed<sp/>=<sp/>30f,<sp/>ignoreClampWhenIncremental<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/></highlight><highlight class="comment">//#autoLOC_8014167<sp/>=<sp/>Alignment<sp/>Angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>-179.99f,<sp/>maxValue<sp/>=<sp/>180f,<sp/>stepIncrement<sp/>=<sp/>1f,<sp/>affectSymCounterparts<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.Editor)]</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aef5c96cb82205d7808cdea5086a97b2b" kindref="member">targetAngle</ref><sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Quaternion<sp/>targetRotation;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8003304&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_8003304<sp/>=<sp/>Invert<sp/>Direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___toggle" kindref="compound">UI_Toggle</ref>(affectSymCounterparts<sp/>=<sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234" kindref="member">UI_Scene</ref>.None,<sp/>tipText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8003301&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_8003301<sp/>=<sp/>Non-Symmetry<sp/>-<sp/>This<sp/>part<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabledText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8003302&quot;</highlight><highlight class="normal">,<sp/>disabledText<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8003303&quot;</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_8003302<sp/>=<sp/>Inverted<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>#autoLOC_8003303<sp/>=<sp/>Normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0f3896f68e260546ce1a3286fb07030e" kindref="member">inverted</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>workingJointTargetAngle;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingJointTargetAngle<sp/>=<sp/><ref refid="class_module_docking_node_1aef5c96cb82205d7808cdea5086a97b2b" kindref="member">targetAngle</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a0f3896f68e260546ce1a3286fb07030e" kindref="member">inverted</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>the<sp/>target<sp/>the<sp/>other<sp/>way<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingJointTargetAngle<sp/>=<sp/>-workingJointTargetAngle;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Factor<sp/>in<sp/>the<sp/>other<sp/>node&apos;s<sp/>target<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1a0f3896f68e260546ce1a3286fb07030e" kindref="member">inverted</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingJointTargetAngle<sp/>+=<sp/>-otherNode.targetAngle;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingJointTargetAngle<sp/>+=<sp/>otherNode.targetAngle;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>workingJointTargetAngle;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>VisualTargetAngle</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>workingAngle<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>on<sp/>the<sp/>joint<sp/>side<sp/>we<sp/>must<sp/>factor<sp/>the<sp/>other<sp/>ports<sp/>angle<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1aeedc0150421be3f2110612779d20d02a" kindref="member">Joint</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingAngle<sp/>=<sp/>-<ref refid="class_module_docking_node_1aef5c96cb82205d7808cdea5086a97b2b" kindref="member">targetAngle</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a0f3896f68e260546ce1a3286fb07030e" kindref="member">inverted</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>the<sp/>target<sp/>the<sp/>other<sp/>way<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingAngle<sp/>=<sp/>-workingAngle;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>on<sp/>the<sp/>non-joint<sp/>side<sp/>we<sp/>must<sp/>factor<sp/>the<sp/>other<sp/>ports<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingAngle<sp/>=<sp/><ref refid="class_module_docking_node_1aef5c96cb82205d7808cdea5086a97b2b" kindref="member">targetAngle</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a0f3896f68e260546ce1a3286fb07030e" kindref="member">inverted</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>the<sp/>target<sp/>the<sp/>other<sp/>way<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workingAngle<sp/>=<sp/>-workingAngle;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>workingAngle;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ConfigurableJoint<sp/><ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a20bd0e0e820ffb642d4be11a6ee591f0" kindref="member">CurrentState</ref><sp/>==<sp/>st_docked_docker)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part.attachJoint.Joint;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a20bd0e0e820ffb642d4be11a6ee591f0" kindref="member">CurrentState</ref><sp/>==<sp/>st_docked_dockee)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>otherNode.part.attachJoint.Joint;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a20bd0e0e820ffb642d4be11a6ee591f0" kindref="member">CurrentState</ref><sp/>==<sp/>st_preattached)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>case<sp/>is<sp/>when<sp/>docks<sp/>are<sp/>preattached,<sp/>so<sp/>they<sp/>haven&apos;t<sp/>been<sp/>set<sp/>to<sp/>docked<sp/>as<sp/>docker<sp/>or<sp/>dockee<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1ad9b3afca8a7cb736712e3fee043b2ac4" kindref="member">Parent</ref><sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1ad9b3afca8a7cb736712e3fee043b2ac4" kindref="member">Parent</ref>.HasModuleImplementing&lt;<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>&gt;())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part.attachJoint.Joint;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>otherNode.part.attachJoint.Joint;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RotationJointHost</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a9295e776b841b185f89352f394633097" kindref="member">GetDominantNode</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotation<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>SoftJointLimit<sp/><ref refid="class_module_docking_node_1a2f3f5e0a236336e28d6c77cf6da3beac" kindref="member">upperRotationLimit</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>SoftJointLimit<sp/><ref refid="class_module_docking_node_1a9abe961a81a070aa67255591d5b69da2" kindref="member">lowerRotationLimit</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref><sp/><ref refid="class_module_docking_node_1a8ee535c5390507ad0fee731602c74b6e" kindref="member">targetAngleUIField</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_base_axis_field" kindref="compound">BaseAxisField</ref><sp/><ref refid="class_module_docking_node_1a51fdaee5c5173874ff679b1d76428e0c" kindref="member">targetAngleAxisField</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rotationInitComplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>partJointUnbreakable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_docked_vessel_info" kindref="compound">DockedVesselInfo</ref><sp/><ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab8339789fc3d3e905429e2efdbac544e" kindref="member">IsDisabled</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>fsm.Started<sp/>&amp;&amp;<sp/>fsm.CurrentState<sp/>==<sp/>st_disabled;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af34e8e7ba57b5c29d8bf4307ecadeee2" kindref="member">TatUndock</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_module_docking_node_1a1f1e8fd05359fe60bd378482673abfa9" kindref="member">dockedPartUId</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aded3cc067e4495074dae5f7f3c71e75d" kindref="member">dockingNodeModuleIndex</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>HashSet&lt;string&gt;<sp/><ref refid="class_module_docking_node_1a7289ff0c267da5f95cfb0a8d883a423f" kindref="member">nodeTypes</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_module_animate_generic" kindref="compound">ModuleAnimateGeneric</ref><sp/><ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_attach_node" kindref="compound">AttachNode</ref><sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4a138515c52de98435a8b3420e405992" kindref="member">setStagingState</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>two<sp/>privates<sp/>are<sp/>set<sp/>when<sp/>an<sp/>undock/decouple<sp/>occurs.<sp/>They<sp/>are<sp/>checked<sp/>when<sp/>going<sp/>from<sp/>same<sp/>vessel<sp/>docked<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>they<sp/>are<sp/>set,<sp/>it<sp/>must<sp/>mean<sp/>the<sp/>user<sp/>decoupled/undocked<sp/>this<sp/>particular<sp/>same<sp/>vessel<sp/>docking.<sp/>In<sp/>which<sp/>case,<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>turn<sp/>the<sp/>same<sp/>vessel<sp/>docking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//into<sp/>a<sp/>full<sp/>vessel<sp/>docking.<sp/>If<sp/>they<sp/>are<sp/>null,<sp/>or<sp/>another<sp/>node,<sp/>we<sp/>do<sp/>want<sp/>to<sp/>turn<sp/>the<sp/>same<sp/>vessel<sp/>docking<sp/>into<sp/>a<sp/>full<sp/>vessel<sp/>docking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>sameVesselUndockNode;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>sameVesselUndockOtherNode;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sameVesselUndockRedock;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1add3eb60178bd7a6977e3030771851dfe" kindref="member">DebugFSMState</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>partActionMenuOpen;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>undockPreAttached;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6002701&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/></highlight><highlight class="comment">//<sp/>#autoLOC_6002701<sp/>=<sp/>Toggle<sp/>Rotation<sp/>Lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad56b4dbe32e1e93acbe85be00bfaedf1" kindref="member">ToggleLockedAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a2ae069afd651379381b2dcbbaab3d865" kindref="member">DisengageNodeLock</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a0b4850e09fb2b7358a31d7da17df5710" kindref="member">EngageNodeLock</ref>())</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenMessages.PostScreenMessage(Localizer.Format(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>Lock<sp/>Docking<sp/>part,<sp/>Docking<sp/>Node<sp/>is<sp/>moving.&quot;</highlight><highlight class="normal">),<sp/>5f);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_6002704<sp/>=<sp/>Cannot<sp/>Lock<sp/>Docking<sp/>part,<sp/>Docking<sp/>Node<sp/>is<sp/>moving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6002702&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_6002702<sp/>=<sp/>Engage<sp/>Rotation<sp/>Lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a148499fa516ccdcdb3c41f1b755cf22d" kindref="member">ServoEngageLockAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a0b4850e09fb2b7358a31d7da17df5710" kindref="member">EngageNodeLock</ref>())</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScreenMessages.PostScreenMessage(Localizer.Format(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>Lock<sp/>Docking<sp/>part,<sp/>Servo<sp/>is<sp/>moving.&quot;</highlight><highlight class="normal">),<sp/>5f);<sp/></highlight><highlight class="comment">//<sp/>#autoLOC_6002704<sp/>=<sp/>Cannot<sp/>Lock<sp/>Docking<sp/>part,<sp/>Docking<sp/>Node<sp/>is<sp/>moving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6002703&quot;</highlight><highlight class="normal">,<sp/>advancedTweakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#autoLOC_6002703<sp/>=<sp/>Disengage<sp/>Rotation<sp/>Lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a41d6cbb28422509500f7ed56742fc115" kindref="member">ServoDisgageLockAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a2ae069afd651379381b2dcbbaab3d865" kindref="member">DisengageNodeLock</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0b4850e09fb2b7358a31d7da17df5710" kindref="member">EngageNodeLock</ref>()</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>)<sp/></highlight><highlight class="comment">//If<sp/>it&apos;s<sp/>already<sp/>locked.<sp/>nothing<sp/>to<sp/>do<sp/>here.<sp/>And<sp/>return<sp/>true<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>false<sp/>screen<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a77c907a52a29ec78bd07a4f1305c45d9" kindref="member">ModifyLocked</ref>(null);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2ae069afd651379381b2dcbbaab3d865" kindref="member">DisengageNodeLock</ref>()</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].SetValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a77c907a52a29ec78bd07a4f1305c45d9" kindref="member">ModifyLocked</ref>(null);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a77c907a52a29ec78bd07a4f1305c45d9" kindref="member">ModifyLocked</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>obj)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiInteractable<sp/>=<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiInteractable<sp/>=<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>||<sp/><ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ab3013a73baa65b48deff929e4b3a4cbd" kindref="member">LoadedSceneIsEditor</ref>))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af1b41d1580bfcf4b98b77c434bc2732d" kindref="member">RecurseCoordUpdate</ref>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>,<sp/><ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>?<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a4ea96005c7aba98ff58e947a25004e60" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref><sp/>:<sp/><ref refid="class_editor_logic" kindref="compound">EditorLogic</ref>.<ref refid="class_editor_logic_1a21885533a47e9fad5401b48a21d380cc" kindref="member">fetch</ref>.<ref refid="class_editor_logic_1a0f8fd6c8d6feaca92c94a19e37a75433" kindref="member">ship</ref>.<ref refid="class_ship_construct_1ade08e9616fd45d9f966aacc937ed62a4" kindref="member">parts</ref>[0]);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.CycleAllAutoStrut();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ab3013a73baa65b48deff929e4b3a4cbd" kindref="member">LoadedSceneIsEditor</ref>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_editor_logic" kindref="compound">EditorLogic</ref>.<ref refid="class_editor_logic_1a21885533a47e9fad5401b48a21d380cc" kindref="member">fetch</ref>.<ref refid="class_editor_logic_1a0f8fd6c8d6feaca92c94a19e37a75433" kindref="member">ship</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>EditorLogic.fetch.ship.parts.Count;<sp/>i++)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorLogic.fetch.ship.parts[i].CycleAutoStrut();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>physicsLessMode;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2857e2ee68ccceeec23829a6ab08c934" kindref="member">OnAwake</ref>()</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a7289ff0c267da5f95cfb0a8d883a423f" kindref="member">nodeTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashSet&lt;string&gt;();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a4a138515c52de98435a8b3420e405992" kindref="member">setStagingState</ref>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a4a138515c52de98435a8b3420e405992" kindref="member">setStagingState</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1aec7edd0f877aa8baaf7f24be13034c22" kindref="member">stagingEnabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.dockingPorts.AddUnique(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a7558ca8d74156e0abaf0b6d9f9bb6373" kindref="member">evtSetAsTarget</ref><sp/>=<sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;SetAsTarget&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evtUnsetTarget<sp/>=<sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UnsetTarget&quot;</highlight><highlight class="normal">];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref><sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref>);<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>consumed<sp/>resource<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consumedResources<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumedResources<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;PartResourceDefinition&gt;();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumedResources.Clear();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>rotation<sp/>power/rate<sp/>since<sp/>it<sp/>doesn&apos;t<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power<sp/>=<sp/><ref refid="class_module_docking_node_1a791033dcb73ae32e28b873333265abe5" kindref="member">baseResourceConsumptionRate</ref><sp/>*<sp/><ref refid="class_module_docking_node_1a9a6eeed1935130069f143b35a8a6aee4" kindref="member">maxMotorOutput</ref><sp/>*<sp/>(<ref refid="class_module_docking_node_1a0c2367c439fd7504d43076bdee935141" kindref="member">traverseVelocity</ref>/<ref refid="class_module_docking_node_1a9151e343222eb5e49d56dbc1a2363d37" kindref="member">referenceConsumptionVelocity</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a69e52ad068e83763f11ea6e0372d435d" kindref="member">motorRate</ref><sp/>=<sp/>power<sp/>/<sp/><ref refid="class_module_docking_node_1a34defb06162219d4dc6205e07b664e4a" kindref="member">efficiency</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iC<sp/>=<sp/><ref refid="class_part_module_1aabb246e50be481c8d50be6025e50c518" kindref="member">resHandler</ref>.<ref refid="class_module_resource_handler_1a950aba0641820e122cf254118a2f0b8d" kindref="member">inputResources</ref>.Count;<sp/>i<sp/>&lt;<sp/>iC;<sp/>++i)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resHandler.inputResources[i].startUpHandler<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resHandler.inputResources[i].startUpAmount<sp/>=<sp/><ref refid="class_module_docking_node_1a69e52ad068e83763f11ea6e0372d435d" kindref="member">motorRate</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consumedResources.Add(PartResourceLibrary.Instance.GetDefinition(resHandler.inputResources[i].name));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4dae2b17dd7d629691ccd3f45527139a" kindref="member">OnLoad</ref>(<ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a8a27f108c86e91206d6dda1a690eaaab" kindref="member">HasValue</ref>(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref><sp/>=<sp/>node.<ref refid="class_config_node_1acb516a6d2dfa778053929e68b7e1fa16" kindref="member">GetValue</ref>(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a8a27f108c86e91206d6dda1a690eaaab" kindref="member">HasValue</ref>(</highlight><highlight class="stringliteral">&quot;dockUId&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_module_docking_node_1a1f1e8fd05359fe60bd378482673abfa9" kindref="member">dockedPartUId</ref><sp/>=<sp/>uint.Parse(node.<ref refid="class_config_node_1acb516a6d2dfa778053929e68b7e1fa16" kindref="member">GetValue</ref>(</highlight><highlight class="stringliteral">&quot;dockUId&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a8a27f108c86e91206d6dda1a690eaaab" kindref="member">HasValue</ref>(</highlight><highlight class="stringliteral">&quot;dockNodeIdx&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_module_docking_node_1aded3cc067e4495074dae5f7f3c71e75d" kindref="member">dockingNodeModuleIndex</ref><sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">.Parse(node.<ref refid="class_config_node_1acb516a6d2dfa778053929e68b7e1fa16" kindref="member">GetValue</ref>(</highlight><highlight class="stringliteral">&quot;dockNodeIdx&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a9733a87e25844188985912e54f7406ab" kindref="member">HasNode</ref>(</highlight><highlight class="stringliteral">&quot;DOCKEDVESSEL&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_docked_vessel_info" kindref="compound">DockedVesselInfo</ref>();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vesselInfo.Load(node.GetNode(</highlight><highlight class="stringliteral">&quot;DOCKEDVESSEL&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>=<sp/>part.FindAttachNode(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelCrossFeed<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;EnableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/>!<ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;DisableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[]<sp/>types<sp/>=<sp/>nodeType.Split(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[]<sp/>{<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>},<sp/>System.StringSplitOptions.RemoveEmptyEntries);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iC<sp/>=<sp/>types.Length;<sp/>i<sp/>&lt;<sp/>iC;<sp/>++i)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeTypes.Add(types[i]);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clamp<sp/>the<sp/>port<sp/>limits<sp/>to<sp/>=/-<sp/>90<sp/>degrees<sp/>maximum.<sp/>Otherwise<sp/>we<sp/>will<sp/>run<sp/>into<sp/>joint<sp/>limit<sp/>problems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardMinMaxLimits.x<sp/>=<sp/>Mathf.Clamp(hardMinMaxLimits.x,<sp/>-86f,<sp/>0f);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hardMinMaxLimits.y<sp/>=<sp/>Mathf.Clamp(hardMinMaxLimits.y,<sp/>0f,<sp/>86f);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aeb8ea79bf27abf58ebaf47c8938c2c44" kindref="member">OnSave</ref>(<ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.AddValue(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>fsm.Started<sp/>?<sp/>fsm.currentStateName<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.AddValue(</highlight><highlight class="stringliteral">&quot;dockUId&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a1f1e8fd05359fe60bd378482673abfa9" kindref="member">dockedPartUId</ref>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.AddValue(</highlight><highlight class="stringliteral">&quot;dockNodeIdx&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1aded3cc067e4495074dae5f7f3c71e75d" kindref="member">dockingNodeModuleIndex</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref><sp/>!=<sp/>null)<sp/>vesselInfo.Save(node.AddNode(</highlight><highlight class="stringliteral">&quot;DOCKEDVESSEL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.<ref refid="class_vessel_1a5c11a2786e6a09086ad360873db09969" kindref="member">loaded</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null))</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a828157a773d24a03b6fb5312d4680e76" kindref="member">ApplyCoordsUpdate</ref>();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ae2bfab6360cbb24b23c86910efae7f4e" kindref="member">OnStart</ref>(<ref refid="class_part_module" kindref="compound">PartModule</ref>.<ref refid="class_part_module_1ac6597127392e002b92f7427cf50244d3" kindref="member">StartState</ref><sp/>st)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UndockSameVessel&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;MakePrimary&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref><sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[Docking<sp/>Node<sp/>Module]:<sp/>WARNING<sp/>-<sp/>No<sp/>node<sp/>transform<sp/>found<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref>,<sp/>part.gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a197e26f6653a355778f9c1372ca347f3" kindref="member">controlTransformName</ref><sp/>==<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref><sp/>=<sp/>part.transform;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref><sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a197e26f6653a355778f9c1372ca347f3" kindref="member">controlTransformName</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref>)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[Docking<sp/>Node<sp/>Module]:<sp/>WARNING<sp/>-<sp/>No<sp/>control<sp/>transform<sp/>found<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_module_docking_node_1a197e26f6653a355778f9c1372ca347f3" kindref="member">controlTransformName</ref>,<sp/>part.gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref><sp/>=<sp/>part.transform;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a3b1b97fd1e60e0bdf2b116840827ea8d" kindref="member">physicalSignificance</ref><sp/>!=<sp/><ref refid="class_part" kindref="compound">Part</ref>.<ref refid="class_part_1a096ba07cc5a00c2c74bbdd83982c8df5" kindref="member">PhysicalSignificance</ref>.FULL)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[Docking<sp/>Node<sp/>Module]:<sp/>WARNING<sp/>-<sp/>The<sp/>part<sp/>for<sp/>a<sp/>docking<sp/>node<sp/>module<sp/>cannot<sp/>be<sp/>physicsless!&quot;</highlight><highlight class="normal">,<sp/>part.gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.physicalSignificance<sp/>=<sp/>Part.PhysicalSignificance.FULL;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a31850788bf29bc48c5518dbb844b9f8f" kindref="member">deployAnimationController</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>=<sp/>part.Modules.GetModule(<ref refid="class_module_docking_node_1a31850788bf29bc48c5518dbb844b9f8f" kindref="member">deployAnimationController</ref>)<sp/>as<sp/><ref refid="class_module_animate_generic" kindref="compound">ModuleAnimateGeneric</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelCrossFeed<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;EnableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/>!<ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;DisableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine(<ref refid="class_module_docking_node_1a1ced93c5b13ebf9f8261a67100561784" kindref="member">lateFSMStart</ref>(st));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>rotation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a3b9f4954e6389979b63490d7ce514ee9" kindref="member">rotationTransformName</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationTransform<sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a3b9f4954e6389979b63490d7ce514ee9" kindref="member">rotationTransformName</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rotationTransform)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[Docking<sp/>Node<sp/>Module]:<sp/>WARNING<sp/>-<sp/>No<sp/>rotation<sp/>transform<sp/>found<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_module_docking_node_1a3b9f4954e6389979b63490d7ce514ee9" kindref="member">rotationTransformName</ref>,<sp/>part.gameObject);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartActionUIShown.Add(<ref refid="class_module_docking_node_1a4752ef972bd37d4b123aa0534999c2e2" kindref="member">OnPartMenuOpen</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartActionUIDismiss.Add(<ref refid="class_module_docking_node_1ab3968517795d7e6d8a2910101e4d980d" kindref="member">OnPartMenuClose</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1af24937833de82e5409f668b9f483a12a" kindref="member">LoadedSceneIsMissionBuilder</ref>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialRotation<sp/>=<sp/>rotationTransform.localRotation.eulerAngles;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fields.TryGetFieldUIControl(</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">,<sp/>out<sp/><ref refid="class_module_docking_node_1a8ee535c5390507ad0fee731602c74b6e" kindref="member">targetAngleUIField</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetAngleUIField.minValue<sp/>=<sp/>hardMinMaxLimits.x;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetAngleUIField.maxValue<sp/>=<sp/>hardMinMaxLimits.y;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a51fdaee5c5173874ff679b1d76428e0c" kindref="member">targetAngleAxisField</ref><sp/>=<sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">]<sp/>as<sp/><ref refid="class_base_axis_field" kindref="compound">BaseAxisField</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetAngleAxisField.minValue<sp/>=<sp/>hardMinMaxLimits.x;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetAngleAxisField.maxValue<sp/>=<sp/>hardMinMaxLimits.y;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>not<sp/>attached<sp/>to<sp/>anything<sp/>or<sp/>can&apos;t<sp/>rotate<sp/>lock<sp/>the<sp/>node<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>==<sp/>null)<sp/>||<sp/>!<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].OnValueModified<sp/>+=<sp/><ref refid="class_module_docking_node_1a77c907a52a29ec78bd07a4f1305c45d9" kindref="member">ModifyLocked</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiInteractable<sp/>=<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aedc77acae66df35032db090f1ea9f3bf" kindref="member">OnStartFinished</ref>(<ref refid="class_part_module_1ac6597127392e002b92f7427cf50244d3" kindref="member">StartState</ref><sp/><ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null)<sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>docked<sp/>when<sp/>loaded?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>back<sp/>to<sp/>target<sp/>rotation<sp/>now<sp/>that<sp/>the<sp/>joint<sp/>has<sp/>been<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>rotationTransform<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.angularXMotion<sp/>=<sp/>ConfigurableJointMotion.Limited;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driveTargetAngle<sp/>=<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>some<sp/>rotating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialRotation<sp/>=<sp/>rotationTransform.localRotation.eulerAngles;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cache<sp/>the<sp/>initial<sp/>angle<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedInitialAngle<sp/>=<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1aeedc0150421be3f2110612779d20d02a" kindref="member">Joint</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.identity,<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref><sp/>-<sp/>cachedInitialAngle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.SetTargetRotationLocal(rotation,<sp/>Quaternion.identity);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>visual<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1aeedc0150421be3f2110612779d20d02a" kindref="member">Joint</ref>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.Euler(initialRotation),<sp/>VisualTargetAngle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.Euler(initialRotation),<sp/>-VisualTargetAngle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationTransform.localRotation<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualTargetAngle<sp/>=<sp/>VisualTargetAngle;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationInitComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>the<sp/>othernode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>!<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.rotationInitComplete)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.targetRotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.Euler(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.initialRotation),<sp/>-otherNode.VisualTargetAngle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.rotationTransform.localRotation<sp/>=<sp/>otherNode.targetRotation;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.visualTargetAngle<sp/>=<sp/>otherNode.VisualTargetAngle;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.rotationInitComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>not<sp/>docked,<sp/>so<sp/>we<sp/>are<sp/>ready<sp/>to<sp/>rotate<sp/>when<sp/>docked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationInitComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a44aacb7b4dc06a6d88c6de560a7c71e7" kindref="member">OnInitialize</ref>()</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnInitialize();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPartPack()</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a828157a773d24a03b6fb5312d4680e76" kindref="member">ApplyCoordsUpdate</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPartUnpack()</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>we<sp/>actually<sp/>can<sp/>rotate,<sp/>and<sp/>we<sp/>are<sp/>docked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driveTargetAngle<sp/>=<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualTargetAngle<sp/>=<sp/>VisualTargetAngle;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1aeedc0150421be3f2110612779d20d02a" kindref="member">Joint</ref>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.identity,<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref><sp/>-<sp/>cachedInitialAngle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.SetTargetRotationLocal(rotation,<sp/>Quaternion.identity);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetJointHighLowLimits();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aa06de8a33a4a4a70ccf906544cfe62f5" kindref="member">OnInventoryModeEnable</ref>()</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>=<sp/>part.FindAttachNode(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref><sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>other<sp/>node,<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module" kindref="compound">PartModule</ref><sp/>module;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iC<sp/>=<sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref>.<ref refid="class_part_1a189f16371eb3211693203b6ae80e84f7" kindref="member">Modules</ref>.<ref refid="class_part_module_list_1a2c528f8b809c9277c8b62289202eb234" kindref="member">Count</ref>;<sp/>i<sp/>&lt;<sp/>iC;<sp/>++i)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>referenceNode.attachedPart.Modules[i];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>node<sp/>=<sp/>module<sp/>as<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>null<sp/>||<sp/>node.<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_construction_Attach);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.otherNode<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnConstructionAttach();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a65004b1fdf1ea5425d73c8b521783bf1" kindref="member">OnInventoryModeDisable</ref>()</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref><sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>=<sp/>part.FindAttachNode(<ref refid="class_module_docking_node_1a3221ed89cf283d59f19f42238318379b" kindref="member">referenceAttachNode</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref><sp/>=<sp/>part.FindModelTransform(<ref refid="class_module_docking_node_1a80728299f5d91e248025d4c55408213f" kindref="member">nodeTransformName</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref>)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_construction_Detach);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a258072c6eed60aa31e417e33dcea0fbd" kindref="member">DemoteToPhysicslessPart</ref>()</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsLessMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a9b03909f9019730ccfe487dfda425ec6" kindref="member">PromoteToPhysicalPart</ref>()</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsLessMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4752ef972bd37d4b123aa0534999c2e2" kindref="member">OnPartMenuOpen</ref>(<ref refid="class_u_i_part_action_window" kindref="compound">UIPartActionWindow</ref><sp/>window,<sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>inpPart)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inpPart.<ref refid="class_part_1aeb09503100374cd511e4eb664e5b7b2f" kindref="member">persistentId</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aeb09503100374cd511e4eb664e5b7b2f" kindref="member">persistentId</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partActionMenuOpen<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a3fb76f44d51e9bd27b4416fbc9d9b97a" kindref="member">UpdatePAWUI</ref>();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab3968517795d7e6d8a2910101e4d980d" kindref="member">OnPartMenuClose</ref>(<ref refid="class_part" kindref="compound">Part</ref><sp/>inpPart)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inpPart.<ref refid="class_part_1aeb09503100374cd511e4eb664e5b7b2f" kindref="member">persistentId</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aeb09503100374cd511e4eb664e5b7b2f" kindref="member">persistentId</ref>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partActionMenuOpen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/><ref refid="class_module_docking_node_1a112505caf6a4ca2d29ff2fda54768088" kindref="member">FindOtherNode</ref>()</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>p<sp/>=<sp/>FlightGlobals.FindPartByID(<ref refid="class_module_docking_node_1a1f1e8fd05359fe60bd378482673abfa9" kindref="member">dockedPartUId</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p.Modules.GetModule(<ref refid="class_module_docking_node_1aded3cc067e4495074dae5f7f3c71e75d" kindref="member">dockingNodeModuleIndex</ref>))<sp/>as<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_module_docking_node_1a1ced93c5b13ebf9f8261a67100561784" kindref="member">lateFSMStart</ref>(<ref refid="class_part_module" kindref="compound">PartModule</ref>.<ref refid="class_part_module_1ac6597127392e002b92f7427cf50244d3" kindref="member">StartState</ref><sp/>st)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a98de7d6dcc54c551d459cfa124859fa9" kindref="member">SetupFSM</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((st<sp/>&amp;<sp/><ref refid="class_part_module_1ac6597127392e002b92f7427cf50244d3" kindref="member">StartState</ref>.Editor)<sp/>!=<sp/>0)<sp/>yield<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.Contains(</highlight><highlight class="stringliteral">&quot;Docked&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/><ref refid="class_module_docking_node_1a112505caf6a4ca2d29ff2fda54768088" kindref="member">FindOtherNode</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>port<sp/>got<sp/>deleted?<sp/>Or<sp/>more<sp/>likely<sp/>moved<sp/>out<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>while<sp/>unloaded.<sp/>Give<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Docked<sp/>for<sp/>the<sp/>subordinate<sp/>(docker)<sp/>port<sp/>has<sp/>always<sp/>been<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.Contains(</highlight><highlight class="stringliteral">&quot;(dockee)&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>validate<sp/>the<sp/>state<sp/>for<sp/>the<sp/>docking<sp/>port<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dominant<sp/>vessel<sp/>as<sp/>it<sp/>may<sp/>be<sp/>from<sp/>an<sp/>old<sp/>save<sp/>that<sp/>was<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>subordinate<sp/>port<sp/>was<sp/>still<sp/>in<sp/>the<sp/>Aquire<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref>.Contains(</highlight><highlight class="stringliteral">&quot;Acquire&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>st_acquire_dockee.name;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref>.Contains(</highlight><highlight class="stringliteral">&quot;Docked&quot;</highlight><highlight class="normal">)<sp/>||<sp/>(otherNode.part.parent<sp/>!=<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref><sp/>&amp;&amp;<sp/>part.parent<sp/>!=<sp/>otherNode.part))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>port<sp/>is<sp/>docked,<sp/>but<sp/>not<sp/>to<sp/>this<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/>(state.Contains(</highlight><highlight class="stringliteral">&quot;Acquire&quot;</highlight><highlight class="normal">)<sp/>||<sp/>state.Contains(</highlight><highlight class="stringliteral">&quot;Disengage&quot;</highlight><highlight class="normal">)))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>in<sp/>lateFSMStart<sp/>because<sp/>parts<sp/>cannot<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>by<sp/>their<sp/>id<sp/>until<sp/>their<sp/>vessel<sp/>has<sp/>been<sp/>started,<sp/>and<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>no<sp/>telling<sp/>when<sp/>the<sp/>other<sp/>port&apos;s<sp/>vessel<sp/>(if<sp/>it<sp/>is<sp/>not<sp/>ours)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/><ref refid="class_module_docking_node_1a112505caf6a4ca2d29ff2fda54768088" kindref="member">FindOtherNode</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>other<sp/>node,<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module" kindref="compound">PartModule</ref><sp/>module;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>iC<sp/>=<sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref>.<ref refid="class_part_1a189f16371eb3211693203b6ae80e84f7" kindref="member">Modules</ref>.<ref refid="class_part_module_list_1a2c528f8b809c9277c8b62289202eb234" kindref="member">Count</ref>;<sp/>i<sp/>&lt;<sp/>iC;<sp/>++i)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>referenceNode.attachedPart.Modules[i];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>node<sp/>=<sp/>module<sp/>as<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>null<sp/>||<sp/>node.<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.StartFSM(st_preattached);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.StartFSM(<ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_part_joint" kindref="compound">PartJoint</ref><sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_kerbal_f_s_m" kindref="compound">KerbalFSM</ref><sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>,<sp/>st_acquire,<sp/>st_acquire_dockee,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_dockee,<sp/>st_docked_docker,<sp/>st_docker_sameVessel,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage,<sp/>st_disabled,<sp/>st_preattached;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref><sp/><ref refid="class_module_docking_node_1aed2467e2051ffcf9bde0f23bd6e83f84" kindref="member">on_nodeApproach</ref>,<sp/>on_nodeDistance,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture,<sp/>on_capture_dockee,<sp/>on_capture_docker,<sp/>on_capture_docker_sameVessel,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock,<sp/>on_sameVessel_disconnect,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_disable,<sp/>on_enable,<sp/>on_decouple,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_preattachedDecouple,<sp/>on_swapPrimary,<sp/>on_swapSecondary,<sp/>on_construction_Attach,<sp/>on_construction_Detach;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a98de7d6dcc54c551d459cfa124859fa9" kindref="member">SetupFSM</ref>()</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_kerbal_f_s_m" kindref="compound">KerbalFSM</ref>();</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.OnStateChange<sp/>+=<sp/>OnFSMStateChange;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.OnEventCalled<sp/>+=<sp/>OnFSMEventCalled;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_ready.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1ab38f76e00972358ab6173b56c9cd58e1" kindref="member">animReadyEnter</ref>)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_ready.OnFixedUpdate<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/><ref refid="class_module_docking_node_1a8e0b0c5630c33fae432a77b1822fa626" kindref="member">FindNodeApproaches</ref>();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_ready.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7b1548b6476e15afe7a044914ac48c06" kindref="member">animReadyExit</ref>)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(<ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_acquire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_acquire<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Acquire&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_acquire.OnFixedUpdate<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>attractDir<sp/>=<sp/>(otherNode.nodeTransform.position<sp/>-<sp/>nodeTransform.position);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>attractTorque<sp/>=<sp/>Vector3.Cross(nodeTransform.forward,<sp/>-otherNode.nodeTransform.forward);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>attractTorqueRoll<sp/>=<sp/>Vector3.Cross(nodeTransform.up,<sp/>-otherNode.nodeTransform.up);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqrDistRecip<sp/>=<sp/>1f<sp/>/<sp/>Mathf.Max(attractDir.sqrMagnitude,<sp/>0.05f);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.AddForceAtPosition((attractDir<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1a2eee57388c71038077f0ca7f5b6a31f1" kindref="member">acquireForce</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f),<sp/>nodeTransform.position);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.AddTorque((attractTorque<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1ad9ec95492dd0a31a882eb3b47d71021d" kindref="member">acquireTorque</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f));</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.AddTorque((attractTorqueRoll<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1afb66573181ad2cf24a2ed9939ed2fdf2" kindref="member">acquireTorqueRoll</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f));</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.part.AddForceAtPosition(-(attractDir<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1a2eee57388c71038077f0ca7f5b6a31f1" kindref="member">acquireForce</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f),<sp/>otherNode.nodeTransform.position);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.part.AddTorque(-(attractTorque<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1ad9ec95492dd0a31a882eb3b47d71021d" kindref="member">acquireTorque</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f));</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.part.AddTorque(-(attractTorqueRoll<sp/>*<sp/>sqrDistRecip)<sp/>*<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1afb66573181ad2cf24a2ed9939ed2fdf2" kindref="member">acquireTorqueRoll</ref><sp/>*<sp/>0.5f<sp/>*<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1aa14b8f0c5e02eea534939a286d55ab17" kindref="member">acquireForceTweak</ref><sp/>*<sp/>0.01f));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_acquire);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_acquire_dockee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>state<sp/>does<sp/>very<sp/>little:<sp/>it<sp/>is<sp/>a<sp/>just<sp/>somewhere<sp/>for<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>machine<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>docker<sp/>port<sp/>to<sp/>capture<sp/>or<sp/>disengage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_acquire_dockee<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Acquire<sp/>(dockee)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_acquire_dockee);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_docked_dockee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_dockee<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Docked<sp/>(dockee)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_dockee.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>came<sp/>here<sp/>from<sp/>docker<sp/>same<sp/>vessel<sp/>state<sp/>and<sp/>a<sp/>sameVesselUndockRedock<sp/>is<sp/>happening.<sp/>Start<sp/>the<sp/>process<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameVesselUndockRedock<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a1d67291df760512711bc0381b9b96eb4" kindref="member">LastState</ref><sp/>==<sp/>st_docker_sameVessel)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1ad0d9505c0e5efa67da4ec38456700d7f" kindref="member">DestroySameVesselJoint</ref>();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.DockToVessel(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_docker);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a12ea089c5b89edd5017a0c66667f7ed1" kindref="member">setAnimWrite</ref>)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.SetUIWrite(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a1d67291df760512711bc0381b9b96eb4" kindref="member">LastState</ref><sp/>!=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>)<sp/></highlight><highlight class="comment">//If<sp/>coming<sp/>from<sp/>ready<sp/>state<sp/>must<sp/>be<sp/>same<sp/>vessel<sp/>dock.<sp/>So<sp/>we<sp/>don&apos;t<sp/>enable<sp/>the<sp/>make<sp/>primary<sp/>event<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;MakePrimary&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockRedock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_docked_dockee);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_docked_docker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_docker<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Docked<sp/>(docker)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_docker.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>came<sp/>here<sp/>from<sp/>docker<sp/>same<sp/>vessel<sp/>state<sp/>and<sp/>a<sp/>sameVesselUndockRedock<sp/>is<sp/>happening.<sp/>Start<sp/>the<sp/>process<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameVesselUndockRedock<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a1d67291df760512711bc0381b9b96eb4" kindref="member">LastState</ref><sp/>==<sp/>st_docker_sameVessel)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1ad0d9505c0e5efa67da4ec38456700d7f" kindref="member">DestroySameVesselJoint</ref>();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a6a52887505527c130afcfdd1090dfcfe" kindref="member">DockToVessel</ref>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_dockee);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;MakePrimary&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelLookupTargets.Add(otherNode.part);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.part.fuelLookupTargets.Add(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartFuelLookupStateChange.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.HostedFromToAction&lt;bool,<sp/><ref refid="class_part" kindref="compound">Part</ref>&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>otherNode.part,<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>));</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a12ea089c5b89edd5017a0c66667f7ed1" kindref="member">setAnimWrite</ref>)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.SetUIWrite(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockRedock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_docker.OnUpdate<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/>!<ref refid="class_module_docking_node_1ae2663c5bcafe0fe3d602f945bc638fb7" kindref="member">IsAdjusterBlockingUndock</ref>()<sp/>&amp;&amp;<sp/>!otherNode.IsAdjusterBlockingUndock();</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_docker.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelLookupTargets.Remove(otherNode.part);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.part.fuelLookupTargets.Remove(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartFuelLookupStateChange.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.HostedFromToAction&lt;bool,<sp/><ref refid="class_part" kindref="compound">Part</ref>&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>,<sp/>otherNode.part));</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_docked_docker);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_docker_sameVessel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docker_sameVessel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Docked<sp/>(same<sp/>vessel)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docker_sameVessel.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UndockSameVessel&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;MakePrimary&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.<ref refid="class_vessel_1a6865c569aed777265a851a7b23d87bd4" kindref="member">packed</ref>)<sp/><ref refid="class_module_docking_node_1a67fb760ca545b909a1c6e03caa257e5c" kindref="member">DockToSameVessel</ref>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockRedock<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docker_sameVessel.OnUpdate<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/>!<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.<ref refid="class_vessel_1a6865c569aed777265a851a7b23d87bd4" kindref="member">packed</ref>)<sp/><ref refid="class_module_docking_node_1a67fb760ca545b909a1c6e03caa257e5c" kindref="member">DockToSameVessel</ref>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UndockSameVessel&quot;</highlight><highlight class="normal">].active<sp/>=<sp/>!<ref refid="class_module_docking_node_1ae2663c5bcafe0fe3d602f945bc638fb7" kindref="member">IsAdjusterBlockingUndock</ref>()<sp/>&amp;&amp;<sp/>!otherNode.IsAdjusterBlockingUndock();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docker_sameVessel.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UndockSameVessel&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//When<sp/>leaving<sp/>same<sp/>vessel<sp/>docked<sp/>state,<sp/>we<sp/>check<sp/>if<sp/>the<sp/>sameVesselUndockRedock<sp/>bool<sp/>is<sp/>true<sp/>(set<sp/>by<sp/>the<sp/>on_sameVessel_disconnect<sp/>event<sp/>which<sp/>causes<sp/>this<sp/>OnLeave<sp/>to<sp/>run)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>set<sp/>the<sp/>animator<sp/>state<sp/>and<sp/>leave.<sp/>We<sp/>don&apos;t<sp/>destroy<sp/>the<sp/>same<sp/>vessel<sp/>joint.<sp/>That<sp/>will<sp/>be<sp/>done<sp/>when<sp/>we<sp/>go<sp/>to<sp/>st_docked_dockee<sp/>or<sp/>st_docked_docker<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sameVesselUndockRedock)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a24ef775dc90f8f90cfbeacfddf88954e" kindref="member">animCaptureOff</ref>)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1ad0d9505c0e5efa67da4ec38456700d7f" kindref="member">DestroySameVesselJoint</ref>();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a3c27097ab028cd9a6fe17d0b64bef016" kindref="member">LastEvent</ref><sp/>==<sp/>on_sameVessel_disconnect)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wipe<sp/>otherNode<sp/>if<sp/>going<sp/>to<sp/>ready<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>happen<sp/>when<sp/>the<sp/>primary<sp/>node<sp/>undocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockNode<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockOtherNode<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_docker_sameVessel);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_disengage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Disengage&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1ab397174a8595c6815fe21dd8eb397386" kindref="member">animDisengageEnter</ref>)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a2d7ea4ea5f93e10ca6d3fea6d5bc4546" kindref="member">animDisengageExit</ref>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_disengage);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disabled<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disabled.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a53ee937108acd1ae6051e01264598f7b" kindref="member">animDisabledEnter</ref>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disabled.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a0a2e2e3d42fc69ddcec01e231e7c6928" kindref="member">animDisabledExit</ref>)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_disabled);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>st_preattached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_preattached<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref>(</highlight><highlight class="stringliteral">&quot;PreAttached&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_preattached.OnEnter<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undockPreAttached<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_preattached.OnLeave<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undockPreAttached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddState(st_preattached);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_nodeApproach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1aed2467e2051ffcf9bde0f23bd6e83f84" kindref="member">on_nodeApproach</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Node<sp/>Approach&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">KFSMUpdateMode.UPDATE</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.GoToStateOnEvent<sp/>=<sp/>st_acquire;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a1f1e8fd05359fe60bd378482673abfa9" kindref="member">dockedPartUId</ref><sp/>=<sp/>otherNode.part.flightID;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1aded3cc067e4495074dae5f7f3c71e75d" kindref="member">dockingNodeModuleIndex</ref><sp/>=<sp/>otherNode.part.Modules.IndexOf(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vessel" kindref="compound">Vessel</ref>.<ref refid="class_vessel_1acce84691c323c56abe0ff3ba7429d87f" kindref="member">GetDominantVessel</ref>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)<sp/>==<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>the<sp/>dominant<sp/>vessel,<sp/>do<sp/>nothing.<sp/>The<sp/>other<sp/>node<sp/>is<sp/>going<sp/>to<sp/>dock<sp/>to<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.GoToStateOnEvent<sp/>=<sp/>st_acquire_dockee;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>vessel<sp/>is<sp/>dominant.<sp/>We<sp/>dock<sp/>to<sp/>it<sp/>then.<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.GoToStateOnEvent<sp/>=<sp/>st_acquire;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a9295e776b841b185f89352f394633097" kindref="member">GetDominantNode</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>the<sp/>dominant<sp/>node,<sp/>do<sp/>nothing.<sp/>The<sp/>other<sp/>node<sp/>is<sp/>going<sp/>to<sp/>dock<sp/>to<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>other<sp/>node<sp/>is<sp/>dominant.<sp/>We<sp/>dock<sp/>to<sp/>it<sp/>then.<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeApproach.GoToStateOnEvent<sp/>=<sp/>st_acquire;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(<ref refid="class_module_docking_node_1aed2467e2051ffcf9bde0f23bd6e83f84" kindref="member">on_nodeApproach</ref>,<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Capture&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">KFSMUpdateMode.UPDATE</ref>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a25ad9d55e7a126985416cbf970f5addd" kindref="member">CheckDockContact</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>,<sp/><ref refid="class_module_docking_node_1a2b9f6996c013b9f6bdc5751a15d2259a" kindref="member">captureRange</ref>,<sp/><ref refid="class_module_docking_node_1a9ff442b7fbda1bc2b43eece4f1cfa3c6" kindref="member">captureMinFwdDot</ref>,<sp/><ref refid="class_module_docking_node_1a7d78ce9ff2889a1a7a86bbde28605e9b" kindref="member">captureMinRollDot</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(part.rb.velocity<sp/>-<sp/>otherNode.part.rb.velocity).sqrMagnitude<sp/>&lt;=<sp/>(<ref refid="class_module_docking_node_1ab3e5b05c8c9e9b96e044beff2ed71549" kindref="member">captureMaxRvel</ref><sp/>*<sp/><ref refid="class_module_docking_node_1ab3e5b05c8c9e9b96e044beff2ed71549" kindref="member">captureMaxRvel</ref>));</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a25ad9d55e7a126985416cbf970f5addd" kindref="member">CheckDockContact</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>,<sp/><ref refid="class_module_docking_node_1a2b9f6996c013b9f6bdc5751a15d2259a" kindref="member">captureRange</ref>,<sp/><ref refid="class_module_docking_node_1a9ff442b7fbda1bc2b43eece4f1cfa3c6" kindref="member">captureMinFwdDot</ref>,<sp/><ref refid="class_module_docking_node_1a7d78ce9ff2889a1a7a86bbde28605e9b" kindref="member">captureMinRollDot</ref>);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vessel" kindref="compound">Vessel</ref>.<ref refid="class_vessel_1acce84691c323c56abe0ff3ba7429d87f" kindref="member">GetDominantVessel</ref>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)<sp/>==<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.DockToVessel(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_docker);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.GoToStateOnEvent<sp/>=<sp/>st_docked_docker;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a6a52887505527c130afcfdd1090dfcfe" kindref="member">DockToVessel</ref>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_dockee);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a9295e776b841b185f89352f394633097" kindref="member">GetDominantNode</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_docker_sameVessel);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture.GoToStateOnEvent<sp/>=<sp/>st_docker_sameVessel;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_capture_dockee);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a24ef775dc90f8f90cfbeacfddf88954e" kindref="member">animCaptureOff</ref>)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture,<sp/>st_acquire);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_capture_dockee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fired<sp/>manually<sp/>by<sp/>the<sp/>docker<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_dockee<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Capture<sp/>(dockee)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_dockee.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_dockee.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_dockee,<sp/>st_acquire_dockee);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_dockee,<sp/>st_docker_sameVessel);<sp/><sp/></highlight><highlight class="comment">//disengage<sp/>can<sp/>go<sp/>back<sp/>to<sp/>dockee<sp/>when<sp/>same<sp/>vessel<sp/>dock<sp/>goes<sp/>to<sp/>full<sp/>vessel<sp/>dock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_dockee,<sp/>st_disengage);<sp/><sp/></highlight><highlight class="comment">//disengage<sp/>can<sp/>go<sp/>to<sp/>capture<sp/>dockee<sp/>when<sp/>same<sp/>vessel<sp/>dock<sp/>goes<sp/>to<sp/>full<sp/>vessel<sp/>dock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_capture_docker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fired<sp/>manually<sp/>by<sp/>the<sp/>docker<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Capture<sp/>(docker)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a24ef775dc90f8f90cfbeacfddf88954e" kindref="member">animCaptureOff</ref>)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker.GoToStateOnEvent<sp/>=<sp/>st_docked_docker;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_docker,<sp/>st_acquire);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_docker,<sp/>st_docker_sameVessel);<sp/></highlight><highlight class="comment">//On<sp/>capture<sp/>can<sp/>occur<sp/>from<sp/>same<sp/>vessel<sp/>docked<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_docker,<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>);<sp/></highlight><highlight class="comment">//On<sp/>capture<sp/>can<sp/>occur<sp/>from<sp/>same<sp/>vessel<sp/>docked<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_capture_docker_sameVessel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fired<sp/>manually<sp/>by<sp/>the<sp/>docker<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker_sameVessel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Capture<sp/>(docker<sp/>same<sp/>vessel)&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker_sameVessel.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker_sameVessel.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a24ef775dc90f8f90cfbeacfddf88954e" kindref="member">animCaptureOff</ref>)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_capture_docker_sameVessel.GoToStateOnEvent<sp/>=<sp/>st_docker_sameVessel;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_docker_sameVessel,<sp/>st_acquire);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_capture_docker_sameVessel,<sp/>st_acquire_dockee);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_nodeDistance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeDistance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Node<sp/>Distanced&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeDistance.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a71b50ceb3c350c884ea4e5b2cba64d27" kindref="member">KFSMUpdateMode.FIXEDUPDATE</ref>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeDistance.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeDistance.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0a605dbfda9d333812aa7094a8ddf52e" kindref="member">NodeIsTooFar</ref>();</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_nodeDistance.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_nodeDistance,<sp/>st_acquire,<sp/>st_acquire_dockee,<sp/>st_disengage,<sp/>st_docked_dockee);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_undock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock.GoToStateOnEvent<sp/>=<sp/>st_disengage;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a12ea089c5b89edd5017a0c66667f7ed1" kindref="member">setAnimWrite</ref>)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.SetUIWrite(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af503deb967f387ba2ca377385db8d049" kindref="member">animUndockOn</ref>)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployAnimator.Events[</highlight><highlight class="stringliteral">&quot;Toggle&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_undock.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>?<sp/>st_disengage<sp/>:<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_undock,<sp/>st_docked_docker,<sp/>st_docked_dockee,<sp/>st_preattached,<sp/>st_docker_sameVessel);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_sameVessel_disconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Same<sp/>Vessel<sp/>Disconnect&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a71b50ceb3c350c884ea4e5b2cba64d27" kindref="member">KFSMUpdateMode.FIXEDUPDATE</ref>;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>vessels<sp/>change<sp/>and<sp/>no<sp/>sameVesselUndockNode/otherNode<sp/>is<sp/>set<sp/>(So<sp/>wasn&apos;t<sp/>this<sp/>node<sp/>that<sp/>initiated<sp/>it).<sp/>Set<sp/>bools<sp/>so<sp/>states<sp/>don&apos;t<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>&amp;&amp;<sp/>((sameVesselUndockNode<sp/>==<sp/>null<sp/>&amp;&amp;<sp/>sameVesselUndockOtherNode<sp/>==<sp/>null)<sp/>||<sp/>(sameVesselUndockNode<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sameVesselUndockOtherNode<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockRedock<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.sameVesselUndockRedock<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vessel" kindref="compound">Vessel</ref>.<ref refid="class_vessel_1acce84691c323c56abe0ff3ba7429d87f" kindref="member">GetDominantVessel</ref>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)<sp/>==<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.GoToStateOnEvent<sp/>=<sp/>st_docked_docker;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockNode<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockOtherNode<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null<sp/>||<sp/>otherNode.vessel<sp/>!=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_sameVessel_disconnect.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>primary<sp/>node<sp/>undocks,<sp/>go<sp/>back<sp/>to<sp/>ready<sp/>mode<sp/>so<sp/>another<sp/>node<sp/>can<sp/>become<sp/>the<sp/>primary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>&amp;&amp;<sp/>!sameVesselUndockRedock)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnOtherNodeSameVesselDisconnect();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_sameVessel_disconnect,<sp/>st_docker_sameVessel);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_disable<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Disable&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_disable.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">KFSMUpdateMode.UPDATE</ref>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_disable.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a450dccf72430c78e5b6c9b6c7efa569a" kindref="member">animDisableIfNot1</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>.<ref refid="class_module_animate_generic_1a6122c345eac332e47d042ac83a9d7bbd" kindref="member">Progress</ref><sp/>!=<sp/>1.0f);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_disable.GoToStateOnEvent<sp/>=<sp/>st_disabled;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_disable,<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>,<sp/>st_disengage);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_enable<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Enable&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_enable.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">KFSMUpdateMode.UPDATE</ref>;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_enable.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a58361f108fabc911f904eed6c5f57af1" kindref="member">animEnableIf1</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1aa071e9dbf0e53ceb9c9aac83e74090fd" kindref="member">deployAnimator</ref>.<ref refid="class_module_animate_generic_1a6122c345eac332e47d042ac83a9d7bbd" kindref="member">Progress</ref><sp/>==<sp/>1.0f);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_enable.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_enable,<sp/>st_disabled);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_preattachedDecouple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_preattachedDecouple<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;Pre-Attached<sp/>Part<sp/>Decoupled&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_preattachedDecouple.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637a15a8022d0ed9cd9c2a2e756822703eb4" kindref="member">KFSMUpdateMode.UPDATE</ref>;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_preattachedDecouple.OnCheckCondition<sp/>=<sp/>(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>st)<sp/>=&gt;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceNode.attachedPart<sp/>==<sp/>null;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_preattachedDecouple.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_preattachedDecouple,<sp/>st_preattached);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_swapPrimary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fired<sp/>manually<sp/>by<sp/>advanced<sp/>tweakable<sp/>KSPEvent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapPrimary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;SwapPrimary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapPrimary.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapPrimary.GoToStateOnEvent<sp/>=<sp/>st_docked_docker;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_swapPrimary,<sp/>st_docked_dockee);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_swapSecondary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fired<sp/>manually<sp/>by<sp/>advanced<sp/>tweakable<sp/>KSPEvent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapSecondary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;SwapSecondary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapSecondary.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_swapSecondary.GoToStateOnEvent<sp/>=<sp/>st_docked_dockee;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_swapSecondary,<sp/>st_docked_docker);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_construction_Attach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Attach<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;OnConstructionAttach&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Attach.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Attach.GoToStateOnEvent<sp/>=<sp/>st_preattached;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Attach.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_construction_Attach,<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>,<sp/>st_acquire,<sp/>st_acquire_dockee,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_dockee,<sp/>st_docked_docker,<sp/>st_docker_sameVessel,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage,<sp/>st_disabled,<sp/>st_preattached);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#region<sp/>on_construction_Detach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Detach<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref>(</highlight><highlight class="stringliteral">&quot;OnConstructionDetach&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Detach.updateMode<sp/>=<sp/><ref refid="_kerbal_f_s_m_8cs_1a754a9577a1f1e7d645c50f4e9423f637af9db077caea84c7fc08c8f283b145543" kindref="member">KFSMUpdateMode.MANUAL_TRIGGER</ref>;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Detach.GoToStateOnEvent<sp/>=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on_construction_Detach.OnEvent<sp/>=<sp/>()<sp/>=&gt;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.AddEvent(on_construction_Detach,<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>,<sp/>st_acquire,<sp/>st_acquire_dockee,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_docked_dockee,<sp/>st_docked_docker,<sp/>st_docker_sameVessel,</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_disengage,<sp/>st_disabled,<sp/>st_preattached);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnFSMStateChange(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>oldStatea,<sp/><ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>newState,<sp/><ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref><sp/>fsmEvent)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1add3eb60178bd7a6977e3030771851dfe" kindref="member">DebugFSMState</ref>)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(</highlight><highlight class="stringliteral">&quot;[ModuleDockingNode]:<sp/>Part:{0}-{1}<sp/>FSM<sp/>State<sp/>Changed,<sp/>Old<sp/>State:{2}<sp/>New<sp/>State:{3}<sp/>Event:{4}&quot;</highlight><highlight class="normal">,<sp/>part.partInfo.title,<sp/>part.persistentId,<sp/>oldStatea.name,<sp/>newState.name,fsmEvent.name);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnFSMEventCalled(<ref refid="class_k_f_s_m_event" kindref="compound">KFSMEvent</ref><sp/>fsmEvent)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1add3eb60178bd7a6977e3030771851dfe" kindref="member">DebugFSMState</ref>)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(</highlight><highlight class="stringliteral">&quot;[ModuleDockingNode]:<sp/>Part:{0}-{1}<sp/>FSM<sp/>Event<sp/>Called,<sp/>Event:{2}&quot;</highlight><highlight class="normal">,<sp/>part.partInfo.title,<sp/>part.persistentId,<sp/>fsmEvent.name);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_event" kindref="compound">BaseEvent</ref><sp/><ref refid="class_module_docking_node_1a7558ca8d74156e0abaf0b6d9f9bb6373" kindref="member">evtSetAsTarget</ref>,<sp/>evtUnsetTarget;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2aa395b48ccbe8fe31c2696389792475" kindref="member">Update</ref>()</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsLessMode)<sp/></highlight><highlight class="comment">//If<sp/>physicsLess<sp/>-<sp/>IE:<sp/>In<sp/>EVA<sp/>construction<sp/>mode<sp/>being<sp/>moved<sp/>or<sp/>rotated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref>)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.UpdateFSM();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>fsm.currentStateName;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref>)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>target<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a4b77d1c3f453a82629236e97dff4417e" kindref="member">fetch</ref>.<ref refid="class_flight_globals_1a448e6f9d59f5808c17ba8cef008bc4ff" kindref="member">VesselTarget</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>as<sp/><ref refid="interface_i_targetable" kindref="compound">ITargetable</ref>)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evtSetAsTarget.active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evtUnsetTarget.active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref><sp/>==<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>)</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.fetch.SetVesselTarget(null);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref>.transform.position<sp/>-<sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.position).sqrMagnitude<sp/>&gt;<sp/>200f<sp/>*<sp/>200f)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.fetch.SetVesselTarget(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evtSetAsTarget.active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evtUnsetTarget.active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partActionMenuOpen)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a3fb76f44d51e9bd27b4416fbc9d9b97a" kindref="member">UpdatePAWUI</ref>();</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a9fe133cf9fb39040060fb55bdceb565f" kindref="member">FixedUpdate</ref>()</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsLessMode)<sp/></highlight><highlight class="comment">//If<sp/>physicsLess<sp/>-<sp/>IE:<sp/>In<sp/>EVA<sp/>construction<sp/>mode<sp/>being<sp/>moved<sp/>or<sp/>rotated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>null)<sp/>fsm.FixedUpdateFSM();</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/><ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_flight_driver" kindref="compound">FlightDriver</ref>.<ref refid="class_flight_driver_1a654d526710565d3a41b79f910bff3fd7" kindref="member">Pause</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.<ref refid="class_vessel_1a6865c569aed777265a851a7b23d87bd4" kindref="member">packed</ref>)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a1bfd5aafccc6b9fce65db6e2023286ca" kindref="member">UpdateAlignmentRotation</ref>();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref>)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a729a65d39090a5e4ab93347abf629353" kindref="member">CalculateResourceDrain</ref>();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref>)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1aabb246e50be481c8d50be6025e50c518" kindref="member">resHandler</ref>.<ref refid="class_module_resource_handler_1a7a7e278d831ef8ae97c3c7ca4b4e092b" kindref="member">HasEnoughResourcesToAutoStart</ref>())</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a249736aaaf479342616608827665f7ac" kindref="member">LateUpdate</ref>()</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsLessMode)<sp/></highlight><highlight class="comment">//If<sp/>physicsLess<sp/>-<sp/>IE:<sp/>In<sp/>EVA<sp/>construction<sp/>mode<sp/>being<sp/>moved<sp/>or<sp/>rotated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>null)<sp/>fsm.LateUpdateFSM();</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1aef582b2f85d8501171f6462bd4d9cc67" kindref="member">OnDestroy</ref>()</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartActionUIShown.Remove(<ref refid="class_module_docking_node_1a4752ef972bd37d4b123aa0534999c2e2" kindref="member">OnPartMenuOpen</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartActionUIDismiss.Remove(<ref refid="class_module_docking_node_1ab3968517795d7e6d8a2910101e4d980d" kindref="member">OnPartMenuClose</ref>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].OnValueModified<sp/>-=<sp/><ref refid="class_module_docking_node_1a77c907a52a29ec78bd07a4f1305c45d9" kindref="member">ModifyLocked</ref>;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a3fb76f44d51e9bd27b4416fbc9d9b97a" kindref="member">UpdatePAWUI</ref>()</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>alignment<sp/>rotate<sp/>fields<sp/>only<sp/>when<sp/>in<sp/>Flight,<sp/>docked<sp/>to<sp/>another<sp/>dock,<sp/>and<sp/>said<sp/>dock<sp/>is<sp/>not<sp/>a<sp/>sameVesselDock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref>)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sameVesselDockJoint<sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sameVesselDockJoint<sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sameVesselDockJoint<sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sameVesselDockJoint<sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sameVesselDockJoint<sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;targetAngle&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;inverted&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;nodeIsLocked&quot;</highlight><highlight class="normal">].guiActiveEditor<sp/>=<sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>==<sp/>null);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/><ref refid="class_module_docking_node_1a8e0b0c5630c33fae432a77b1822fa626" kindref="member">FindNodeApproaches</ref>()</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1ae0a3c1fa4b2c5845c9f11f8e2066d798" kindref="member">packed</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>v;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a13d043a2e397f7ba182cac8929c7e299" kindref="member">VesselsLoaded</ref>.Count;<sp/>i--<sp/>&gt;<sp/>0;)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>FlightGlobals.VesselsLoaded[i];</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(v<sp/>==<sp/>vessel)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_vessel_1a6865c569aed777265a851a7b23d87bd4" kindref="member">packed</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dC<sp/>=<sp/>v.dockingPorts.Count;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dC<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module" kindref="compound">PartModule</ref><sp/>module;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>dC;<sp/>j--<sp/>&gt;<sp/>0;)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>=<sp/>v.dockingPorts[j];</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref><sp/>||<sp/>module.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref><sp/>==<sp/>null<sp/>||<sp/>module.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1ae24d7298eb98c13487d470ad1cbc1d3a" kindref="member">State</ref><sp/>==<sp/><ref refid="_part_8cs_1aaf7e202ccc2e0bac6d05d124e49b11d3" kindref="member">PartStates</ref>.DEAD)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>be<sp/>needed<sp/>now,<sp/>we<sp/>only<sp/>check<sp/>docking<sp/>ports<sp/>-<sp/>if<sp/>(module.part.physicalSignificance<sp/>!=<sp/>Part.PhysicalSignificance.FULL)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(module<sp/>is<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModuleDockingNode<sp/>port<sp/>=<sp/>module<sp/>as<sp/>ModuleDockingNode;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port.<ref refid="class_module_docking_node_1a663f781da8cc301a66b0e2960f6fcec8" kindref="member">state</ref><sp/>!=<sp/><ref refid="class_module_docking_node_1a253abba906c10c29aa16b5c4fd799731" kindref="member">st_ready</ref>.<ref refid="class_k_f_s_m_state_1a68d4d7ed7ae436157a678f92de2ffa18" kindref="member">name</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notSame<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>itr<sp/>=<sp/>nodeTypes.GetEnumerator();</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itr.MoveNext())</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notSame<sp/>&amp;=<sp/>!port.<ref refid="class_module_docking_node_1a7289ff0c267da5f95cfb0a8d883a423f" kindref="member">nodeTypes</ref>.Contains(itr.Current);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notSame)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port.<ref refid="class_module_docking_node_1a70f0bf8a35cca9a03999ebcb5f557d95" kindref="member">gendered</ref><sp/>!=<sp/><ref refid="class_module_docking_node_1a70f0bf8a35cca9a03999ebcb5f557d95" kindref="member">gendered</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a70f0bf8a35cca9a03999ebcb5f557d95" kindref="member">gendered</ref><sp/>&amp;&amp;<sp/>port.<ref refid="class_module_docking_node_1a401c1d3a1dbcb5c8272c33cfe723a934" kindref="member">genderFemale</ref><sp/>==<sp/><ref refid="class_module_docking_node_1a401c1d3a1dbcb5c8272c33cfe723a934" kindref="member">genderFemale</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port.<ref refid="class_module_docking_node_1a587be21701b69ec24a5c0ae62198dd5e" kindref="member">snapRotation</ref><sp/>!=<sp/><ref refid="class_module_docking_node_1a587be21701b69ec24a5c0ae62198dd5e" kindref="member">snapRotation</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a587be21701b69ec24a5c0ae62198dd5e" kindref="member">snapRotation</ref><sp/>&amp;&amp;<sp/>port.<ref refid="class_module_docking_node_1a4729abbc219eade33d230083ff778084" kindref="member">snapOffset</ref><sp/>!=<sp/><ref refid="class_module_docking_node_1a4729abbc219eade33d230083ff778084" kindref="member">snapOffset</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>each<sp/>node<sp/>for<sp/>being<sp/>within<sp/>acquire<sp/>range.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a25ad9d55e7a126985416cbf970f5addd" kindref="member">CheckDockContact</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>port,<sp/><ref refid="class_module_docking_node_1a164c7745c83d9a1e97c3597210eebbec" kindref="member">acquireRange</ref>,<sp/><ref refid="class_module_docking_node_1af7c2330056bbf39ff6c194338471d093" kindref="member">acquireMinFwdDot</ref>,<sp/><ref refid="class_module_docking_node_1a8efb3724bc8cc3b8e2de476d1debd31b" kindref="member">acquireMinRollDot</ref>))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(nodeTransform.position,<sp/>port.nodeTransform.position,<sp/>Color.green);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(nodeTransform.position,<sp/>port.nodeTransform.position,<sp/>Color.red);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a25ad9d55e7a126985416cbf970f5addd" kindref="member">CheckDockContact</ref>(<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>m1,<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>m2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minDist,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minFwdDot,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minRollDot)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(&quot;Dist:<sp/>&quot;<sp/>+<sp/>(m1.nodeTransform.position<sp/>-<sp/>m2.nodeTransform.position).sqrMagnitude<sp/>+<sp/>&quot;<sp/>/<sp/>&quot;+(minDist<sp/>*<sp/>minDist)+&quot;<sp/><sp/>&quot;<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Up<sp/>Dot:<sp/>&quot;<sp/>+<sp/>Mathf.Abs(Vector3.Dot(m1.nodeTransform.up,<sp/>m2.nodeTransform.up))<sp/>+<sp/>&quot;<sp/>/<sp/>&quot;<sp/>+<sp/>minYDot<sp/>+<sp/>&quot;<sp/><sp/><sp/>&quot;<sp/>+<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Fwd<sp/>Dot:<sp/>&quot;<sp/>+<sp/>Vector3.Dot(m1.nodeTransform.forward,<sp/>m2.nodeTransform.forward)<sp/>+<sp/>&quot;<sp/>/<sp/>&quot;<sp/>+<sp/>minZDot);<sp/>///&lt;<sp/>check<sp/>in<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((m1.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.position<sp/>-<sp/>m2.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.position).sqrMagnitude<sp/>&lt;<sp/>minDist<sp/>*<sp/>minDist)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>aligned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Vector3.Dot(m1.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.forward,<sp/>-m2.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.forward)<sp/>&gt;<sp/>minFwdDot)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>rotated<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>Vector3.Dot(m1.nodeTransform.up,<sp/>m2.nodeTransform.up);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m1.<ref refid="class_module_docking_node_1a587be21701b69ec24a5c0ae62198dd5e" kindref="member">snapRotation</ref>)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>Math.Acos(dot);<sp/></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(angle))</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>Math.PI;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>&gt;180<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quadrantDot<sp/>=<sp/>Vector3.Dot(m1.nodeTransform.up,<sp/>m2.nodeTransform.right);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quadrantDot<sp/>&gt;<sp/>0f)<sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>m2<sp/>is<sp/>rotated<sp/>counterclockwise,<sp/>with<sp/>m1<sp/>forwards<sp/>looking<sp/>into<sp/>the<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>=<sp/>(2d<sp/>*<sp/>Math.PI)<sp/>-<sp/>angle;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>snapOffsetRad<sp/>=<sp/>UtilMath.DegreesToRadians(m1.snapOffset);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snapOffsetRad<sp/>&gt;<sp/>0d)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(angle<sp/>&gt;<sp/>snapOffsetRad)<sp/></highlight><highlight class="comment">//<sp/>should<sp/>use<sp/>modulo<sp/>here,<sp/>but<sp/>it&apos;s<sp/>a<sp/>bit<sp/>wonky<sp/>with<sp/>doubles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>-=<sp/>snapOffsetRad;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot<sp/>=<sp/>(float)Math.Cos(angle);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot<sp/>&gt;<sp/>minRollDot)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a6a52887505527c130afcfdd1090dfcfe" kindref="member">DockToVessel</ref>(<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Docking<sp/>to<sp/>vessel<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>node.vessel.GetDisplayName(),<sp/>gameObject);<sp/></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_docked_vessel_info" kindref="compound">DockedVesselInfo</ref>();</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vesselInfo.name<sp/>=<sp/>vessel.vesselName;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vesselInfo.vesselType<sp/>=<sp/>vessel.vesselType;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vesselInfo.rootPartUId<sp/>=<sp/>vessel.rootPart.flightID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.vesselInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_docked_vessel_info" kindref="compound">DockedVesselInfo</ref>();</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.vesselInfo.name<sp/>=<sp/>node.vessel.vesselName;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.vesselInfo.vesselType<sp/>=<sp/>node.vessel.vesselType;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.vesselInfo.rootPartUId<sp/>=<sp/>node.vessel.rootPart.flightID;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>originalVessel<sp/>=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>originalVesselPerisistentId<sp/>=<sp/>vessel.persistentId;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>newVesselpersistentId<sp/>=<sp/>node.vessel.persistentId;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselDocking.Fire(originalVesselPerisistentId,<sp/>newVesselpersistentId);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onActiveJointNeedUpdate.Fire(node.vessel);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onActiveJointNeedUpdate.Fire(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>);<sp/></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.vessel.SetRotation(node.vessel.transform.rotation);<sp/></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.SetRotation(Quaternion.FromToRotation(nodeTransform.forward,<sp/>-node.nodeTransform.forward)<sp/>*<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.transform.rotation);<sp/></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.SetPosition(vessel.transform.position<sp/>-<sp/>(nodeTransform.position<sp/>-<sp/>node.nodeTransform.position),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.IgnoreGForces(10);<sp/></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.Couple(node.part);<sp/></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselPersistentIdChanged.Fire(originalVesselPerisistentId,<sp/>newVesselpersistentId);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originalVessel<sp/>==<sp/><ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref>)</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.ForceSetActiveVessel(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightInputHandler.SetNeutralControls();</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>new<sp/>vessel<sp/>was<sp/>already<sp/>the<sp/>focused<sp/>one,<sp/>then<sp/>just<sp/>make<sp/>it<sp/>active<sp/>again<sp/>so<sp/>it<sp/>cycles<sp/>internal<sp/>spaces<sp/>and<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>==<sp/><ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref>)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.MakeActive();</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightInputHandler.SetNeutralControls();</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>all<sp/>the<sp/>original<sp/>vessel<sp/>parts<sp/>persistentIds<sp/>are<sp/>registered<sp/>with<sp/>FlightGlobals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>originalVessel.parts.Count;<sp/>++i)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.PersistentLoadedPartIds.Add(originalVessel.parts[i].persistentId,<sp/>originalVessel.parts[i]);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(originalVessel.<ref refid="class_vessel_1ac7375355e4d264fcfbddc80b4e47ef76" kindref="member">parts</ref>[i].protoPartSnapshot<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.PersistentUnloadedPartIds.Add(originalVessel.parts[i].protoPartSnapshot.persistentId,<sp/>originalVessel.parts[i].protoPartSnapshot);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselWasModified.Fire(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onDockingComplete.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.FromToAction&lt;<ref refid="class_part" kindref="compound">Part</ref>,<sp/>Part&gt;(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>,<sp/>node.part));</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_8002396&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>2f)]<sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_8002396<sp/>=<sp/>Make<sp/>Primary<sp/>Docking<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1afd9fb1eceb1a5a710bf9244adc9bee0f" kindref="member">MakePrimary</ref>()</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.fsm.RunEvent(otherNode.on_swapSecondary);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_swapPrimary);<sp/></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6001444&quot;</highlight><highlight class="normal">,activeEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001444<sp/>=<sp/>Undock<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a14a20bfc3a335b73582b7e919599ee65" kindref="member">UndockAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Undock&quot;</highlight><highlight class="normal">].active<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a37f853720117d7646e33a0215231bcbc" kindref="member">Undock</ref>();</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;UndockSameVessel&quot;</highlight><highlight class="normal">].active<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1abf227549540e7ec3288cbbe346366e64" kindref="member">UndockSameVessel</ref>();</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001445&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>2f)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>IDs<sp/>//#autoLOC_6001445<sp/>=<sp/>Undock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a37f853720117d7646e33a0215231bcbc" kindref="member">Undock</ref>()</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>parent<sp/>=<sp/>part.parent;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/>v<sp/>=<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>refPartId<sp/>=<sp/>vessel.referenceTransformId;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockNode<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockOtherNode<sp/>=<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(undockPreAttached)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af544fa843e0471a3ad82c57f6eb73aa8" kindref="member">Decouple</ref>();</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_undock);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnOtherNodeUndock();</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undockPreAttached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent<sp/>!=<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>)</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undock<sp/>from<sp/>the<sp/>other<sp/>ne<sp/>if<sp/>the<sp/>other<sp/>node<sp/>isn&apos;t<sp/>a<sp/>parent.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>happen<sp/>if<sp/>the<sp/>docked<sp/>vessel<sp/>docks<sp/>to<sp/>a<sp/>larger<sp/>vessel,<sp/>causing<sp/>a<sp/>hierarchy<sp/>flip<sp/>across<sp/>the<sp/>docking<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.Undock();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.Undock(<ref refid="class_module_docking_node_1a8634d5c4e3234025d86fa16223c8edce" kindref="member">vesselInfo</ref>);<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>undocks<sp/>the<sp/>new<sp/>vessel<sp/>and<sp/>creates<sp/>a<sp/>new<sp/>vessel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.AddForce(nodeTransform.forward<sp/>*<sp/>(-<ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref><sp/>*<sp/>0.5f));</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.AddForce(nodeTransform.forward<sp/>*<sp/>(<ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref><sp/>*<sp/>0.5f));<sp/></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>reference<sp/>control<sp/>source<sp/>was<sp/>just<sp/>undocked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/><ref refid="class_flight_globals" kindref="compound">FlightGlobals</ref>.<ref refid="class_flight_globals_1a5f4999c6efd1b060ea887c3f091745eb" kindref="member">ActiveVessel</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[refPartId]<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine(<ref refid="class_module_docking_node_1ab8ace0a6c967af3b2af1dfe6524b5bbd" kindref="member">WaitAndSwitchFocus</ref>());</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_undock);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnOtherNodeUndock();</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_module_docking_node_1ab8ace0a6c967af3b2af1dfe6524b5bbd" kindref="member">WaitAndSwitchFocus</ref>()</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.ForceSetActiveVessel(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightInputHandler.SetNeutralControls();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad04b9c20ae8ba8d332ab4ba3be7cbb53" kindref="member">OnOtherNodeUndock</ref>()</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_undock);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Rotating<sp/>Docking<sp/>Ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Working<sp/>vars<sp/>for<sp/>lerp<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a5aa74e80cf021c3a885e79f94e131d39" kindref="member">maxAnglePerFrame</ref>,<sp/>driveTargetAngle,<sp/>visualTargetAngle;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a1bfd5aafccc6b9fce65db6e2023286ca" kindref="member">UpdateAlignmentRotation</ref>()</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>||<sp/>!<ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref><sp/>||<sp/>!rotationInitComplete)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>should<sp/>happen<sp/>on<sp/>the<sp/>node<sp/>that<sp/>has<sp/>the<sp/>rotation<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>here<sp/>for<sp/>limits,<sp/>because<sp/>of<sp/>KAL<sp/>potential<sp/>overclocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetAngle<sp/>&lt;<sp/>hardMinMaxLimits.x<sp/>||<sp/>targetAngle<sp/>&gt;<sp/><ref refid="class_module_docking_node_1ab71d1bf85ab59851461c5384e72823fd" kindref="member">hardMinMaxLimits</ref>.y)</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calc<sp/>the<sp/>max<sp/>change<sp/>per<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a5aa74e80cf021c3a885e79f94e131d39" kindref="member">maxAnglePerFrame</ref><sp/>=<sp/><ref refid="class_module_docking_node_1a0c2367c439fd7504d43076bdee935141" kindref="member">traverseVelocity</ref><sp/>*<sp/>Time.fixedDeltaTime;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!driveTargetAngle.Equals(<ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref>))</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref>)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetJointHighLowLimits();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lerp<sp/>it<sp/>-<sp/>Don&apos;t<sp/>use<sp/>MoveTowardsAngle<sp/>here<sp/>or<sp/>the<sp/>hinge<sp/>can<sp/>go<sp/>the<sp/>opposite<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driveTargetAngle<sp/>=<sp/>Mathf.MoveTowards(driveTargetAngle,<sp/><ref refid="class_module_docking_node_1a032fc47a01dea7d92130c2fb6de8cdc6" kindref="member">JointTargetAngle</ref>,<sp/><ref refid="class_module_docking_node_1a5aa74e80cf021c3a885e79f94e131d39" kindref="member">maxAnglePerFrame</ref>);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visualTargetAngle<sp/>=<sp/>Mathf.MoveTowards(visualTargetAngle,<sp/>VisualTargetAngle,<sp/><ref refid="class_module_docking_node_1a5aa74e80cf021c3a885e79f94e131d39" kindref="member">maxAnglePerFrame</ref>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>some<sp/>rotating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1aa5a1e018fa5b47c5723aa0879e23c647" kindref="member">attachJoint</ref>.<ref refid="class_part_joint_1aeedc0150421be3f2110612779d20d02a" kindref="member">Joint</ref>)</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partJointUnbreakable)</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.breakTorque<sp/>*=<sp/>10f;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.breakForce<sp/>*=<sp/>10f;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partJointUnbreakable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>attach<sp/>joint<sp/>if<sp/>this<sp/>has<sp/>the<sp/>rotation<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.identity,<sp/>driveTargetAngle<sp/>-<sp/>cachedInitialAngle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.SetTargetRotationLocal(rotation,<sp/>Quaternion.identity);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a828157a773d24a03b6fb5312d4680e76" kindref="member">ApplyCoordsUpdate</ref>();</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>visual<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.Euler(initialRotation),<sp/>visualTargetAngle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationTransform.localRotation<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>visual<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>=<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion.Euler(initialRotation),<sp/>-visualTargetAngle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationTransform.localRotation<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partJointUnbreakable)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.breakTorque<sp/>/=<sp/>10f;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.breakForce<sp/>/=<sp/>10f;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partJointUnbreakable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion<sp/>startingRotation,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotationAngle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setRotation)</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(startingRotation,<sp/>rotationAngle,<sp/>setRotation,<sp/><ref refid="class_module_docking_node_1af73b5e7f4548604754bc77762b33dd13" kindref="member">GetRotationAxis</ref>());</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_module_docking_node_1a5d655d9b08fd7d18cba9cf223bc7953f" kindref="member">SetTargetRotation</ref>(Quaternion<sp/>startingRotation,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotationAngle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setRotation,<sp/>Vector3<sp/><ref refid="class_module_docking_node_1a8390f69aa9c053729e18cb3a03ce163c" kindref="member">rotationAxis</ref>)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>targetRotation<sp/>=<sp/>startingRotation;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setRotation)</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>=<sp/>Quaternion.AngleAxis(rotationAngle,<sp/><ref refid="class_module_docking_node_1a8390f69aa9c053729e18cb3a03ce163c" kindref="member">rotationAxis</ref>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetRotation<sp/>*=<sp/>Quaternion.AngleAxis(rotationAngle,<sp/><ref refid="class_module_docking_node_1a8390f69aa9c053729e18cb3a03ce163c" kindref="member">rotationAxis</ref>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>targetRotation;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_module_docking_node_1af73b5e7f4548604754bc77762b33dd13" kindref="member">GetRotationAxis</ref>()</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>returnAxis<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rotationAxis)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;X-&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.left;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.right;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y-&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.down;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.up;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Z-&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.back;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnAxis<sp/>=<sp/>Vector3.forward;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnAxis;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a729a65d39090a5e4ab93347abf629353" kindref="member">CalculateResourceDrain</ref>()</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ab3013a73baa65b48deff929e4b3a4cbd" kindref="member">LoadedSceneIsEditor</ref>)</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rate<sp/>=<sp/><ref refid="class_module_docking_node_1a69e52ad068e83763f11ea6e0372d435d" kindref="member">motorRate</ref>;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.Abs(rate)<sp/>&lt;<sp/>1e-3)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inputRate,<sp/>outputRate;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rate<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputRate<sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputRate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputRate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputRate<sp/>=<sp/>-rate;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>motorState<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref><sp/>=<sp/>resHandler.UpdateModuleResourceInputs(ref<sp/>motorState,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>inputRate,<sp/>0.999d,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resHandler.UpdateModuleResourceOutputs(outputRate);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_docking_node_1a366ae204c5e53c638801be91f41e83cc" kindref="member">hasEnoughResources</ref>)</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a6ac367cd989d2417043f49bb3443553d" kindref="member">IsRotating</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetJointHighLowLimits()</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1af4dd874fac978aa429b3a00b23be2bab" kindref="member">RotationJoint</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a9abe961a81a070aa67255591d5b69da2" kindref="member">lowerRotationLimit</ref><sp/>=<sp/>RotationJoint.lowAngularXLimit;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a2f3f5e0a236336e28d6c77cf6da3beac" kindref="member">upperRotationLimit</ref><sp/>=<sp/>RotationJoint.highAngularXLimit;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.angularXMotion<sp/>=<sp/>ConfigurableJointMotion.Limited;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>controls<sp/>for<sp/>each<sp/>dock<sp/>are<sp/>independent,<sp/>the<sp/>maximum<sp/>rotation<sp/>for<sp/>the<sp/>joint<sp/>is<sp/>twice<sp/>the<sp/>hadrMinMaxLimits<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerRotationLimit.limit<sp/>=<sp/>(hardMinMaxLimits.x<sp/>*<sp/>2f<sp/>-<sp/>5f);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperRotationLimit.limit<sp/>=<sp/>(hardMinMaxLimits.y<sp/>*<sp/>2f<sp/>+<sp/>5f);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.lowAngularXLimit<sp/>=<sp/><ref refid="class_module_docking_node_1a9abe961a81a070aa67255591d5b69da2" kindref="member">lowerRotationLimit</ref>;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotationJoint.highAngularXLimit<sp/>=<sp/><ref refid="class_module_docking_node_1a2f3f5e0a236336e28d6c77cf6da3beac" kindref="member">upperRotationLimit</ref>;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>[ContextMenu(</highlight><highlight class="stringliteral">&quot;Apply<sp/>Coords<sp/>Update&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a828157a773d24a03b6fb5312d4680e76" kindref="member">ApplyCoordsUpdate</ref>()</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_high_logic" kindref="compound">HighLogic</ref>.<ref refid="class_high_logic_1ae16b6f2a490daac49d69ca4162882f09" kindref="member">LoadedSceneIsFlight</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a4ea96005c7aba98ff58e947a25004e60" kindref="member">vessel</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af1b41d1580bfcf4b98b77c434bc2732d" kindref="member">RecurseCoordUpdate</ref>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a4ea96005c7aba98ff58e947a25004e60" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref>,<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a4ea96005c7aba98ff58e947a25004e60" kindref="member">vessel</ref>.<ref refid="class_vessel_1a27bf773ca0c02137cf78c8c2ff900bc1" kindref="member">rootPart</ref>);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af1b41d1580bfcf4b98b77c434bc2732d" kindref="member">RecurseCoordUpdate</ref>(<ref refid="class_part" kindref="compound">Part</ref><sp/>p,<sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>rootPart)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>null<sp/>||<sp/>rootPart<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UpdateOrgPosAndRot(rootPart);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p.children.Count;<sp/>i++)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af1b41d1580bfcf4b98b77c434bc2732d" kindref="member">RecurseCoordUpdate</ref>(p.<ref refid="class_part_1ab839c4b7973779e31fc9624de6025ecc" kindref="member">children</ref>[i],<sp/>rootPart);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>IResourceConsumer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;PartResourceDefinition&gt;<sp/>consumedResources;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;PartResourceDefinition&gt;<sp/><ref refid="class_module_docking_node_1a3ab04de503ba86a77eb3115f96f0ed92" kindref="member">GetConsumedResources</ref>()</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>consumedResources;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/><ref refid="class_module_docking_node_1a9295e776b841b185f89352f394633097" kindref="member">GetDominantNode</ref>(<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>m1,<sp/><ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>m2)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.<ref refid="class_vessel_1ac7375355e4d264fcfbddc80b4e47ef76" kindref="member">parts</ref>.IndexOf(m1.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>)<sp/>&gt;<sp/>vessel.parts.IndexOf(m2.part))</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m1;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m2;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a67fb760ca545b909a1c6e03caa257e5c" kindref="member">DockToSameVessel</ref>(<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*sameVesselDockJoint<sp/>=<sp/>gameObject.AddComponent&lt;FixedJoint&gt;();</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselDockJoint.connectedBody<sp/>=<sp/>node.GetComponent&lt;Rigidbody&gt;();</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"></highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselDockJoint.breakForce<sp/>=<sp/>part.breakingForce;</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselDockJoint.breakTorque<sp/>=<sp/>part.breakingTorque;</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>=<sp/>PartJoint.Create(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>,<sp/>node.part,<sp/><ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>,<sp/>node.referenceNode,<sp/>node.part.attachMode);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onSameVesselDock.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.FromToAction&lt;<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>,<sp/>ModuleDockingNode&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>node));</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad0d9505c0e5efa67da4ec38456700d7f" kindref="member">DestroySameVesselJoint</ref>()</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselDockJoint.DestroyJoint();</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Destroy(sameVesselDockJoint);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sameVesselUndockRedock)</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnOtherNodeUndock();</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onSameVesselUndock.Fire(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameEvents.FromToAction&lt;<ref refid="class_module_docking_node" kindref="compound">ModuleDockingNode</ref>,<sp/>ModuleDockingNode&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>));</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001445&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>2f)]<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_6001445<sp/>=<sp/>Undock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1abf227549540e7ec3288cbbe346366e64" kindref="member">UndockSameVessel</ref>()</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_undock);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherNode.OnOtherNodeUndock();</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab750981c6f56891d22c63c12bf28f513" kindref="member">OnOtherNodeSameVesselDisconnect</ref>()</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_nodeDistance);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0a605dbfda9d333812aa7094a8ddf52e" kindref="member">NodeIsTooFar</ref>()</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[DockingNode]:<sp/>other<sp/>node<sp/>is<sp/>null!&quot;</highlight><highlight class="normal">,<sp/>gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[DockingNode]:<sp/>other<sp/>node<sp/>transform<sp/>is<sp/>null!&quot;</highlight><highlight class="normal">,<sp/>gameObject);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>distance<sp/>from<sp/>the<sp/>old<sp/>parent<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>minimum<sp/>before<sp/>re-engaging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>prevents<sp/>being<sp/>unable<sp/>to<sp/>undock<sp/>from<sp/>the<sp/>dock<sp/>node<sp/>immediately<sp/>re-docking<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.position<sp/>-<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>.<ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>.position).sqrMagnitude<sp/>&gt;<sp/><ref refid="class_module_docking_node_1a2ef5a4c7bfb4d76c85fec10c9f07e496" kindref="member">minDistanceToReEngage</ref><sp/>*<sp/><ref refid="class_module_docking_node_1a2ef5a4c7bfb4d76c85fec10c9f07e496" kindref="member">minDistanceToReEngage</ref>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6001446&quot;</highlight><highlight class="normal">,<sp/>activeEditor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>noLongerAssignable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001446<sp/>=<sp/>Decouple<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a93dad8e75341ebb769a7b1b8e9afb269" kindref="member">DecoupleAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Decouple&quot;</highlight><highlight class="normal">].active<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af544fa843e0471a3ad82c57f6eb73aa8" kindref="member">Decouple</ref>();</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001446&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001446<sp/>=<sp/>Decouple<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>2f)]</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af544fa843e0471a3ad82c57f6eb73aa8" kindref="member">Decouple</ref>()</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part" kindref="compound">Part</ref><sp/>otherPart<sp/>=<sp/>referenceNode.attachedPart;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>decouple<sp/>if<sp/>there<sp/>is<sp/>no<sp/>otherPart.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherPart<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockNode<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameVesselUndockOtherNode<sp/>=<sp/><ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a581fec543f297bff3531a0a3166fe74d" kindref="member">referenceNode</ref>.<ref refid="class_attach_node_1a73ff2d81c96a07588ab135cb39696817" kindref="member">attachedPart</ref><sp/>==<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1a5c347a80450b60c0c321131587605374" kindref="member">parent</ref>)</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.decouple();</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceNode.attachedPart.decouple();</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.AddForce(nodeTransform.forward<sp/>*<sp/>(-<ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref><sp/>*<sp/>0.5f));</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherPart.AddForce(nodeTransform.forward<sp/>*<sp/>(<ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref><sp/>*<sp/>0.5f));</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_undock);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref>)<sp/>otherNode.OnOtherNodeUndock();</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1aec7edd0f877aa8baaf7f24be13034c22" kindref="member">stagingEnabled</ref>)</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7c388c6deabea01a761b8bc0361ffacb" kindref="member">SetStaging</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a7b57949a87319447aedaec25d18451a4" kindref="member">OnActive</ref>()</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref><sp/>&amp;&amp;<sp/><ref refid="class_part_module_1aec7edd0f877aa8baaf7f24be13034c22" kindref="member">stagingEnabled</ref>)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1af544fa843e0471a3ad82c57f6eb73aa8" kindref="member">Decouple</ref>();</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a19aba4c9d56346eb67f7fb1eec0813ed" kindref="member">OnConstructionAttach</ref>()</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a7249d01f70a4460758bed6078cf8fec9" kindref="member">fsm</ref>.<ref refid="class_kerbal_f_s_m_1a01523fbabeec4f926d365a1b12e9d304" kindref="member">Started</ref>)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm.RunEvent(on_construction_Attach);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Itargetable<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_module_docking_node_1ae69f1a54c0e627f6969a397345de3e10" kindref="member">GetTransform</ref>()</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af09678658886504e45a320c66c53b41a" kindref="member">nodeTransform</ref>;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_module_docking_node_1a2f440da6256541977610a1db7c20414a" kindref="member">GetObtVelocity</ref>()</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vessel.obt_velocity;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_module_docking_node_1aafd02d73a4881f5efacc3cdcff2c4af1" kindref="member">GetSrfVelocity</ref>()</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vessel.srf_velocity;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_module_docking_node_1aeb51e64cc5a84e77ec6e2edad2119b81" kindref="member">GetFwdVector</ref>()</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeTransform.forward;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/><ref refid="class_module_docking_node_1aa3f91ab0b4423a733e79884474b078b8" kindref="member">GetVessel</ref>()</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a8de0ca8529d2637ac1d9927edcc2d9f0" kindref="member">GetName</ref>()</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_241797&quot;</highlight><highlight class="normal">,<sp/>vessel.vesselName);<sp/></highlight><highlight class="comment">//#autoLOC_241797<sp/>=<sp/>&lt;&lt;1&gt;<sp/>Docking<sp/>Port<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1afad978ad3608ef1e477cd14e4a05bf77" kindref="member">GetDisplayName</ref>()</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a8de0ca8529d2637ac1d9927edcc2d9f0" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_module_docking_node_1af5b14fcd68cbfff7b8e96d909205d4cd" kindref="member">GetOrbit</ref>()</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vessel.orbit;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/><ref refid="class_module_docking_node_1a68d34419a2359d510eb19099b67d3221" kindref="member">GetOrbitDriver</ref>()</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vessel.orbitDriver;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="_flight_globals_8cs_1a4d02e7987523952e9778e9495a1a468d" kindref="member">VesselTargetModes</ref><sp/><ref refid="class_module_docking_node_1a325b0509620c8b45abfc614a36f403b3" kindref="member">GetTargetingMode</ref>()</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_flight_globals_8cs_1a4d02e7987523952e9778e9495a1a468dadc0ccb9447c518efd009954a839a82c1" kindref="member">VesselTargetModes.DirectionVelocityAndOrientation</ref>;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a743455e573cd9be0a91336d3c3f92f36" kindref="member">GetActiveTargetable</ref>()</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Events<sp/>and<sp/>Actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001448&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>200f)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001448<sp/>=<sp/>Set<sp/>as<sp/>Target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1af438b0dd09b8a98a2efd9a8992e7cfa5" kindref="member">SetAsTarget</ref>()</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.fetch.SetVesselTarget(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001449&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiActiveUnfocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>externalToEVAOnly<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>unfocusedRange<sp/>=<sp/>200f)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001449<sp/>=<sp/>Unset<sp/>Target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a623e023faf86005fc11740aadb358cfc" kindref="member">UnsetTarget</ref>()</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.fetch.SetVesselTarget(null);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_236028&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_236028<sp/>=<sp/>Enable<sp/>Crossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a96538adea5a2914175c5a2ccf890cc15" kindref="member">EnableXFeed</ref>()</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;EnableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;DisableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldCF<sp/>=<sp/>part.fuelCrossFeed;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelCrossFeed<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldCF<sp/>!=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartCrossfeedStateChange.Fire(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_236030&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActiveEditor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_236030<sp/>=<sp/>Disable<sp/>Crossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a2b10308f8434a6e471aee7e84a2a334a" kindref="member">DisableXFeed</ref>()</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;EnableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;DisableXFeed&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oldCF<sp/>=<sp/>part.fuelCrossFeed;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.fuelCrossFeed<sp/>=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldCF<sp/>!=<sp/><ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>)</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onPartCrossfeedStateChange.Fire(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_6001447&quot;</highlight><highlight class="normal">)]<sp/></highlight><highlight class="comment">//#autoLOC_6001447<sp/>=<sp/>Control<sp/>from<sp/>Here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ac5e5c36c0f61f50ae752b4c2939ba45b" kindref="member">MakeReferenceToggle</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>act)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a0e0e800abbe396ccff1643971fef8099" kindref="member">MakeReferenceTransform</ref>();</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_6001447&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_6001447<sp/>=<sp/>Control<sp/>from<sp/>Here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0e0e800abbe396ccff1643971fef8099" kindref="member">MakeReferenceTransform</ref>()</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.SetReferenceTransform(<ref refid="class_module_docking_node_1add7a51b95742cc235e5fdc78a8d62840" kindref="member">controlTransform</ref>);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vessel.SetReferenceTransform(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_236028&quot;</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_236028<sp/>=<sp/>Enable<sp/>Crossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ae1b6104979fc0479bd44020a6d3ac33d" kindref="member">EnableXFeedAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a96538adea5a2914175c5a2ccf890cc15" kindref="member">EnableXFeed</ref>();</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_236030&quot;</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_236030<sp/>=<sp/>Disable<sp/>Crossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a3401cc8e0c46b7f6025a5b66e9ed1262" kindref="member">DisableXFeedAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a2b10308f8434a6e471aee7e84a2a334a" kindref="member">DisableXFeed</ref>();</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_action" kindref="compound">KSPAction</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_236032&quot;</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>refactored<sp/>ID<sp/>//#autoLOC_236032<sp/>=<sp/>Toggle<sp/>Crossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab3c0f1bd2298eea81d28b2dc5886efe6" kindref="member">ToggleXFeedAction</ref>(<ref refid="class_k_s_p_action_param" kindref="compound">KSPActionParam</ref><sp/>param)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_docking_node_1a4666e04b2153da31e9c4da0496fd55f5" kindref="member">crossfeed</ref>)</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a2b10308f8434a6e471aee7e84a2a334a" kindref="member">DisableXFeed</ref>();</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_docking_node_1a96538adea5a2914175c5a2ccf890cc15" kindref="member">EnableXFeed</ref>();</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a5ac4bb00e63231be02e614935d5c72b7" kindref="member">GetInfo</ref>()</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_241887&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="class_module_docking_node_1a2b9f6996c013b9f6bdc5751a15d2259a" kindref="member">captureRange</ref>).ToString(</highlight><highlight class="stringliteral">&quot;0.0###&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_241887<sp/>=<sp/>&lt;b&gt;Capture<sp/>Range:<sp/>&lt;/b&gt;&lt;&lt;1&gt;&gt;\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_241888&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="class_module_docking_node_1a06c8ed8ae4483de21c0899df47ec921e" kindref="member">undockEjectionForce</ref>).ToString(</highlight><highlight class="stringliteral">&quot;0.0###&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_241888<sp/>=<sp/>&lt;b&gt;Undock<sp/>Ejection<sp/>Force:<sp/>&lt;/b&gt;&lt;&lt;1&gt;&gt;\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>IStageSeparator<sp/>Members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a5f27bc64e965345b6954db4b1d300bf3" kindref="member">GetStageIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fallback)</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fallback<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Staging<sp/>toggleability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ac5163d6bf78a28ef5cc3b8058bd14151" kindref="member">IsStageable</ref>()</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref>;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a29464c5bb09016da54b79bdd4e7a46e2" kindref="member">StagingEnabled</ref>()</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_part_module_1aec7edd0f877aa8baaf7f24be13034c22" kindref="member">stagingEnabled</ref><sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref>;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad355d6486bd26e2a0ce26b2999b98ec5" kindref="member">StagingToggleEnabledEditor</ref>()</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref>;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a0e9bc3af24a3917360b9f7ce286e2ed4" kindref="member">StagingToggleEnabledFlight</ref>()</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref>;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ad285ace4849ae635a5cbeca62d601f1a" kindref="member">GetStagingEnableText</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string.IsNullOrEmpty(<ref refid="class_part_module_1ab1b6d31039115e06c6788849e8dcb767" kindref="member">stagingEnableText</ref>)<sp/>?<sp/><ref refid="class_k_s_p_1_1_localization_1_1_localizer" kindref="compound">Localizer</ref>.<ref refid="class_k_s_p_1_1_localization_1_1_localizer_1aa9e06ba428dbe1d6ccc33eebf7c12478" kindref="member">Format</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_241913&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_part_module_1ab1b6d31039115e06c6788849e8dcb767" kindref="member">stagingEnableText</ref>;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_241913<sp/>=<sp/>Port:<sp/>Enable<sp/>Staging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1acdfd6af713a6e99166454f0ffc503890" kindref="member">GetStagingDisableText</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string.IsNullOrEmpty(<ref refid="class_part_module_1a2797563413afbabde66d0dd8c2939b0b" kindref="member">stagingDisableText</ref>)<sp/>?<sp/><ref refid="class_k_s_p_1_1_localization_1_1_localizer" kindref="compound">Localizer</ref>.<ref refid="class_k_s_p_1_1_localization_1_1_localizer_1aa9e06ba428dbe1d6ccc33eebf7c12478" kindref="member">Format</ref>(</highlight><highlight class="stringliteral">&quot;#autoLOC_241914&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_part_module_1a2797563413afbabde66d0dd8c2939b0b" kindref="member">stagingDisableText</ref>;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_241914<sp/>=<sp/>Port:<sp/>Disable<sp/>Staging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a868df240bf7443fc254d31a5299c3f04" kindref="member">staged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>IToggleCrossfeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a56d2f103e00b7b4f5964e8d27ff312bb" kindref="member">CrossfeedToggleableEditor</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a4f667eaec4d3fc01b56461cc19223006" kindref="member">CrossfeedToggleableFlight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a626d1bb1da3aa5dd7cf72ddad7e252f8" kindref="member">GetContractObjectiveType</ref>()</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FinePrint.ContractDefs.ObjectiveDock;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ae102ae2d164c0982dce504d25c129928" kindref="member">CheckContractObjectiveValidity</ref>()</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Module<sp/>Adjusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;AdjusterDockingNodeBase&gt;<sp/>adjusterCache<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;AdjusterDockingNodeBase&gt;();</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a611190ae441af319c0e46d88a1cab0e3" kindref="member">OnModuleAdjusterAdded</ref>(<ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_part_module_base" kindref="compound">AdjusterPartModuleBase</ref><sp/>adjuster)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_docking_node_base" kindref="compound">AdjusterDockingNodeBase</ref><sp/>newAdjuster<sp/>=<sp/>adjuster<sp/>as<sp/><ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_docking_node_base" kindref="compound">AdjusterDockingNodeBase</ref>;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newAdjuster<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjusterCache.Add(newAdjuster);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnModuleAdjusterAdded(adjuster);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1acd98446673a90da554847581ffb5b57d" kindref="member">OnModuleAdjusterRemoved</ref>(<ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_part_module_base" kindref="compound">AdjusterPartModuleBase</ref><sp/>adjuster)</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_docking_node_base" kindref="compound">AdjusterDockingNodeBase</ref><sp/>oldAdjuster<sp/>=<sp/>adjuster<sp/>as<sp/><ref refid="class_expansions_1_1_missions_1_1_adjusters_1_1_adjuster_docking_node_base" kindref="compound">AdjusterDockingNodeBase</ref>;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjusterCache.Remove(oldAdjuster);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnModuleAdjusterRemoved(adjuster);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ae2663c5bcafe0fe3d602f945bc638fb7" kindref="member">IsAdjusterBlockingUndock</ref>()</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>adjusterCache.Count;<sp/>++i)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjusterCache[i].IsBlockingUndock())</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Localized<sp/>Display<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1a47d0677572663df2e079d9fe99a5d9e4" kindref="member">GetModuleDisplayName</ref>()</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLoc_6003039&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLoc_6003039<sp/>=<sp/>Docking<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>IJointLockState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_docking_node_1ab349c021427d28fcdbb7ee05e5eeac3c" kindref="member">IsJointUnlocked</ref>()</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_module_docking_node_1a22826344e8f1b9c3c11dcccaba22ca96" kindref="member">otherNode</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_module_docking_node_1acbb39f456d361a615253cb9ac30f4722" kindref="member">sameVesselDockJoint</ref><sp/>==<sp/>null)<sp/>||<sp/>!<ref refid="class_module_docking_node_1a199529991400a5c83ab0a795ead879d1" kindref="member">canRotate</ref>)<sp/></highlight><highlight class="comment">//If<sp/>not<sp/>docked<sp/>or<sp/>can&apos;t<sp/>rotate<sp/>we<sp/>return<sp/>true<sp/>regardless<sp/>so<sp/>autostruts<sp/>won&apos;t<sp/>stop<sp/>at<sp/>this<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_module_docking_node_1a732aab5ed5db33d23982b244022974ca" kindref="member">nodeIsLocked</ref>;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Part Scripts/PartModules/Structural/ModuleDockingNode.cs"/>
  </compounddef>
</doxygen>
