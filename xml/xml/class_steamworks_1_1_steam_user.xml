<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_steamworks_1_1_steam_user" kind="class" prot="public">
    <compoundname>Steamworks::SteamUser</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a8be5d689301235b613ab54e1029c093e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.AdvertiseGame</definition>
        <argsstring>(CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer)</argsstring>
        <name>AdvertiseGame</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamIDGameServer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unIPServer</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPortServer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set data to be replicated to friends so that they can join your game</para><para><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref> steamIDGameServer - the steamID of the game server, received from the game server by the client</para><para>uint32 unIPServer, uint16 usPortServer - the IP address of the game server</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="235" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1aa668f8f41a6f14e91743e62b38971e10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_steamworks_1aab6eabc7e9330c5b41a4ae48ee5d4af8" kindref="member">EBeginAuthSessionResult</ref></type>
        <definition>static EBeginAuthSessionResult Steamworks.SteamUser.BeginAuthSession</definition>
        <argsstring>(byte[] pAuthTicket, int cbAuthTicket, CSteamID steamID)</argsstring>
        <name>BeginAuthSession</name>
        <param>
          <type>byte[]</type>
          <declname>pAuthTicket</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbAuthTicket</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Authenticate ticket from entity steamID to be sure it is valid and isnt reused</para><para>Registers for callbacks if the entity goes offline or cancels the ticket ( see <ref refid="struct_steamworks_1_1_validate_auth_ticket_response__t" kindref="compound">ValidateAuthTicketResponse_t</ref> callback and EAuthSessionResponse )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="191" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a6470fa0f1f9a3bbb50d966fc4e6697ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BIsBehindNAT</definition>
        <argsstring>()</argsstring>
        <name>BIsBehindNAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns true if this users looks like they are behind a NAT device. Only valid once the user has connected to steam</para><para>(i.e a <ref refid="struct_steamworks_1_1_steam_servers_connected__t" kindref="compound">SteamServersConnected_t</ref> has been issued) and may not catch all forms of NAT.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="225" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1ae90ee980fc8c5a2a55f8d8affd606347" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BIsPhoneIdentifying</definition>
        <argsstring>()</argsstring>
        <name>BIsPhoneIdentifying</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets whether the users phone number is identifying</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="314" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1ad5bd17ef6bf906c34b76fd2dec0affcc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BIsPhoneRequiringVerification</definition>
        <argsstring>()</argsstring>
        <name>BIsPhoneRequiringVerification</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets whether the users phone number is awaiting (re)verification</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="322" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a96e2b11a2eb37d27b74b8e908ea5cdcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BIsPhoneVerified</definition>
        <argsstring>()</argsstring>
        <name>BIsPhoneVerified</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets whether the users phone number is verified</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="298" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1af5c5d641505a39aa4fde330d02bd37a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BIsTwoFactorEnabled</definition>
        <argsstring>()</argsstring>
        <name>BIsTwoFactorEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets whether the user has two factor enabled on their account</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="306" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a8bcbb1b2e17774dc294c5fe150fcd9d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.BLoggedOn</definition>
        <argsstring>()</argsstring>
        <name>BLoggedOn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns true if the Steam client current has a live connection to the Steam servers.</para><para>If false, it means there is no active connection due to either a networking issue on the local machine, or the Steam server is down/busy.</para><para>The Steam client will automatically be trying to recreate the connection as often as possible.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="29" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1afef45bee57a3721c31ff9361544c1510" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.CancelAuthTicket</definition>
        <argsstring>(HAuthTicket hAuthTicket)</argsstring>
        <name>CancelAuthTicket</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_auth_ticket" kindref="compound">HAuthTicket</ref></type>
          <declname>hAuthTicket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel auth ticket from GetAuthSessionTicket, called when no longer playing game with the entity you gave the ticket to</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="207" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1af1c1c2a4e4dabee77e9cde53b3137cc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_steamworks_1a739e6abbb1f2d16553704844fd8e6a6b" kindref="member">EVoiceResult</ref></type>
        <definition>static EVoiceResult Steamworks.SteamUser.DecompressVoice</definition>
        <argsstring>(byte[] pCompressed, uint cbCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, uint nDesiredSampleRate)</argsstring>
        <name>DecompressVoice</name>
        <param>
          <type>byte[]</type>
          <declname>pCompressed</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>cbCompressed</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>pDestBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>cbDestBufferSize</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>nBytesWritten</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nDesiredSampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decodes the compressed voice data returned by GetVoice. The output data is</para><para>raw single-channel 16-bit PCM audio. The decoder supports any sample rate</para><para>from 11025 to 48000; see <ref refid="class_steamworks_1_1_steam_user_1a16c0a33c3105daf24ccc279af1dbc6eb" kindref="member">GetVoiceOptimalSampleRate()</ref> below for details.</para><para>If the output buffer is not large enough, then *nBytesWritten will be set</para><para>to the required buffer size, and k_EVoiceResultBufferTooSmall is returned.</para><para>It is suggested to start with a 20kb buffer and reallocate as necessary.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="159" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1aa7d1b2c1188498ec57db8e6a8cbfe7b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.EndAuthSession</definition>
        <argsstring>(CSteamID steamID)</argsstring>
        <name>EndAuthSession</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop tracking started by BeginAuthSession - called when no longer playing game with this entity</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="199" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a440c18a6210dea55bc21d7a4a450e055" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_auth_ticket" kindref="compound">HAuthTicket</ref></type>
        <definition>static HAuthTicket Steamworks.SteamUser.GetAuthSessionTicket</definition>
        <argsstring>(byte[] pTicket, int cbMaxTicket, out uint pcbTicket)</argsstring>
        <name>GetAuthSessionTicket</name>
        <param>
          <type>byte[]</type>
          <declname>pTicket</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbMaxTicket</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>pcbTicket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve ticket to be sent to the entity who wishes to authenticate you.</para><para>pcbTicket retrieves the length of the actual ticket.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="182" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a9c2b23c82c0387cf40ab35438586ddd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_steamworks_1a739e6abbb1f2d16553704844fd8e6a6b" kindref="member">EVoiceResult</ref></type>
        <definition>static EVoiceResult Steamworks.SteamUser.GetAvailableVoice</definition>
        <argsstring>(out uint pcbCompressed)</argsstring>
        <name>GetAvailableVoice</name>
        <param>
          <type>out uint</type>
          <declname>pcbCompressed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine the size of captured audio data that is available from GetVoice.</para><para>Most applications will only use compressed data and should ignore the other</para><para>parameters, which exist primarily for backwards compatibility. See comments</para><para>below for further explanation of &quot;uncompressed&quot; data.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="119" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1ab9ced3d5e5f6cc2e782f30e23a0e3691" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.GetEncryptedAppTicket</definition>
        <argsstring>(byte[] pTicket, int cbMaxTicket, out uint pcbTicket)</argsstring>
        <name>GetEncryptedAppTicket</name>
        <param>
          <type>byte[]</type>
          <declname>pTicket</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbMaxTicket</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>pcbTicket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieve a finished ticket</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="253" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a2243ff0a1602ffdc34d8f93e9fc6e594" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Steamworks.SteamUser.GetGameBadgeLevel</definition>
        <argsstring>(int nSeries, bool bFoil)</argsstring>
        <name>GetGameBadgeLevel</name>
        <param>
          <type>int</type>
          <declname>nSeries</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFoil</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trading Card badges data access</para><para>if you only have one set of cards, the series will be 1</para><para>the user has can have two different badges for a series; the regular (max level 5) and the foil (max level 1)</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="263" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a63fcb4f879df76994187cfb693e8781a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_steam_user" kindref="compound">HSteamUser</ref></type>
        <definition>static HSteamUser Steamworks.SteamUser.GetHSteamUser</definition>
        <argsstring>()</argsstring>
        <name>GetHSteamUser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_steamworks_1_1_h_steam_user" kindref="compound">HSteamUser</ref> this interface represents</para><para>this is only used internally by the API, and by a few select interfaces that support multi-user</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1ab9fbf78b89bb2bef7aa5aca27c57922c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Steamworks.SteamUser.GetPlayerSteamLevel</definition>
        <argsstring>()</argsstring>
        <name>GetPlayerSteamLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the Steam Level of the user, as shown on their profile</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="271" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a0b94a20575f00a50ba2ffcff41f284dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
        <definition>static CSteamID Steamworks.SteamUser.GetSteamID</definition>
        <argsstring>()</argsstring>
        <name>GetSteamID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref> of the account currently logged into the Steam client</para><para>a <ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref> is a unique identifier for an account, and used to differentiate users in all parts of the <ref refid="namespace_steamworks" kindref="compound">Steamworks</ref> API</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="38" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1aae3935dc61877710ed71cd702682881a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamUser.GetUserDataFolder</definition>
        <argsstring>(out string pchBuffer, int cubBuffer)</argsstring>
        <name>GetUserDataFolder</name>
        <param>
          <type>out string</type>
          <declname>pchBuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cubBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the local storage folder for current Steam account to write application data, e.g. save games, configs etc.</para><para>this will usually be something like &quot;C:\Progam Files\Steam\userdata\&amp;lt;SteamID&amp;gt;\&amp;lt;AppID&amp;gt;\local&quot;</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="86" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a360a885ae11735fba16db3e8fd9f47cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_steamworks_1a739e6abbb1f2d16553704844fd8e6a6b" kindref="member">EVoiceResult</ref></type>
        <definition>static EVoiceResult Steamworks.SteamUser.GetVoice</definition>
        <argsstring>(bool bWantCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten)</argsstring>
        <name>GetVoice</name>
        <param>
          <type>bool</type>
          <declname>bWantCompressed</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>pDestBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>cbDestBufferSize</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>nBytesWritten</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>------------------------------------------------------------------------<mdash/></para><para>NOTE: &quot;uncompressed&quot; audio is a deprecated feature and should not be used</para><para>by most applications. It is raw single-channel 16-bit PCM wave data which</para><para>may have been run through preprocessing filters and/or had silence removed,</para><para>so the uncompressed audio could have a shorter duration than you expect.</para><para>There may be no data at all during long periods of silence. Also, fetching</para><para>uncompressed audio will cause GetVoice to discard any leftover compressed</para><para>audio, so you must fetch both types at once. Finally, GetAvailableVoice is</para><para>not precisely accurate when the uncompressed size is requested. So if you</para><para>really need to use uncompressed audio, you should call GetVoice frequently</para><para>with two very large (20kb+) output buffers instead of trying to allocate</para><para>perfectly-sized buffers. But most applications should ignore all of these</para><para>details and simply leave the &quot;uncompressed&quot; parameters as NULL/zero.</para><para>------------------------------------------------------------------------<mdash/></para><para>Read captured audio data from the microphone buffer. This should be called</para><para>at least once per frame, and preferably every few milliseconds, to keep the</para><para>microphone input delay as low as possible. Most applications will only use</para><para>compressed data and should pass NULL/zero for the &quot;uncompressed&quot; parameters.</para><para>Compressed data can be transmitted by your application and decoded into raw</para><para>using the DecompressVoice function below.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="146" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a16c0a33c3105daf24ccc279af1dbc6eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Steamworks.SteamUser.GetVoiceOptimalSampleRate</definition>
        <argsstring>()</argsstring>
        <name>GetVoiceOptimalSampleRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This returns the native sample rate of the Steam voice decompressor; using</para><para>this sample rate for DecompressVoice will perform the least CPU processing.</para><para>However, the final audio quality will depend on how well the audio device</para><para>(and/or your application&apos;s audio output SDK) deals with lower sample rates.</para><para>You may find that you get the best audio output quality when you ignore</para><para>this function and use the native sample rate of your audio output device,</para><para>which is usually 48000 or 44100.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="173" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1afaaa606ff83a6c3c5b9be1e0019b6523" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Steamworks.SteamUser.InitiateGameConnection</definition>
        <argsstring>(byte[] pAuthBlob, int cbMaxAuthBlob, CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer, bool bSecure)</argsstring>
        <name>InitiateGameConnection</name>
        <param>
          <type>byte[]</type>
          <declname>pAuthBlob</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbMaxAuthBlob</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamIDGameServer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unIPServer</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPortServer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSecure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplayer Authentication functions</para><para><ref refid="class_steamworks_1_1_steam_user_1afaaa606ff83a6c3c5b9be1e0019b6523" kindref="member">InitiateGameConnection()</ref> starts the state machine for authenticating the game client with the game server</para><para>It is the client portion of a three-way handshake between the client, the game server, and the steam servers</para><para>Parameters:</para><para>void *pAuthBlob - a pointer to empty memory that will be filled in with the authentication token.</para><para>int cbMaxAuthBlob - the number of bytes of allocated memory in pBlob. Should be at least 2048 bytes.</para><para><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref> steamIDGameServer - the steamID of the game server, received from the game server by the client</para><para><ref refid="struct_steamworks_1_1_c_game_i_d" kindref="compound">CGameID</ref> gameID - the ID of the current game. For games without mods, this is just <ref refid="struct_steamworks_1_1_c_game_i_d" kindref="compound">CGameID</ref>( &lt;appID&gt; )</para><para>uint32 unIPServer, uint16 usPortServer - the IP address of the game server</para><para>bool bSecure - whether or not the client thinks that the game server is reporting itself as secure (i.e. VAC is running)</para><para>return value - returns the number of bytes written to pBlob. If the return is 0, then the buffer passed in was too small, and the call has failed</para><para>The contents of pBlob should then be sent to the game server, for it to use to complete the authentication process.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="57" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a9c50dae3dce2686386e5836bf6c1ef92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_steam_a_p_i_call__t" kindref="compound">SteamAPICall_t</ref></type>
        <definition>static SteamAPICall_t Steamworks.SteamUser.RequestEncryptedAppTicket</definition>
        <argsstring>(byte[] pDataToInclude, int cbDataToInclude)</argsstring>
        <name>RequestEncryptedAppTicket</name>
        <param>
          <type>byte[]</type>
          <declname>pDataToInclude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cbDataToInclude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requests a ticket encrypted with an app specific shared key</para><para>pDataToInclude, cbDataToInclude will be encrypted into the ticket</para><para>( This is asynchronous, you must wait for the ticket to be completed by the server )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="245" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1acf9aa903b1c7a5da1cdd3c314e4c1466" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_steam_a_p_i_call__t" kindref="compound">SteamAPICall_t</ref></type>
        <definition>static SteamAPICall_t Steamworks.SteamUser.RequestStoreAuthURL</definition>
        <argsstring>(string pchRedirectURL)</argsstring>
        <name>RequestStoreAuthURL</name>
        <param>
          <type>string</type>
          <declname>pchRedirectURL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Requests a URL which authenticates an in-game browser for store check-out,</para><para>and then redirects to the specified URL. As long as the in-game browser</para><para>accepts and handles session cookies, Steam microtransaction checkout pages</para><para>will automatically recognize the user instead of presenting a login page.</para><para>The result of this API call will be a <ref refid="struct_steamworks_1_1_store_auth_u_r_l_response__t" kindref="compound">StoreAuthURLResponse_t</ref> callback.</para><para>NOTE: The URL has a very short lifetime to prevent history-snooping attacks,</para><para>so you should only call this API when you are about to launch the browser,</para><para>or else immediately navigate to the result URL using a hidden browser window.</para><para>NOTE 2: The resulting authorization cookie has an expiration time of one day,</para><para>so it would be a good idea to request and visit a new auth URL every 12 hours.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="288" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1af080b37a16b1099b08d6051bfc05f026" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.StartVoiceRecording</definition>
        <argsstring>()</argsstring>
        <name>StartVoiceRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts voice recording. Once started, use <ref refid="class_steamworks_1_1_steam_user_1a360a885ae11735fba16db3e8fd9f47cb" kindref="member">GetVoice()</ref> to get the data</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="98" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1af613ecc51287292e67edc568040b829a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.StopVoiceRecording</definition>
        <argsstring>()</argsstring>
        <name>StopVoiceRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops voice recording. Because people often release push-to-talk keys early, the system will keep recording for</para><para>a little bit after this function is called. <ref refid="class_steamworks_1_1_steam_user_1a360a885ae11735fba16db3e8fd9f47cb" kindref="member">GetVoice()</ref> should continue to be called until it returns</para><para>k_eVoiceResultNotRecording</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="108" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1abdfa0ed662b4f84a71b68dc123ff07b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.TerminateGameConnection</definition>
        <argsstring>(uint unIPServer, ushort usPortServer)</argsstring>
        <name>TerminateGameConnection</name>
        <param>
          <type>uint</type>
          <declname>unIPServer</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPortServer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>notify of disconnect</para><para>needs to occur when the game client leaves the specified game server, needs to match with the <ref refid="class_steamworks_1_1_steam_user_1afaaa606ff83a6c3c5b9be1e0019b6523" kindref="member">InitiateGameConnection()</ref> call</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="66" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a6f4f5b91f1902238dbdc96d33e81deed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamUser.TrackAppUsageEvent</definition>
        <argsstring>(CGameID gameID, int eAppUsageEvent, string pchExtraInfo=&quot;&quot;)</argsstring>
        <name>TrackAppUsageEvent</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_game_i_d" kindref="compound">CGameID</ref></type>
          <declname>gameID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eAppUsageEvent</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchExtraInfo</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Legacy functions</para><para>used by only a few games to track usage events</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="75" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_user_1a28636024aedae3c83d7031a81d9717f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_steamworks_1ad503feaf98329e78d617adae969a5174" kindref="member">EUserHasLicenseForAppResult</ref></type>
        <definition>static EUserHasLicenseForAppResult Steamworks.SteamUser.UserHasLicenseForApp</definition>
        <argsstring>(CSteamID steamID, AppId_t appID)</argsstring>
        <name>UserHasLicenseForApp</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamID</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>appID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>After receiving a user&apos;s authentication data, and passing it to BeginAuthSession, use this function</para><para>to determine if the user owns downloadable content specified by the provided AppID.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="216" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="216" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" line="14" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamuser.cs" bodystart="14" bodyend="326"/>
    <listofallmembers>
      <member refid="class_steamworks_1_1_steam_user_1a8be5d689301235b613ab54e1029c093e" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>AdvertiseGame</name></member>
      <member refid="class_steamworks_1_1_steam_user_1aa668f8f41a6f14e91743e62b38971e10" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BeginAuthSession</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a6470fa0f1f9a3bbb50d966fc4e6697ec" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BIsBehindNAT</name></member>
      <member refid="class_steamworks_1_1_steam_user_1ae90ee980fc8c5a2a55f8d8affd606347" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BIsPhoneIdentifying</name></member>
      <member refid="class_steamworks_1_1_steam_user_1ad5bd17ef6bf906c34b76fd2dec0affcc" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BIsPhoneRequiringVerification</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a96e2b11a2eb37d27b74b8e908ea5cdcb" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BIsPhoneVerified</name></member>
      <member refid="class_steamworks_1_1_steam_user_1af5c5d641505a39aa4fde330d02bd37a6" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BIsTwoFactorEnabled</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a8bcbb1b2e17774dc294c5fe150fcd9d8" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>BLoggedOn</name></member>
      <member refid="class_steamworks_1_1_steam_user_1afef45bee57a3721c31ff9361544c1510" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>CancelAuthTicket</name></member>
      <member refid="class_steamworks_1_1_steam_user_1af1c1c2a4e4dabee77e9cde53b3137cc4" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>DecompressVoice</name></member>
      <member refid="class_steamworks_1_1_steam_user_1aa7d1b2c1188498ec57db8e6a8cbfe7b7" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>EndAuthSession</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a440c18a6210dea55bc21d7a4a450e055" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetAuthSessionTicket</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a9c2b23c82c0387cf40ab35438586ddd6" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetAvailableVoice</name></member>
      <member refid="class_steamworks_1_1_steam_user_1ab9ced3d5e5f6cc2e782f30e23a0e3691" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetEncryptedAppTicket</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a2243ff0a1602ffdc34d8f93e9fc6e594" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetGameBadgeLevel</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a63fcb4f879df76994187cfb693e8781a" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetHSteamUser</name></member>
      <member refid="class_steamworks_1_1_steam_user_1ab9fbf78b89bb2bef7aa5aca27c57922c" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetPlayerSteamLevel</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a0b94a20575f00a50ba2ffcff41f284dd" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetSteamID</name></member>
      <member refid="class_steamworks_1_1_steam_user_1aae3935dc61877710ed71cd702682881a" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetUserDataFolder</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a360a885ae11735fba16db3e8fd9f47cb" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetVoice</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a16c0a33c3105daf24ccc279af1dbc6eb" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>GetVoiceOptimalSampleRate</name></member>
      <member refid="class_steamworks_1_1_steam_user_1afaaa606ff83a6c3c5b9be1e0019b6523" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>InitiateGameConnection</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a9c50dae3dce2686386e5836bf6c1ef92" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>RequestEncryptedAppTicket</name></member>
      <member refid="class_steamworks_1_1_steam_user_1acf9aa903b1c7a5da1cdd3c314e4c1466" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>RequestStoreAuthURL</name></member>
      <member refid="class_steamworks_1_1_steam_user_1af080b37a16b1099b08d6051bfc05f026" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>StartVoiceRecording</name></member>
      <member refid="class_steamworks_1_1_steam_user_1af613ecc51287292e67edc568040b829a" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>StopVoiceRecording</name></member>
      <member refid="class_steamworks_1_1_steam_user_1abdfa0ed662b4f84a71b68dc123ff07b9" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>TerminateGameConnection</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a6f4f5b91f1902238dbdc96d33e81deed" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>TrackAppUsageEvent</name></member>
      <member refid="class_steamworks_1_1_steam_user_1a28636024aedae3c83d7031a81d9717f8" prot="public" virt="non-virtual"><scope>Steamworks::SteamUser</scope><name>UserHasLicenseForApp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
