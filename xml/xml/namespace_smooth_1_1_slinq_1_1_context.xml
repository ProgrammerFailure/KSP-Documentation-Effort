<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="namespace_smooth_1_1_slinq_1_1_context" kind="namespace">
    <compoundname>Smooth::Slinq::Context</compoundname>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_aggregate_context_3_01_u_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::AggregateContext&lt; U, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_aggregate_context_3_01_u_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::AggregateContext&lt; U, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_backtrack_detector" prot="public">Smooth::Slinq::Context::BacktrackDetector</innerclass>
    <innerclass refid="class_smooth_1_1_slinq_1_1_context_1_1_backtrack_exception" prot="public">Smooth::Slinq::Context::BacktrackException</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_concat_context_3_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::ConcatContext&lt; C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_either_context_3_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::EitherContext&lt; C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_flatten_context_3_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::FlattenContext&lt; T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_flatten_context_3_01_t_00_01_c1_00_01_c2_01_4" prot="public">Smooth::Slinq::Context::FlattenContext&lt; T, C1, C2 &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_func_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::FuncContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_func_context_3_01_t_00_01_p_01_4" prot="public">Smooth::Slinq::Context::FuncContext&lt; T, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_func_option_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::FuncOptionContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_func_option_context_3_01_t_00_01_p_01_4" prot="public">Smooth::Slinq::Context::FuncOptionContext&lt; T, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4" prot="public">Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_join_context_3_01_u_00_01_k_00_01_t2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::GroupJoinContext&lt; U, K, T2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_join_context_3_01_u_00_01_k_00_01_t2_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::GroupJoinContext&lt; U, K, T2, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_hash_set_context_3_01_k_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::HashSetContext&lt; K, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_hash_set_context_3_01_k_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::HashSetContext&lt; K, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_hash_set_context_3_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::HashSetContext&lt; T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_i_enumerable_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::IEnumerableContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_i_list_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::IListContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_int_context_3_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::IntContext&lt; T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_join_context_3_01_u_00_01_k_00_01_t2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::JoinContext&lt; U, K, T2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_join_context_3_01_u_00_01_k_00_01_t2_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::JoinContext&lt; U, K, T2, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_linked_context_3_01_k_00_01_t_01_4" prot="public">Smooth::Slinq::Context::LinkedContext&lt; K, T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_linked_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::LinkedContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_linked_list_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::LinkedListContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_option_context_3_01_t_01_4" prot="public">Smooth::Slinq::Context::OptionContext&lt; T &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_predicate_context_3_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::PredicateContext&lt; T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_predicate_context_3_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::PredicateContext&lt; T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_context_3_01_u_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::SelectContext&lt; U, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_context_3_01_u_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::SelectContext&lt; U, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_option_context_3_01_u_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::SelectOptionContext&lt; U, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_option_context_3_01_u_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::SelectOptionContext&lt; U, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_slinq_context_3_01_u_00_01_u_c_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::SelectSlinqContext&lt; U, UC, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_select_slinq_context_3_01_u_00_01_u_c_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::SelectSlinqContext&lt; U, UC, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_all_context_3_01_t2_00_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::ZipAllContext&lt; T2, C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_all_context_3_01_u_00_01_t2_00_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::ZipAllContext&lt; U, T2, C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_all_context_3_01_u_00_01_t2_00_01_c2_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::ZipAllContext&lt; U, T2, C2, T, C, P &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_context_3_01_t2_00_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::ZipContext&lt; T2, C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_context_3_01_u_00_01_t2_00_01_c2_00_01_t_00_01_c_01_4" prot="public">Smooth::Slinq::Context::ZipContext&lt; U, T2, C2, T, C &gt;</innerclass>
    <innerclass refid="struct_smooth_1_1_slinq_1_1_context_1_1_zip_context_3_01_u_00_01_t2_00_01_c2_00_01_t_00_01_c_00_01_p_01_4" prot="public">Smooth::Slinq::Context::ZipContext&lt; U, T2, C2, T, C, P &gt;</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_smooth_1_1_slinq_1_1_context_1a133946902b966cf7981c292747ea0205" prot="public" static="no">
        <name>ZipRemoveFlags</name>
        <enumvalue id="namespace_smooth_1_1_slinq_1_1_context_1a133946902b966cf7981c292747ea0205a6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_smooth_1_1_slinq_1_1_context_1a133946902b966cf7981c292747ea0205a945d5e233cf7d6240f6b783b36a374ff" prot="public">
          <name>Left</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_smooth_1_1_slinq_1_1_context_1a133946902b966cf7981c292747ea0205a92b09c7c48c520c3c55e497875da437c" prot="public">
          <name>Right</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_smooth_1_1_slinq_1_1_context_1a133946902b966cf7981c292747ea0205a130c5b3473c57faa76e2a1c54e26f88e" prot="public">
          <name>Both</name>
          <initializer>= Left | Right</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/ZipContext.cs" line="7" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/ZipContext.cs" bodystart="7" bodyend="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_smooth_1_1_slinq_1_1_context_1a893bacb4e85cb3706f4616ae8fffde83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Smooth.Slinq.Context.Mutator&lt; T, C &gt;</definition>
        <argsstring>(ref C context, out Option&lt; T &gt; next)</argsstring>
        <name>Mutator&lt; T, C &gt;</name>
        <param>
          <type>ref <ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a0d61f8370cad1d412f80b84d143e1257" kindref="member">C</ref></type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/Mutation/Mutator.cs" line="5" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/AggregateContext.cs" line="5" column="1"/>
  </compounddef>
</doxygen>
