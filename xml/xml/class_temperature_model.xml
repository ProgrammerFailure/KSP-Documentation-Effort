<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_temperature_model" kind="class" prot="public">
    <compoundname>TemperatureModel</compoundname>
    <innerclass refid="class_temperature_model_1_1_constant_temperature_model" prot="private">TemperatureModel::ConstantTemperatureModel</innerclass>
    <innerclass refid="class_temperature_model_1_1_linear_temperature_model" prot="private">TemperatureModel::LinearTemperatureModel</innerclass>
    <innerclass refid="class_temperature_model_1_1_quadratic_temperature_model" prot="private">TemperatureModel::QuadraticTemperatureModel</innerclass>
    <innerclass refid="class_temperature_model_1_1_stepped_temperature_model" prot="private">TemperatureModel::SteppedTemperatureModel</innerclass>
    <innerclass refid="class_temperature_model_1_1_temperature_model_template" prot="private">TemperatureModel::TemperatureModelTemplate</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5" prot="private" static="no">
        <name>TemperatureModels</name>
        <enumvalue id="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5aaac544aacc3615aada24897a215f5046" prot="public">
          <name>LINEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5aa6ef2e8b7424bfa9d56315aca733861c" prot="public">
          <name>QUADRATIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5a8d6b5cada83510220f59e00ce86d4d92" prot="public">
          <name>CONSTANT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5ae9604ec949ca7f78704f874c5fa263b7" prot="public">
          <name>STEPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="21" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="21" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_temperature_model_1a6fa9f66aac50bb9533ca0f9b2ccd9640" prot="private" static="no" mutable="no">
        <type>SteppedTemperatureModel</type>
        <definition>SteppedTemperatureModel TemperatureModel.Intervals</definition>
        <argsstring></argsstring>
        <name>Intervals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="286" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_temperature_model_1a0f8de2baf72a64fa494fb207eb9e0f2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddConstantStep</definition>
        <argsstring>(float limit, float K)</argsstring>
        <name>AddConstantStep</name>
        <param>
          <type>float</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Used to add an extra constant interval. If this is the first interval, a minimum altitude of 0 will be considered, if limit is less than 0, a maximum altitude of 0 will be considered. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The limit of this interval, it has to be bigger than all previous limits</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant temperature value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the interval was added correctly, false otherwise</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="336" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1a6fd6a7540a357696e39645bd93b79958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddInitialConstantStep</definition>
        <argsstring>(float min, float max, float K)</argsstring>
        <name>AddInitialConstantStep</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>K</declname>
        </param>
        <briefdescription>
<para>Used to add a constant interval as the initial one, providing equation coefficients </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>lowest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>highest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant temperature value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="300" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1a9b5b9076c6e60f7798022886c18d133d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddInitialLinearStep</definition>
        <argsstring>(float temp1, float alt1, float temp2, float alt2)</argsstring>
        <name>AddInitialLinearStep</name>
        <param>
          <type>float</type>
          <declname>temp1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alt1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>temp2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alt2</declname>
        </param>
        <briefdescription>
<para>Used to add a linear interval as the initial one, providing the interval&apos;s values </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp1</parametername>
</parameternamelist>
<parameterdescription>
<para>First temperature value</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alt1</parametername>
</parameternamelist>
<parameterdescription>
<para>First altitude value</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temp2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second temperature value</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second altitude value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the interval was added correctly, false otherwise</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="309" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="309" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1ad586760bdffb97709f265c88206ba879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddInitialLinearStepEquation</definition>
        <argsstring>(float min, float max, float m, float b)</argsstring>
        <name>AddInitialLinearStepEquation</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Used to add a linear interval as the initial one, providing rect parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>lowest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>greatest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>slope of the rect&apos;s equation</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>b of the y = mx+b rect&apos;s equation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the interval was added correctly, false otherwise</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="318" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1ae1cf10cfd0d24ec4ff0fc074884edeab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddInitialQuadraticStep</definition>
        <argsstring>(float min, float max, float A, float B, float C)</argsstring>
        <name>AddInitialQuadraticStep</name>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>A</declname>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
        </param>
        <param>
          <type>float</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Used to add a quadratic interval as the initial one, providing equation coefficients </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>lowest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>highest altitude in the interval</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>(A)x^2 + Bx + C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>Ax^2 + (B)x + C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Ax^2 + Bx + (C)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="328" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1a6f5728e481fa44341e33825474df487a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddLinearStep</definition>
        <argsstring>(float limit, float temp2)</argsstring>
        <name>AddLinearStep</name>
        <param>
          <type>float</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>temp2</declname>
        </param>
        <briefdescription>
<para>Used to add an extra linear interval. If this is the first one, a minimum altitude of 0 will be considered, if limit is less than 0, a maximum altitude of 0 will be considered, the initial temperature in this case will be considered 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The limit of this interval, it has to be bigger than all previous limits</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>temp2</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature value at the limit</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the interval was added correctly, false otherwise</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="343" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1ad7c465dadcd298385fbd6392f0f4f1b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TemperatureModel.AddQuadraticStep</definition>
        <argsstring>(float limit, float A, float B, float C)</argsstring>
        <name>AddQuadraticStep</name>
        <param>
          <type>float</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>A</declname>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
        </param>
        <param>
          <type>float</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Used to add an extra quadratic interval. If this is the first one, a minimum altitude of 0 will be considered, if limit is less than 0, a maximum altitude of 0 will be considered. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The limit of this interval, it has to be bigger than all previous limits</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>Quadratic coefficient of the equation y = Ax^2 + Bx + C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>Linear coefficient of the equation y = Ax^2 + Bx + C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant coefficient of the equation y = Ax^2 + Bx + C</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="352" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_temperature_model_1a75d5f087a233a77b3760ca3776c22225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TemperatureModel.TemperatureModel</definition>
        <argsstring>()</argsstring>
        <name>TemperatureModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="288" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="288" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_temperature_model_1a15a54fdce157c20b91fa57ce770bde1a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float TemperatureModel.getTemperatureAtAltitude</definition>
        <argsstring>(double altitude)</argsstring>
        <name>getTemperatureAtAltitude</name>
        <param>
          <type>double</type>
          <declname>altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="356" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="356" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores parameters to calculate a planet&apos;s temperature at an arbitrary altitude. The way the temperature is calculated is divided in intervals, which can have constant temperatures, linear functions, or quadratic functions. </para>    </briefdescription>
    <detaileddescription>
<para>Usage: Create a temperature model, then add intervals to it, example:</para><para><ref refid="class_temperature_model" kindref="compound">TemperatureModel</ref> Earth = new <ref refid="class_temperature_model_1a75d5f087a233a77b3760ca3776c22225" kindref="member">TemperatureModel()</ref>; Earth.addInitialLinearInterval(15,0,-45,12); Earth.addLinearInterval(); Earth.addConstantInterval(); Earth.addLinearInterval();</para>    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" line="20" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/TemperatureModel.cs" bodystart="19" bodyend="362"/>
    <listofallmembers>
      <member refid="class_temperature_model_1a0f8de2baf72a64fa494fb207eb9e0f2a" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddConstantStep</name></member>
      <member refid="class_temperature_model_1a6fd6a7540a357696e39645bd93b79958" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddInitialConstantStep</name></member>
      <member refid="class_temperature_model_1a9b5b9076c6e60f7798022886c18d133d" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddInitialLinearStep</name></member>
      <member refid="class_temperature_model_1ad586760bdffb97709f265c88206ba879" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddInitialLinearStepEquation</name></member>
      <member refid="class_temperature_model_1ae1cf10cfd0d24ec4ff0fc074884edeab" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddInitialQuadraticStep</name></member>
      <member refid="class_temperature_model_1a6f5728e481fa44341e33825474df487a" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddLinearStep</name></member>
      <member refid="class_temperature_model_1ad7c465dadcd298385fbd6392f0f4f1b5" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>AddQuadraticStep</name></member>
      <member refid="class_temperature_model_1a15a54fdce157c20b91fa57ce770bde1a" prot="private" virt="non-virtual"><scope>TemperatureModel</scope><name>getTemperatureAtAltitude</name></member>
      <member refid="class_temperature_model_1a6fa9f66aac50bb9533ca0f9b2ccd9640" prot="private" virt="non-virtual"><scope>TemperatureModel</scope><name>Intervals</name></member>
      <member refid="class_temperature_model_1a75d5f087a233a77b3760ca3776c22225" prot="public" virt="non-virtual"><scope>TemperatureModel</scope><name>TemperatureModel</name></member>
      <member refid="class_temperature_model_1a0d5e93e44f4ebe741b2360bdf299b6b5" prot="private" virt="non-virtual"><scope>TemperatureModel</scope><name>TemperatureModels</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
