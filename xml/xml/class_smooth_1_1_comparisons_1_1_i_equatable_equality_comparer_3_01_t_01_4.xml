<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4" kind="class" prot="public">
    <compoundname>Smooth::Comparisons::IEquatableEqualityComparer&lt; T &gt;</compoundname>
    <basecompoundref refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4" prot="public" virt="non-virtual">Smooth.Collections.EqualityComparer&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4_1a3161c9f25ebe53b5172a33dd45d12d48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Comparisons.IEquatableEqualityComparer&lt; T &gt;.Equals</definition>
        <argsstring>(T l, T r)</argsstring>
        <name>Equals</name>
        <reimplements refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1a884d6aa3c9e968b24ec3e449e29359e9">Equals</reimplements>
        <param>
          <type>T</type>
          <declname>l</declname>
        </param>
        <param>
          <type>T</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" line="12" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4_1aec0872d5aaf3f5f6689b0f492b8b50d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override int</type>
        <definition>override int Smooth.Comparisons.IEquatableEqualityComparer&lt; T &gt;.GetHashCode</definition>
        <argsstring>(T t)</argsstring>
        <name>GetHashCode</name>
        <reimplements refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1a12b2f2e253569c2d62b4a5874a04fa5e">GetHashCode</reimplements>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" line="16" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" bodystart="16" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allocation free equality comparer for type T where T implements IEquatable&lt;T&gt;. </para>    </briefdescription>
    <detaileddescription>
<para>Only useful to circumvent potential JIT exceptions on platforms without JIT compilation. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="64519">
        <label>Smooth::Collections::EqualityComparer&lt; T &gt;</label>
        <link refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4"/>
        <childnode refid="64520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64520">
        <label>IEqualityComparer&lt; T &gt;</label>
      </node>
      <node id="64518">
        <label>Smooth.Comparisons.IEquatableEqualityComparer&lt; T &gt;</label>
        <link refid="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4"/>
        <childnode refid="64519" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="64522">
        <label>Smooth::Collections::EqualityComparer&lt; T &gt;</label>
        <link refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4"/>
        <childnode refid="64523" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64523">
        <label>IEqualityComparer&lt; T &gt;</label>
      </node>
      <node id="64521">
        <label>Smooth.Comparisons.IEquatableEqualityComparer&lt; T &gt;</label>
        <link refid="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4"/>
        <childnode refid="64522" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Comparisons/IEquatableEqualityComparer.cs" bodystart="11" bodyend="19"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1ac2e221d0b303435f1f3f8489e4bf778a" prot="public" virt="non-virtual"><scope>Smooth::Comparisons::IEquatableEqualityComparer&lt; T &gt;</scope><name>Default</name></member>
      <member refid="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4_1a3161c9f25ebe53b5172a33dd45d12d48" prot="public" virt="virtual"><scope>Smooth::Comparisons::IEquatableEqualityComparer&lt; T &gt;</scope><name>Equals</name></member>
      <member refid="class_smooth_1_1_comparisons_1_1_i_equatable_equality_comparer_3_01_t_01_4_1aec0872d5aaf3f5f6689b0f492b8b50d2" prot="public" virt="virtual"><scope>Smooth::Comparisons::IEquatableEqualityComparer&lt; T &gt;</scope><name>GetHashCode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
