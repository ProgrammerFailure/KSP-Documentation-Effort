<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_k_s_p_1_1_testing_1_1_test_manager" kind="class" prot="public">
    <compoundname>KSP::Testing::TestManager</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_k_s_p_1_1_testing_1_1_test_manager_1afe57bfdce517384d74f44d2faeb97edf" prot="private" static="yes" mutable="no">
        <type>List&lt; <ref refid="class_k_s_p_1_1_testing_1_1_unit_test" kindref="compound">UnitTest</ref> &gt;</type>
        <definition>List&lt;UnitTest&gt; KSP.Testing.TestManager.tests</definition>
        <argsstring></argsstring>
        <name>tests</name>
        <initializer>= new List&lt;<ref refid="class_k_s_p_1_1_testing_1_1_unit_test" kindref="compound">UnitTest</ref>&gt;()</initializer>
        <briefdescription>
<para>List of unit tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="35" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_s_p_1_1_testing_1_1_test_manager_1a27b7b166be7a299936c00d975c322fed" prot="private" static="yes" mutable="no">
        <type>HashSet&lt; Type &gt;</type>
        <definition>HashSet&lt;Type&gt; KSP.Testing.TestManager.types</definition>
        <argsstring></argsstring>
        <name>types</name>
        <initializer>= new HashSet&lt;Type&gt;()</initializer>
        <briefdescription>
<para>We&apos;ll check for uniqueness here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="40" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_k_s_p_1_1_testing_1_1_test_manager_1a9fe0265c472da48a922534fc31a122e2" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="no">
        <type>bool</type>
        <definition>bool KSP.Testing.TestManager.HaveUnitTests</definition>
        <argsstring></argsstring>
        <name>HaveUnitTests</name>
        <briefdescription>
<para>Do we have any unit tests loaded? (Used to show Unit <ref refid="namespace_k_s_p_1_1_testing" kindref="compound">Testing</ref> button on main screen) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="54" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_s_p_1_1_testing_1_1_test_manager_1a7593453aa90744d7f3dbdc3b013c0ae4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.Testing.TestManager.AddTest</definition>
        <argsstring>(UnitTest test)</argsstring>
        <name>AddTest</name>
        <param>
          <type><ref refid="class_k_s_p_1_1_testing_1_1_unit_test" kindref="compound">UnitTest</ref></type>
          <declname>test</declname>
        </param>
        <briefdescription>
<para>Add a test to the system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>test</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="46" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_testing_1_1_test_manager_1a836f7ed98533f7085ff41f97b15fc05f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.Testing.TestManager.ClearUnitTests</definition>
        <argsstring>()</argsstring>
        <name>ClearUnitTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="59" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_testing_1_1_test_manager_1a15476e2ab2f264e0715ac18501c7ff3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_testing_1_1_test_results" kindref="compound">TestResults</ref></type>
        <definition>static TestResults KSP.Testing.TestManager.RunTests</definition>
        <argsstring>()</argsstring>
        <name>RunTests</name>
        <briefdescription>
<para>Run the tests </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return results.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="69" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="69" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="class_k_s_p_1_1_testing_1_1_test_manager_1ab2efba41cfecb8ccae320b5d0fd5f78b" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.Testing.TestManager.AddTest</definition>
        <argsstring>(Type t)</argsstring>
        <name>AddTest</name>
        <param>
          <type>Type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Add test from assembly loader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="97" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="97" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>N3X15&apos;s shoddy Unit <ref refid="namespace_k_s_p_1_1_testing" kindref="compound">Testing</ref> framework, as standard frameworks don&apos;t work within Unity. </para>    </briefdescription>
    <detaileddescription>
<para>Create a class inheriting <ref refid="class_k_s_p_1_1_testing_1_1_unit_test" kindref="compound">UnitTest</ref> for each class of tests, then an arbitrary method for each test with the <ref refid="class_k_s_p_1_1_testing_1_1_test_info" kindref="compound">TestInfo</ref> attribute. Shove your tests into a plugin DLL and they&apos;ll be executed after plugin load. If no tests are present, the testing framework will not output anything, presenting a clean log.</para><para>Tested by N3X15 3/22/2012 </para>    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" line="31" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Unit Testing Scripts/TestManager.cs" bodystart="30" bodyend="113"/>
    <listofallmembers>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1a7593453aa90744d7f3dbdc3b013c0ae4" prot="public" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>AddTest</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1ab2efba41cfecb8ccae320b5d0fd5f78b" prot="package" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>AddTest</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1a836f7ed98533f7085ff41f97b15fc05f" prot="public" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>ClearUnitTests</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1a9fe0265c472da48a922534fc31a122e2" prot="public" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>HaveUnitTests</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1a15476e2ab2f264e0715ac18501c7ff3e" prot="public" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>RunTests</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1afe57bfdce517384d74f44d2faeb97edf" prot="private" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>tests</name></member>
      <member refid="class_k_s_p_1_1_testing_1_1_test_manager_1a27b7b166be7a299936c00d975c322fed" prot="private" virt="non-virtual"><scope>KSP::Testing::TestManager</scope><name>types</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
