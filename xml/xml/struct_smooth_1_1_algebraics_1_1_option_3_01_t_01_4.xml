<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kind="struct" prot="public">
    <compoundname>Smooth::Algebraics::Option&lt; T &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IComparable&lt; Option&lt; T &gt;&gt;</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; Option&lt; T &gt;&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad79909b6ece30a2a094b527ae6817677" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>readonly Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.None</definition>
        <argsstring></argsstring>
        <name>None</name>
        <initializer>= new <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt;T&gt;()</initializer>
        <briefdescription>
<para>A static None option for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="78" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aab0b659e77d116aa2d13e7e6db2aa271" prot="public" static="no" mutable="no">
        <type>readonly bool</type>
        <definition>readonly bool Smooth.Algebraics.Option&lt; T &gt;.isSome</definition>
        <argsstring></argsstring>
        <name>isSome</name>
        <briefdescription>
<para>True if the option contains a value; otherwise, false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="83" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a3e75e43c0b758d7a84de1236041d73d4" prot="public" static="no" mutable="no">
        <type>readonly T</type>
        <definition>readonly T Smooth.Algebraics.Option&lt; T &gt;.value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>If the option isSome, the value contained by the option; otherwise, default(T). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="88" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a083a1fed8e10ee6b7d6275b228d37446" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>bool</type>
        <definition>bool Smooth.Algebraics.Option&lt; T &gt;.isNone</definition>
        <argsstring></argsstring>
        <name>isNone</name>
        <briefdescription>
<para>True if the option is empty; otherwise, false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="93" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a872635ae569cf948908ded720ddbbf8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>U</type>
        <definition>U Smooth.Algebraics.Option&lt; T &gt;.Cata&lt; U &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, U &gt; someFunc, U noneValue)</argsstring>
        <name>Cata&lt; U &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, U &gt;</type>
          <declname>someFunc</declname>
        </param>
        <param>
          <type>U</type>
          <declname>noneValue</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the result of someFunc applied to the option&apos;s value; otherwise, returns noneValue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="108" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ae0c5ade0e3bbad55bba5cec3443025e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>U</type>
        <definition>U Smooth.Algebraics.Option&lt; T &gt;.Cata&lt; U &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, U &gt; someFunc, DelegateFunc&lt; U &gt; noneFunc)</argsstring>
        <name>Cata&lt; U &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, U &gt;</type>
          <declname>someFunc</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; U &gt;</type>
          <declname>noneFunc</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the result of someFunc applied to the option&apos;s value; otherwise, returns the result of noneFunc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="118" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a8b200e301bb857ada47e268b4a84c7e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>U</type>
        <definition>U Smooth.Algebraics.Option&lt; T &gt;.Cata&lt; U, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, U &gt; someFunc, P p, U noneValue)</argsstring>
        <name>Cata&lt; U, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, U &gt;</type>
          <declname>someFunc</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <param>
          <type>U</type>
          <declname>noneValue</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the result of someFunc applied to the option&apos;s value and p; otherwise, returns noneValue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="113" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5ad21ef3b40cb435513befb801b1b3f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>U</type>
        <definition>U Smooth.Algebraics.Option&lt; T &gt;.Cata&lt; U, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, U &gt; someFunc, P p, DelegateFunc&lt; U &gt; noneFunc)</argsstring>
        <name>Cata&lt; U, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, U &gt;</type>
          <declname>someFunc</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; U &gt;</type>
          <declname>noneFunc</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the result of someFunc applied to the option&apos;s value and p; otherwise, returns the result of noneFunc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="123" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a7102cacd2e1523b72320f45596a7e839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>U</type>
        <definition>U Smooth.Algebraics.Option&lt; T &gt;.Cata&lt; U, P, P2 &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, U &gt; someFunc, P p, DelegateFunc&lt; P2, U &gt; noneFunc, P2 p2)</argsstring>
        <name>Cata&lt; U, P, P2 &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, U &gt;</type>
          <declname>someFunc</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; P2, U &gt;</type>
          <declname>noneFunc</declname>
        </param>
        <param>
          <type>P2</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the result of someFunc applied to the option&apos;s value and p; otherwise, returns the result of noneFunc applied to p2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="128" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a509ff2a09f5a3f6822b9ff5fec914216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Smooth.Algebraics.Option&lt; T &gt;.CompareTo</definition>
        <argsstring>(Option&lt; T &gt; other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="262" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aac37facb0b1c545b1ad90d0122ff935a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Algebraics.Option&lt; T &gt;.Contains</definition>
        <argsstring>(T t)</argsstring>
        <name>Contains</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Returns true if the option contains the specified value according to the default equality comparer; otherwise, false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="133" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afb4f5a7dee510845a5f9c37ea781c511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Algebraics.Option&lt; T &gt;.Contains</definition>
        <argsstring>(T t, IEqualityComparer&lt; T &gt; comparer)</argsstring>
        <name>Contains</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <param>
          <type>IEqualityComparer&lt; T &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
<para>Returns true if the option contains the specified value according to the specified equality comparer; otherwise, false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="138" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a1c0de0832a979c3eba397f40d683467d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Algebraics.Option&lt; T &gt;.Equals</definition>
        <argsstring>(object o)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="250" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a3f64af21b069e635356d1a5aad7a7a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Algebraics.Option&lt; T &gt;.Equals</definition>
        <argsstring>(Option&lt; T &gt; other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="254" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5f014c307288892911127fa23cbd03a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEach</definition>
        <argsstring>(DelegateAction&lt; T &gt; action)</argsstring>
        <name>ForEach</name>
        <param>
          <type>DelegateAction&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the specified delegate with the option&apos;s value; otherwise, does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="153" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a915b2d9cb2c33548f1e8f7362818f68e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEach&lt; P &gt;</definition>
        <argsstring>(DelegateAction&lt; T, P &gt; action, P p)</argsstring>
        <name>ForEach&lt; P &gt;</name>
        <param>
          <type>DelegateAction&lt; T, P &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the specified delegate with the option&apos;s value and p; otherwise, does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="158" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad33b57bbc05a8986cb2a372cabcc27eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEachOr</definition>
        <argsstring>(DelegateAction&lt; T &gt; someAction, DelegateAction noneAction)</argsstring>
        <name>ForEachOr</name>
        <param>
          <type>DelegateAction&lt; T &gt;</type>
          <declname>someAction</declname>
        </param>
        <param>
          <type>DelegateAction</type>
          <declname>noneAction</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the someAction with the option&apos;s value; otherwise, invokes noneAction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="163" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aba847b367615fe09bedb36ce1ca34880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEachOr&lt; P &gt;</definition>
        <argsstring>(DelegateAction&lt; T, P &gt; someAction, P p, DelegateAction noneAction)</argsstring>
        <name>ForEachOr&lt; P &gt;</name>
        <param>
          <type>DelegateAction&lt; T, P &gt;</type>
          <declname>someAction</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <param>
          <type>DelegateAction</type>
          <declname>noneAction</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the someAction with the option&apos;s value and p; otherwise, invokes noneAction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="168" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aebda230e046e592100b1569781bdd227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEachOr&lt; P, P2 &gt;</definition>
        <argsstring>(DelegateAction&lt; T, P &gt; someAction, P p, DelegateAction&lt; P2 &gt; noneAction, P2 p2)</argsstring>
        <name>ForEachOr&lt; P, P2 &gt;</name>
        <param>
          <type>DelegateAction&lt; T, P &gt;</type>
          <declname>someAction</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <param>
          <type>DelegateAction&lt; P2 &gt;</type>
          <declname>noneAction</declname>
        </param>
        <param>
          <type>P2</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the someAction with the option&apos;s value and p; otherwise, invokes noneAction with p2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="178" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9faf373141899986145853ced9e199d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.ForEachOr&lt; P2 &gt;</definition>
        <argsstring>(DelegateAction&lt; T &gt; someAction, DelegateAction&lt; P2 &gt; noneAction, P2 p2)</argsstring>
        <name>ForEachOr&lt; P2 &gt;</name>
        <param>
          <type>DelegateAction&lt; T &gt;</type>
          <declname>someAction</declname>
        </param>
        <param>
          <type>DelegateAction&lt; P2 &gt;</type>
          <declname>noneAction</declname>
        </param>
        <param>
          <type>P2</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>If the option isSome, invokes the someAction with the option&apos;s value; otherwise, invokes noneAction with p2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="173" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1acd732a1c0c478df27cd56128aa527de6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Smooth.Algebraics.Option&lt; T &gt;.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="258" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9a59b77126edb1ba75bde856fd03b3aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.IfEmpty</definition>
        <argsstring>(DelegateAction action)</argsstring>
        <name>IfEmpty</name>
        <param>
          <type>DelegateAction</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>If the option isNone, invokes the specified delegate; otherwise, does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="143" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad8f823635916641e9a7948181833bb89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Algebraics.Option&lt; T &gt;.IfEmpty&lt; P &gt;</definition>
        <argsstring>(DelegateAction&lt; P &gt; action, P p)</argsstring>
        <name>IfEmpty&lt; P &gt;</name>
        <param>
          <type>DelegateAction&lt; P &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isNone, invokes the specified delegate with p; otherwise, does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="148" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ac279bfbf10edc607156173c71b8bd868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Algebraics.Option&lt; T &gt;.Option</definition>
        <argsstring>(T value)</argsstring>
        <name>Option</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a Some option that contains the specified value. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Use the default contructor to create a None option. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="100" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a709f28c756e3247f6765b43ff18a26f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.Or</definition>
        <argsstring>(Option&lt; T &gt; noneOption)</argsstring>
        <name>Or</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>noneOption</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option; otherwise, returns noneOption. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="183" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a801047aaac2f3c7f6d1dbb258f26f96b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.Or</definition>
        <argsstring>(DelegateFunc&lt; Option&lt; T &gt;&gt; noneFunc)</argsstring>
        <name>Or</name>
        <param>
          <type>DelegateFunc&lt; <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;&gt;</type>
          <declname>noneFunc</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option; otherwise, returns the result of noneFunc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="188" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9d749fe3aff0e00ba31ef24a78f7c0ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.Or&lt; P &gt;</definition>
        <argsstring>(DelegateFunc&lt; P, Option&lt; T &gt;&gt; noneFunc, P p)</argsstring>
        <name>Or&lt; P &gt;</name>
        <param>
          <type>DelegateFunc&lt; P, <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;&gt;</type>
          <declname>noneFunc</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option; otherwise, returns the result of noneFunc applied to p. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="193" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a241340c5b32b917d0e2256dbe454db59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;</type>
        <definition>Option&lt;U&gt; Smooth.Algebraics.Option&lt; T &gt;.Select&lt; U &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, U &gt; selector)</argsstring>
        <name>Select&lt; U &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, U &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns an option containing the specified selector applied to the option&apos;s value; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="198" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a8f6dd26f606ab5ca1422d6a94480291b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;</type>
        <definition>Option&lt;U&gt; Smooth.Algebraics.Option&lt; T &gt;.Select&lt; U, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, U &gt; selector, P p)</argsstring>
        <name>Select&lt; U, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, U &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns an option containing the specified selector applied to the option&apos;s value and p; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="203" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afdfa1d89f3e694c1634498c1da85818b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;</type>
        <definition>Option&lt;U&gt; Smooth.Algebraics.Option&lt; T &gt;.SelectMany&lt; U &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, Option&lt; U &gt;&gt; selector)</argsstring>
        <name>SelectMany&lt; U &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the specified selector applied to the option&apos;s value; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="208" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a34b57c8d0d7558d149f3ca792f593321" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;</type>
        <definition>Option&lt;U&gt; Smooth.Algebraics.Option&lt; T &gt;.SelectMany&lt; U, P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, Option&lt; U &gt;&gt; selector, P p)</argsstring>
        <name>SelectMany&lt; U, P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; U &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the specified selector applied to the option&apos;s value and p; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="213" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a192f380a8fbe8354147875d0b1710215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Smooth.Algebraics.Option&lt; T &gt;.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="290" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a1e48dc7a87bae2564bbfa0d15840ffe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Smooth.Algebraics.Option&lt; T &gt;.ValueOr</definition>
        <argsstring>(T noneValue)</argsstring>
        <name>ValueOr</name>
        <param>
          <type>T</type>
          <declname>noneValue</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option&apos;s value; otherwise, returns noneValue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="218" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a21bf1fe9368d4a7f955b6181acfe107c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Smooth.Algebraics.Option&lt; T &gt;.ValueOr</definition>
        <argsstring>(DelegateFunc&lt; T &gt; noneFunc)</argsstring>
        <name>ValueOr</name>
        <param>
          <type>DelegateFunc&lt; T &gt;</type>
          <declname>noneFunc</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option&apos;s value; otherwise, returns the result of noneFunc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="223" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1af0ba0c4ead86638242226a9b149a44f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Smooth.Algebraics.Option&lt; T &gt;.ValueOr&lt; P &gt;</definition>
        <argsstring>(DelegateFunc&lt; P, T &gt; noneFunc, P p)</argsstring>
        <name>ValueOr&lt; P &gt;</name>
        <param>
          <type>DelegateFunc&lt; P, T &gt;</type>
          <declname>noneFunc</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome, returns the option&apos;s value; otherwise, returns the result of noneFunc applied to p. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="228" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a79d7695f0ea54e7a36e7cc72ad4ddd87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.Where</definition>
        <argsstring>(DelegateFunc&lt; T, bool &gt; predicate)</argsstring>
        <name>Where</name>
        <param>
          <type>DelegateFunc&lt; T, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>If the option isSome and the specified predicate applied to the option&apos;s value is true, returns the option; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="233" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a4bccc8c48f5ad24c0de09e0974b39bae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.Where&lt; P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, bool &gt; predicate, P p)</argsstring>
        <name>Where&lt; P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome and the specified predicate applied to the option&apos;s value and p is true, returns the option; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="238" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afa39d0e9dc6d81d5bd0b97a26b50c8da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.WhereNot</definition>
        <argsstring>(DelegateFunc&lt; T, bool &gt; predicate)</argsstring>
        <name>WhereNot</name>
        <param>
          <type>DelegateFunc&lt; T, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>If the option isSome and the specified predicate applied to the option&apos;s value is false, returns the option; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="243" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5e17ad8f69f728d4cae79b25f48ef4f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
        <definition>Option&lt;T&gt; Smooth.Algebraics.Option&lt; T &gt;.WhereNot&lt; P &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, P, bool &gt; predicate, P p)</argsstring>
        <name>WhereNot&lt; P &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, P, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>P</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>If the option isSome and the specified predicate applied to the option&apos;s value and p is false, returns the option; otherwise, returns an empty option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="248" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="248" bodyend="248"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a886e5aced3173a4e36e999f8725d41b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator!=</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="270" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a85bb798b100668f882ef03da681ab204" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator&lt;</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="278" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a0417b5038461982fe7d3edfad6fb4862" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator&lt;=</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="286" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ae8d8a1c809ff7682070bc44ac1b92fef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator==</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="266" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9d21dda899be7d77540c7b33d76d8a06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator&gt;</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="274" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aa16ec34209ca4dd3ec75ce7410a7680f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Algebraics.Option&lt; T &gt;.operator&gt;=</definition>
        <argsstring>(Option&lt; T &gt; lhs, Option&lt; T &gt; rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="282" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="282" bodyend="284"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct representing an optional value of type T. An option that contains the value t is called a &quot;Some&quot; or &quot;Some(t)&quot;. An empty option is called a &quot;None&quot;. <ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref> can be thought of as a far more robust version of Nullable&lt;T&gt; or as an IEnumerable&lt;T&gt; that may contain exactly 0 or 1 element(s). </para>    </briefdescription>
    <detaileddescription>
<para>An <ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref> has two fields:</para><para>public readonly bool isSome;</para><para>public readonly T value;</para><para>Use the isSome field to determine if the option contains a value, and the value field to read the value. Nothing prevents access to the value field of an empty option, it is up to the user to adherere to the Some / None semantics. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="106218">
        <label>IEquatable&lt; Option&lt; T &gt;&gt;</label>
      </node>
      <node id="106217">
        <label>IComparable&lt; Option&lt; T &gt;&gt;</label>
      </node>
      <node id="106216">
        <label>Smooth.Algebraics.Option&lt; T &gt;</label>
        <link refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4"/>
        <childnode refid="106217" relation="public-inheritance">
        </childnode>
        <childnode refid="106218" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="106221">
        <label>IEquatable&lt; Option&lt; T &gt;&gt;</label>
      </node>
      <node id="106220">
        <label>IComparable&lt; Option&lt; T &gt;&gt;</label>
      </node>
      <node id="106219">
        <label>Smooth.Algebraics.Option&lt; T &gt;</label>
        <link refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4"/>
        <childnode refid="106220" relation="public-inheritance">
        </childnode>
        <childnode refid="106221" relation="public-inheritance">
        </childnode>
        <childnode refid="106222" relation="usage">
          <edgelabel>None</edgelabel>
        </childnode>
      </node>
      <node id="106222">
        <label>static</label>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" line="74" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs" bodystart="74" bodyend="293"/>
    <listofallmembers>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a872635ae569cf948908ded720ddbbf8a" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Cata&lt; U &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ae0c5ade0e3bbad55bba5cec3443025e6" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Cata&lt; U &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a8b200e301bb857ada47e268b4a84c7e3" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Cata&lt; U, P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5ad21ef3b40cb435513befb801b1b3f6" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Cata&lt; U, P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a7102cacd2e1523b72320f45596a7e839" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Cata&lt; U, P, P2 &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a509ff2a09f5a3f6822b9ff5fec914216" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>CompareTo</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aac37facb0b1c545b1ad90d0122ff935a" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Contains</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afb4f5a7dee510845a5f9c37ea781c511" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Contains</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a1c0de0832a979c3eba397f40d683467d" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a3f64af21b069e635356d1a5aad7a7a98" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5f014c307288892911127fa23cbd03a9" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEach</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a915b2d9cb2c33548f1e8f7362818f68e" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEach&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad33b57bbc05a8986cb2a372cabcc27eb" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEachOr</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aba847b367615fe09bedb36ce1ca34880" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEachOr&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aebda230e046e592100b1569781bdd227" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEachOr&lt; P, P2 &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9faf373141899986145853ced9e199d1" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ForEachOr&lt; P2 &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1acd732a1c0c478df27cd56128aa527de6" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>GetHashCode</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9a59b77126edb1ba75bde856fd03b3aa" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>IfEmpty</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad8f823635916641e9a7948181833bb89" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>IfEmpty&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a083a1fed8e10ee6b7d6275b228d37446" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>isNone</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aab0b659e77d116aa2d13e7e6db2aa271" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>isSome</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ad79909b6ece30a2a094b527ae6817677" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>None</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a886e5aced3173a4e36e999f8725d41b8" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator!=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a85bb798b100668f882ef03da681ab204" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator&lt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a0417b5038461982fe7d3edfad6fb4862" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator&lt;=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ae8d8a1c809ff7682070bc44ac1b92fef" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator==</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9d21dda899be7d77540c7b33d76d8a06" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator&gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1aa16ec34209ca4dd3ec75ce7410a7680f" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>operator&gt;=</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1ac279bfbf10edc607156173c71b8bd868" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Option</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a709f28c756e3247f6765b43ff18a26f1" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Or</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a801047aaac2f3c7f6d1dbb258f26f96b" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Or</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a9d749fe3aff0e00ba31ef24a78f7c0ee" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Or&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a241340c5b32b917d0e2256dbe454db59" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Select&lt; U &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a8f6dd26f606ab5ca1422d6a94480291b" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Select&lt; U, P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afdfa1d89f3e694c1634498c1da85818b" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>SelectMany&lt; U &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a34b57c8d0d7558d149f3ca792f593321" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>SelectMany&lt; U, P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a192f380a8fbe8354147875d0b1710215" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ToString</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a3e75e43c0b758d7a84de1236041d73d4" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>value</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a1e48dc7a87bae2564bbfa0d15840ffe6" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ValueOr</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a21bf1fe9368d4a7f955b6181acfe107c" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ValueOr</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1af0ba0c4ead86638242226a9b149a44f7" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>ValueOr&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a79d7695f0ea54e7a36e7cc72ad4ddd87" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Where</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a4bccc8c48f5ad24c0de09e0974b39bae" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>Where&lt; P &gt;</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1afa39d0e9dc6d81d5bd0b97a26b50c8da" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>WhereNot</name></member>
      <member refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a5e17ad8f69f728d4cae79b25f48ef4f9" prot="public" virt="non-virtual"><scope>Smooth::Algebraics::Option&lt; T &gt;</scope><name>WhereNot&lt; P &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
