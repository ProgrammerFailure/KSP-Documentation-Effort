<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_steamworks_1_1_steam_matchmaking_servers" kind="class" prot="public">
    <compoundname>Steamworks::SteamMatchmakingServers</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a1aff9aea333b9bd63b2ffe2c9bddc264" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamMatchmakingServers.CancelQuery</definition>
        <argsstring>(HServerListRequest hRequest)</argsstring>
        <name>CancelQuery</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel an request which is operation on the given list type. You should call this to cancel</para><para>any in-progress requests before destructing a callback object that may have been passed</para><para>to one of the above list request calls. Not doing so may result in a crash when a callback</para><para>occurs on the destructed object.</para><para>Canceling a query does not release the allocated request handle.</para><para>The request handle must be released using ReleaseRequest( hRequest )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="557" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="557" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a14a25f2fd7c59a7a1a0ef33fa94f840f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamMatchmakingServers.CancelServerQuery</definition>
        <argsstring>(HServerQuery hServerQuery)</argsstring>
        <name>CancelServerQuery</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_query" kindref="compound">HServerQuery</ref></type>
          <declname>hServerQuery</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel an outstanding Ping/Players/Rules query from above. You should call this to cancel</para><para>any in-progress requests before destructing a callback object that may have been passed</para><para>to one of the above calls to avoid crashing when callbacks occur.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="630" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a98893b4da3a407e0295a3fc8cc5fb6cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Steamworks.SteamMatchmakingServers.GetServerCount</definition>
        <argsstring>(HServerListRequest hRequest)</argsstring>
        <name>GetServerCount</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How many servers in the given list, GetServerDetails above takes 0... <ref refid="class_steamworks_1_1_steam_matchmaking_servers_1a98893b4da3a407e0295a3fc8cc5fb6cd" kindref="member">GetServerCount()</ref> - 1</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="585" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a16f7d7e3207ea2bf659d7fc74ae74bac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_steamworks_1_1gameserveritem__t" kindref="compound">gameserveritem_t</ref></type>
        <definition>static gameserveritem_t Steamworks.SteamMatchmakingServers.GetServerDetails</definition>
        <argsstring>(HServerListRequest hRequest, int iServer)</argsstring>
        <name>GetServerDetails</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iServer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the filter operation codes that go in the key part of <ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref> should be one of these:</para><para>&quot;map&quot;</para><para>- Server passes the filter if the server is playing the specified map.</para><para>&quot;gamedataand&quot;</para><para>- Server passes the filter if the server&apos;s game data (ISteamGameServer::SetGameData) contains all of the</para><para>specified strings. The value field is a comma-delimited list of strings to match.</para><para>&quot;gamedataor&quot;</para><para>- Server passes the filter if the server&apos;s game data (ISteamGameServer::SetGameData) contains at least one of the</para><para>specified strings. The value field is a comma-delimited list of strings to match.</para><para>&quot;gamedatanor&quot;</para><para>- Server passes the filter if the server&apos;s game data (ISteamGameServer::SetGameData) does not contain any</para><para>of the specified strings. The value field is a comma-delimited list of strings to check.</para><para>&quot;gametagsand&quot;</para><para>- Server passes the filter if the server&apos;s game tags (ISteamGameServer::SetGameTags) contains all</para><para>of the specified strings. The value field is a comma-delimited list of strings to check.</para><para>&quot;gametagsnor&quot;</para><para>- Server passes the filter if the server&apos;s game tags (ISteamGameServer::SetGameTags) does not contain any</para><para>of the specified strings. The value field is a comma-delimited list of strings to check.</para><para>&quot;and&quot; (x1 &amp;&amp; x2 &amp;&amp; ... &amp;&amp; xn)</para><para>&quot;or&quot; (x1 || x2 || ... || xn)</para><para>&quot;nand&quot; !(x1 &amp;&amp; x2 &amp;&amp; ... &amp;&amp; xn)</para><para>&quot;nor&quot; !(x1 || x2 || ... || xn)</para><para>- Performs Boolean operation on the following filters. The operand to this filter specifies</para><para>the &quot;size&quot; of the Boolean inputs to the operation, in Key/value pairs. (The keyvalue</para><para>pairs must immediately follow, i.e. this is a prefix logical operator notation.)</para><para>In the simplest case where Boolean expressions are not nested, this is simply</para><para>the number of operands.</para><para>For example, to match servers on a particular map or with a particular tag, would would</para><para>use these filters.</para><para>( server.map == &quot;cp_dustbowl&quot; || server.gametags.contains(&quot;payload&quot;) )</para><para>&quot;or&quot;, &quot;2&quot;</para><para>&quot;map&quot;, &quot;cp_dustbowl&quot;</para><para>&quot;gametagsand&quot;, &quot;payload&quot;</para><para>If logical inputs are nested, then the operand specifies the size of the entire</para><para>&quot;length&quot; of its operands, not the number of immediate children.</para><para>( server.map == &quot;cp_dustbowl&quot; || ( server.gametags.contains(&quot;payload&quot;) &amp;&amp; !server.gametags.contains(&quot;payloadrace&quot;) ) )</para><para>&quot;or&quot;, &quot;4&quot;</para><para>&quot;map&quot;, &quot;cp_dustbowl&quot;</para><para>&quot;and&quot;, &quot;2&quot;</para><para>&quot;gametagsand&quot;, &quot;payload&quot;</para><para>&quot;gametagsnor&quot;, &quot;payloadrace&quot;</para><para>Unary NOT can be achieved using either &quot;nand&quot; or &quot;nor&quot; with a single operand.</para><para>&quot;addr&quot;</para><para>- Server passes the filter if the server&apos;s query address matches the specified IP or IP:port.</para><para>&quot;gameaddr&quot;</para><para>- Server passes the filter if the server&apos;s game address matches the specified IP or IP:port.</para><para>The following filter operations ignore the &quot;value&quot; part of <ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref></para><para>&quot;dedicated&quot;</para><para>- Server passes the filter if it passed true to SetDedicatedServer.</para><para>&quot;secure&quot;</para><para>- Server passes the filter if the server is VAC-enabled.</para><para>&quot;notfull&quot;</para><para>- Server passes the filter if the player count is less than the reported max player count.</para><para>&quot;hasplayers&quot;</para><para>- Server passes the filter if the player count is greater than zero.</para><para>&quot;noplayers&quot;</para><para>- Server passes the filter if it doesn&apos;t have any players.</para><para>&quot;linux&quot;</para><para>- Server passes the filter if it&apos;s a linux server</para><para>Get details on a given server in the list, you can get the valid range of index</para><para>values by calling <ref refid="class_steamworks_1_1_steam_matchmaking_servers_1a98893b4da3a407e0295a3fc8cc5fb6cd" kindref="member">GetServerCount()</ref>. You will also receive index values in</para><para><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response_1a66e77ed0fc740cc482273288e155d4c9" kindref="member">ISteamMatchmakingServerListResponse::ServerResponded()</ref> callbacks</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="544" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="544" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a8d2c7438de37628c368e5b8ec8393a6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamMatchmakingServers.IsRefreshing</definition>
        <argsstring>(HServerListRequest hRequest)</argsstring>
        <name>IsRefreshing</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the list is currently refreshing its server list</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="577" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="577" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1ab6774c872a5513759972944ba96df343" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_query" kindref="compound">HServerQuery</ref></type>
        <definition>static HServerQuery Steamworks.SteamMatchmakingServers.PingServer</definition>
        <argsstring>(uint unIP, ushort usPort, ISteamMatchmakingPingResponse pRequestServersResponse)</argsstring>
        <name>PingServer</name>
        <param>
          <type>uint</type>
          <declname>unIP</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPort</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_ping_response" kindref="compound">ISteamMatchmakingPingResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>--------------------------------------------------------------------------<mdash/></para><para>Queries to individual servers directly via IP/Port</para><para>--------------------------------------------------------------------------<mdash/></para><para>Request updated ping time and other details from a single server</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="604" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="604" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1ab98d35319aca25b4f12b7281a3c81f2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_query" kindref="compound">HServerQuery</ref></type>
        <definition>static HServerQuery Steamworks.SteamMatchmakingServers.PlayerDetails</definition>
        <argsstring>(uint unIP, ushort usPort, ISteamMatchmakingPlayersResponse pRequestServersResponse)</argsstring>
        <name>PlayerDetails</name>
        <param>
          <type>uint</type>
          <declname>unIP</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPort</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_players_response" kindref="compound">ISteamMatchmakingPlayersResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the list of players currently playing on a server</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="612" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="612" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1abd226fd5fa24375073ce44bb39eb0d6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamMatchmakingServers.RefreshQuery</definition>
        <argsstring>(HServerListRequest hRequest)</argsstring>
        <name>RefreshQuery</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ping every server in your list again but don&apos;t update the list of servers</para><para>Query callback installed when the server list was requested will be used</para><para>again to post notifications and RefreshComplete, so the callback must remain</para><para>valid until another RefreshComplete is called on it or the request</para><para>is released with ReleaseRequest( hRequest )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="569" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="569" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a5881323fa2f1686751b44b7eefd04496" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamMatchmakingServers.RefreshServer</definition>
        <argsstring>(HServerListRequest hRequest, int iServer)</argsstring>
        <name>RefreshServer</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hRequest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iServer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh a single server inside of a query (rather than all the servers )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="593" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a730df1591fd98821201be4172b1aa7e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamMatchmakingServers.ReleaseRequest</definition>
        <argsstring>(HServerListRequest hServerListRequest)</argsstring>
        <name>ReleaseRequest</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
          <declname>hServerListRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Releases the asynchronous request object and cancels any pending query on it if there&apos;s a pending query in progress.</para><para>RefreshComplete callback is not posted when request is released.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="475" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a7f05355583a2fe49112f0be91041cf3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestFavoritesServerList</definition>
        <argsstring>(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestFavoritesServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref>[]</type>
          <declname>ppchFilters</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFilters</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="456" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="456" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1acaf402b9b0acbea3f8371c9e1adc6e8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestFriendsServerList</definition>
        <argsstring>(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestFriendsServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref>[]</type>
          <declname>ppchFilters</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFilters</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="451" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="451" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1af9d3980b398352509cc2c22a219de726" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestHistoryServerList</definition>
        <argsstring>(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestHistoryServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref>[]</type>
          <declname>ppchFilters</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFilters</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="461" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a48e29c997581b38bb0b4d2a65f3bac89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestInternetServerList</definition>
        <argsstring>(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestInternetServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref>[]</type>
          <declname>ppchFilters</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFilters</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a new list of servers of a particular type. These calls each correspond to one of the EMatchMakingType values.</para><para>Each call allocates a new asynchronous request object.</para><para>Request object must be released by calling ReleaseRequest( hServerListRequest )</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="441" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1af29b7c6834fbdaebfe51d24e7e18aec9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestLANServerList</definition>
        <argsstring>(AppId_t iApp, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestLANServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="446" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1af316c8e643f762213ff9645ecb916258" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_list_request" kindref="compound">HServerListRequest</ref></type>
        <definition>static HServerListRequest Steamworks.SteamMatchmakingServers.RequestSpectatorServerList</definition>
        <argsstring>(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse)</argsstring>
        <name>RequestSpectatorServerList</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_app_id__t" kindref="compound">AppId_t</ref></type>
          <declname>iApp</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_match_making_key_value_pair__t" kindref="compound">MatchMakingKeyValuePair_t</ref>[]</type>
          <declname>ppchFilters</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFilters</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_server_list_response" kindref="compound">ISteamMatchmakingServerListResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="466" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_matchmaking_servers_1a75f276104fc308a66911bf912f7213fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_h_server_query" kindref="compound">HServerQuery</ref></type>
        <definition>static HServerQuery Steamworks.SteamMatchmakingServers.ServerRules</definition>
        <argsstring>(uint unIP, ushort usPort, ISteamMatchmakingRulesResponse pRequestServersResponse)</argsstring>
        <name>ServerRules</name>
        <param>
          <type>uint</type>
          <declname>unIP</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usPort</declname>
        </param>
        <param>
          <type><ref refid="class_steamworks_1_1_i_steam_matchmaking_rules_response" kindref="compound">ISteamMatchmakingRulesResponse</ref></type>
          <declname>pRequestServersResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request the list of rules that the server is running (See ISteamGameServer::SetKeyValue() to set the rules server side)</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="620" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="620" bodyend="623"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" line="435" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteammatchmaking.cs" bodystart="435" bodyend="634"/>
    <listofallmembers>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a1aff9aea333b9bd63b2ffe2c9bddc264" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>CancelQuery</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a14a25f2fd7c59a7a1a0ef33fa94f840f" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>CancelServerQuery</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a98893b4da3a407e0295a3fc8cc5fb6cd" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>GetServerCount</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a16f7d7e3207ea2bf659d7fc74ae74bac" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>GetServerDetails</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a8d2c7438de37628c368e5b8ec8393a6a" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>IsRefreshing</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1ab6774c872a5513759972944ba96df343" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>PingServer</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1ab98d35319aca25b4f12b7281a3c81f2a" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>PlayerDetails</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1abd226fd5fa24375073ce44bb39eb0d6a" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RefreshQuery</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a5881323fa2f1686751b44b7eefd04496" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RefreshServer</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a730df1591fd98821201be4172b1aa7e8" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>ReleaseRequest</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a7f05355583a2fe49112f0be91041cf3b" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestFavoritesServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1acaf402b9b0acbea3f8371c9e1adc6e8d" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestFriendsServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1af9d3980b398352509cc2c22a219de726" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestHistoryServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a48e29c997581b38bb0b4d2a65f3bac89" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestInternetServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1af29b7c6834fbdaebfe51d24e7e18aec9" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestLANServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1af316c8e643f762213ff9645ecb916258" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>RequestSpectatorServerList</name></member>
      <member refid="class_steamworks_1_1_steam_matchmaking_servers_1a75f276104fc308a66911bf912f7213fe" prot="public" virt="non-virtual"><scope>Steamworks::SteamMatchmakingServers</scope><name>ServerRules</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
