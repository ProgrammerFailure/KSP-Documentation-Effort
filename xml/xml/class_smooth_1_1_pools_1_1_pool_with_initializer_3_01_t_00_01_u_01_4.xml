<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4" kind="class" prot="public">
    <compoundname>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</compoundname>
    <basecompoundref refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4" prot="public" virt="non-virtual">Smooth.Pools.Pool&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
      <param>
        <type>U</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1ade125692b581519dc90402d7d0dcfce6" prot="private" static="no" mutable="no">
        <type>readonly DelegateAction&lt; T, U &gt;</type>
        <definition>readonly DelegateAction&lt;T, U&gt; Smooth.Pools.PoolWithInitializer&lt; T, U &gt;.initialize</definition>
        <argsstring></argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" line="12" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1a575e4fcae34fe09085a79e38f0a7c64b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Smooth.Pools.PoolWithInitializer&lt; T, U &gt;.Borrow</definition>
        <argsstring>(U u)</argsstring>
        <name>Borrow</name>
        <param>
          <type>U</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Borrows a value from the pool and initializes it with the specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" line="24" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1a8c878b65752ab526f8f6d011d8ea2608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Disposable&lt; T &gt;</type>
        <definition>Disposable&lt;T&gt; Smooth.Pools.PoolWithInitializer&lt; T, U &gt;.BorrowDisposable</definition>
        <argsstring>(U u)</argsstring>
        <name>BorrowDisposable</name>
        <param>
          <type>U</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Borrows a wrapped value from from the pool and initializes it with the specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" line="33" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1afe5629b4b15e3689e03d06922e2402b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Pools.PoolWithInitializer&lt; T, U &gt;.PoolWithInitializer</definition>
        <argsstring>(DelegateFunc&lt; T &gt; create, DelegateAction&lt; T &gt; reset, DelegateAction&lt; T, U &gt; initialize)</argsstring>
        <name>PoolWithInitializer</name>
        <param>
          <type>DelegateFunc&lt; T &gt;</type>
          <declname>create</declname>
        </param>
        <param>
          <type>DelegateAction&lt; T &gt;</type>
          <declname>reset</declname>
        </param>
        <param>
          <type>DelegateAction&lt; T, U &gt;</type>
          <declname>initialize</declname>
        </param>
        <briefdescription>
<para>Creates a new pool with the specified creation, reset, and initialization delegates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" line="17" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pool that lends values of type T with an optional initializer that takes a value of type U. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="115628">
        <label>Smooth.Pools.PoolWithInitializer&lt; T, U &gt;</label>
        <link refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4"/>
        <childnode refid="115629" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115629">
        <label>Pool&lt; T &gt;</label>
        <link refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="115630">
        <label>Smooth.Pools.PoolWithInitializer&lt; T, U &gt;</label>
        <link refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4"/>
        <childnode refid="115631" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115631">
        <label>Pool&lt; T &gt;</label>
        <link refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4"/>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Pools/PoolWithInitializer.cs" bodystart="11" bodyend="38"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1acd0beefe2aa2e22455ee3f0222b4c270" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Allocated</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1a575e4fcae34fe09085a79e38f0a7c64b" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Borrow</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1a27e1c13e1e47614ee26992bc67566e0e" prot="public" virt="non-virtual" ambiguityscope="Smooth::Pools::Pool&lt; T &gt;."><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Borrow</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1a8c878b65752ab526f8f6d011d8ea2608" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>BorrowDisposable</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1adb3e74d6f18a5a24881a5f6754e62ff1" prot="public" virt="non-virtual" ambiguityscope="Smooth::Pools::Pool&lt; T &gt;."><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>BorrowDisposable</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1ade125692b581519dc90402d7d0dcfce6" prot="private" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>initialize</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1a2a6ebcf8c120093135ec797de7c576ec" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Pool</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_with_initializer_3_01_t_00_01_u_01_4_1afe5629b4b15e3689e03d06922e2402b4" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>PoolWithInitializer</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1a69dd05ecc715d7183d52fea9d7b59388" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Release</name></member>
      <member refid="class_smooth_1_1_pools_1_1_pool_3_01_t_01_4_1a1e1f418eba8d4d60d41d1a9030b288e2" prot="public" virt="non-virtual"><scope>Smooth::Pools::PoolWithInitializer&lt; T, U &gt;</scope><name>Size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
