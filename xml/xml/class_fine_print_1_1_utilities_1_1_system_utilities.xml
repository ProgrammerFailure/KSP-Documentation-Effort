<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_fine_print_1_1_utilities_1_1_system_utilities" kind="class" prot="public">
    <compoundname>FinePrint::Utilities::SystemUtilities</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a948a6e9dd95239390b8cf9d3008685ae" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FinePrint.Utilities.SystemUtilities.frameSuccessDelay</definition>
        <argsstring></argsstring>
        <name>frameSuccessDelay</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="17" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1aa8b67aaaf3ec2f83edd3db9b333713fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.CheckTouristRecoveryContractKerbals</definition>
        <argsstring>(string kerbalName)</argsstring>
        <name>CheckTouristRecoveryContractKerbals</name>
        <param>
          <type>string</type>
          <declname>kerbalName</declname>
        </param>
        <briefdescription>
<para>Scans All tourist contracts and recovery contracts for a matching <ref refid="class_kerbal" kindref="compound">Kerbal</ref> Name. Returns True if a match is found, otherwise false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kerbalName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to scan for. Best result is to pass in the first name only.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a match is found, otherwise false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="828" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="828" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ada0d00e347f0f6948b0f27bdd3c948c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.CoinFlip</definition>
        <argsstring>(System.Random generator=null)</argsstring>
        <name>CoinFlip</name>
        <param>
          <type><ref refid="_waypoint_manager_8cs_1a24953b19d956caa76c403684c71b4e5b" kindref="member">System.Random</ref></type>
          <declname>generator</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Returns a random true/false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generator</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional random generator to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Random boolean.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="353" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="353" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a92e22f60264689c1f82609af00756d98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.CondenseNodeList</definition>
        <argsstring>(ConfigNode node, string valueName, string listName)</argsstring>
        <name>CondenseNodeList</name>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>string</type>
          <declname>valueName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>listName</declname>
        </param>
        <briefdescription>
<para>Takes multiple separate values in a <ref refid="class_config_node" kindref="compound">ConfigNode</ref> and condenses them into a single delimited node list value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to check.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the values to find and condense.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the delimited list to save to the node.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="285" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="285" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1afd1eea0118d0c37dacd3ea696b125ff2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.ExpungeKerbal</definition>
        <argsstring>(ProtoCrewMember pcm)</argsstring>
        <name>ExpungeKerbal</name>
        <param>
          <type><ref refid="class_proto_crew_member" kindref="compound">ProtoCrewMember</ref></type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
<para>Completely erases a kerbal from existence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_proto_crew_member" kindref="compound">ProtoCrewMember</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Somewhat nuclear kerbal annihilation process.</para><para>&lt; Do not check GetVesselCrew, it basically does the same thing as below. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="568" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="568" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a186312d87961109a708fad8ffc171831" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.ExpungeVessel</definition>
        <argsstring>(Vessel v)</argsstring>
        <name>ExpungeVessel</name>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Completely erases a vessel from existence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The vessel.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="632" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="632" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1afb29eb9759724194885d5b07d6f739d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.FlightIsReady</definition>
        <argsstring>(bool checkVessel=false, CelestialBody targetBody=null)</argsstring>
        <name>FlightIsReady</name>
        <param>
          <type>bool</type>
          <declname>checkVessel</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>targetBody</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Performs all the necessary checks to make sure the flight scene is ready to go, and some optional ones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checkVessel</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional: Check if vessel is null.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional: Make sure vessel is at a celestial body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the scene is ready to go.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="319" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="319" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1abf7a267137dc0aecc41a9c02c06ec541" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.FlightIsReady</definition>
        <argsstring>(Contract.State currentState, Contract.State targetState, bool checkVessel=false, CelestialBody targetBody=null)</argsstring>
        <name>FlightIsReady</name>
        <param>
          <type><ref refid="class_contracts_1_1_contract_1a895f44634a7cddb75240a69771958a91" kindref="member">Contract.State</ref></type>
          <declname>currentState</declname>
        </param>
        <param>
          <type><ref refid="class_contracts_1_1_contract_1a895f44634a7cddb75240a69771958a91" kindref="member">Contract.State</ref></type>
          <declname>targetState</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkVessel</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>targetBody</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Performs all the necessary checks to make sure the flight scene is ready to go, and some optional ones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentState</parametername>
</parameternamelist>
<parameterdescription>
<para>Current contract state.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetState</parametername>
</parameternamelist>
<parameterdescription>
<para>Contract state that must be matched.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkVessel</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional: Check if vessel is null.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetBody</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional: Make sure vessel is at a celestial body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the scene is ready to go.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="337" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="337" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ae038b7a7e4511ca9bc9143f4d9ff7fd3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>static uint FinePrint.Utilities.SystemUtilities.HashNumber</definition>
        <argsstring>(uint x)</argsstring>
        <name>HashNumber</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Hashes an unsigned integer into another, unrelated unsigned integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The unsigned integer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Another unsigned integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="375" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="375" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a2af294c0357716c7ce7906f96da423aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.LoadNode&lt; T &gt;</definition>
        <argsstring>(ConfigNode node, string className, string valueName, ref T value, T defaultValue, bool logging=true)</argsstring>
        <name>LoadNode&lt; T &gt;</name>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>string</type>
          <declname>className</declname>
        </param>
        <param>
          <type>string</type>
          <declname>valueName</declname>
        </param>
        <param>
          <type>ref T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logging</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Loads a <ref refid="class_config_node" kindref="compound">ConfigNode</ref> value, handles logging and recovery if loading fails. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the final variable.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to load from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the calling class for logs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the value in the <ref refid="class_config_node" kindref="compound">ConfigNode</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to dump into if successful.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value to recover with if unsuccessful.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logging</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional flag to temporarily disable logging.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="177" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="177" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a6dbf8a89fab9f0bd7e8509d665fc249b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.LoadNodeList&lt; T &gt;</definition>
        <argsstring>(ConfigNode node, string className, string valueName, ref List&lt; T &gt; list)</argsstring>
        <name>LoadNodeList&lt; T &gt;</name>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>string</type>
          <declname>className</declname>
        </param>
        <param>
          <type>string</type>
          <declname>valueName</declname>
        </param>
        <param>
          <type>ref List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Loads a list of objects stored in a single <ref refid="class_config_node" kindref="compound">ConfigNode</ref> value as a delimited string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the list.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to load from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the calling class for logs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the delimited string in the <ref refid="class_config_node" kindref="compound">ConfigNode</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List to dump into if successful.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; We don&apos;t save empty lists at all to prevent save pollution, so loading can fail quite frequently. We disable logs here for this reason. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="254" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a94787f205ca1331de9891307ece8ae19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.LoadNodePair&lt; T1, T2 &gt;</definition>
        <argsstring>(ConfigNode node, string className, string valueName, ref KeyValuePair&lt; T1, T2 &gt; pair)</argsstring>
        <name>LoadNodePair&lt; T1, T2 &gt;</name>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>string</type>
          <declname>className</declname>
        </param>
        <param>
          <type>string</type>
          <declname>valueName</declname>
        </param>
        <param>
          <type>ref KeyValuePair&lt; T1, T2 &gt;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>Loads a pair of objects stored in a single <ref refid="class_config_node" kindref="compound">ConfigNode</ref> value as a delimited string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T1</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the key in the pair.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T2</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value in the pair.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to load from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the calling class for logs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the delimited string in the <ref refid="class_config_node" kindref="compound">ConfigNode</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pair</parametername>
</parameternamelist>
<parameterdescription>
<para>KeyValuePair to dump into if successful.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; We don&apos;t save empty pairs at all to prevent save pollution, so loading can fail quite frequently. We disable logs here for this reason. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="304" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="304" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ab67d1c0ff772084a33a36880cfcd4b2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Texture2D</type>
        <definition>static Texture2D FinePrint.Utilities.SystemUtilities.LoadTexture</definition>
        <argsstring>(string textureName)</argsstring>
        <name>LoadTexture</name>
        <param>
          <type>string</type>
          <declname>textureName</declname>
        </param>
        <briefdescription>
<para>Simplifies the action of loading a texture. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>textureName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the texture.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Unity texture.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="24" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="24" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a6214502ad564f01aace6d783778cdadf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.SystemUtilities.MeasureDeviation</definition>
        <argsstring>(double v1, double v2)</argsstring>
        <name>MeasureDeviation</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Meaures the deviation between two values relative to each other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fraction representing the deviation between the two values.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="680" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ac58778f47f739fb907003b91802a9827" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.SystemUtilities.MeasureDeviationByValue</definition>
        <argsstring>(double v1, double v2, double fullValue)</argsstring>
        <name>MeasureDeviationByValue</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fullValue</declname>
        </param>
        <briefdescription>
<para>Meaures the deviation between two values relative to a reference value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fullValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that equals 100% deviation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fraction representing the deviation between the two values.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="692" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a2b2b57ceb45b050a0b73757e3e5bf217" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.ProcessSideRequests</definition>
        <argsstring>(Contract contract, ConfigNode contractNode, CelestialBody targetBody, string vesselName, ref float fundsMultiplier, ref float scienceMultiplier, ref float reputationMultiplier, Vessel vessel=null)</argsstring>
        <name>ProcessSideRequests</name>
        <param>
          <type><ref refid="class_contracts_1_1_contract" kindref="compound">Contract</ref></type>
          <declname>contract</declname>
        </param>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>contractNode</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>targetBody</declname>
        </param>
        <param>
          <type>string</type>
          <declname>vesselName</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>fundsMultiplier</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>scienceMultiplier</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>reputationMultiplier</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>vessel</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Adds request parameters to a contract. Affects several contracts and parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contract</parametername>
</parameternamelist>
<parameterdescription>
<para>The contract.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contractNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The contract template configuration node.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetBody</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body of the contract.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vesselName</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel type description string.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fundsMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to running funds multiplier.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scienceMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to running science multiplier.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reputationMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to running reputation multiplier.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vessel</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional vessel to pass to the part request for contextuals.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Crew requests take a bit more digging.</para><para>&lt; Crew interest will be based off of an even split of each trait for half the vessel, plus any specialized parts. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="406" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="406" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1af2823e38a5aca645954999b1e90d17ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Color</type>
        <definition>static Color FinePrint.Utilities.SystemUtilities.RandomColor</definition>
        <argsstring>(int seed=0, float alpha=1.0f, float saturation=1.0f, float brightness=0.5f)</argsstring>
        <name>RandomColor</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>saturation</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>brightness</declname>
          <defval>0.5f</defval>
        </param>
        <briefdescription>
<para>Generates a randomized HSV color. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>The random seed to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha of the color.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>saturation</parametername>
</parameternamelist>
<parameterdescription>
<para>The saturation of the color.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>brightness</parametername>
</parameternamelist>
<parameterdescription>
<para>The brightness of the color.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A usable Unity Color.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="48" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a20d99d67dde46bfadf28b11793add4db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T FinePrint.Utilities.SystemUtilities.RandomSplitChoice&lt; T &gt;</definition>
        <argsstring>(List&lt; List&lt; T &gt;&gt; listOfLists, System.Random generator=null)</argsstring>
        <name>RandomSplitChoice&lt; T &gt;</name>
        <param>
          <type>List&lt; List&lt; T &gt;&gt;</type>
          <declname>listOfLists</declname>
        </param>
        <param>
          <type><ref refid="_waypoint_manager_8cs_1a24953b19d956caa76c403684c71b4e5b" kindref="member">System.Random</ref></type>
          <declname>generator</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Chooses a value randomly from several list references without combining them into a larger one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listOfLists</parametername>
</parameternamelist>
<parameterdescription>
<para>An List of Lists to choose from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generator</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional random generator to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; First we want the total count of all the lists, that will be used for a weighted choice. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="774" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="774" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a9e61bae024073ce66d170989e45379b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.SaveNodeList&lt; T &gt;</definition>
        <argsstring>(ConfigNode node, string listName, List&lt; T &gt; list)</argsstring>
        <name>SaveNodeList&lt; T &gt;</name>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>string</type>
          <declname>listName</declname>
        </param>
        <param>
          <type>List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Saves a list of objects in a single <ref refid="class_config_node" kindref="compound">ConfigNode</ref> value as a delimited string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the list.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to save to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the delimited string in the <ref refid="class_config_node" kindref="compound">ConfigNode</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List to save.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="270" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="270" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a062ac88213c8381339686e40f0780279" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FinePrint.Utilities.SystemUtilities.ShuffleList&lt; T &gt;</definition>
        <argsstring>(ref List&lt; T &gt; list, System.Random generator=null)</argsstring>
        <name>ShuffleList&lt; T &gt;</name>
        <param>
          <type>ref List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="_waypoint_manager_8cs_1a24953b19d956caa76c403684c71b4e5b" kindref="member">System.Random</ref></type>
          <declname>generator</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Shuffles a list at random. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of list.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list reference.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generator</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional random generator to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="748" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="748" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a1160de09e378277a7027a590fd15ed29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.SystemUtilities.SuperSeed</definition>
        <argsstring>(Contract c)</argsstring>
        <name>SuperSeed</name>
        <param>
          <type><ref refid="class_contracts_1_1_contract" kindref="compound">Contract</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Creates an excessively unique and unpredictable seed for a contract. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The contract.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A very unique seed.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="388" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a31387f16bb5a8534d42a8e3944785a1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.TryConvert&lt; T &gt;</definition>
        <argsstring>(string input, out T value, ref string error)</argsstring>
        <name>TryConvert&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>input</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ref string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Attempts to convert a string into any given type or enumeration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the final variable.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input string.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to dump into if successful.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>Error to dump into if unsuccessful.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the conversion succeeds.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="66" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="66" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ad15ef73e75c15865d7fedb36a716c710" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_fine_print_1_1_utilities_1_1_pre_built_craft_definition" kindref="compound">PreBuiltCraftDefinition</ref></type>
        <definition>static PreBuiltCraftDefinition FinePrint.Utilities.SystemUtilities.ValidateLoadCraftNode</definition>
        <argsstring>(string url, string className, bool brokenParts)</argsstring>
        <name>ValidateLoadCraftNode</name>
        <param>
          <type>string</type>
          <declname>url</declname>
        </param>
        <param>
          <type>string</type>
          <declname>className</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brokenParts</declname>
        </param>
        <briefdescription>
<para>Will Validate/Load a Craft file located in the file at url in the filesystem. If the Craft is valid it will return a <ref refid="class_fine_print_1_1_utilities_1_1_pre_built_craft_definition" kindref="compound">PreBuiltCraftDefinition</ref> pre-populated. If the Craft is invalid or fails to load will return Null. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>The url for the craft file.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the calling class for logs.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="121" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a7b6fae9b425f3402d407e253c780364b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_fine_print_1_1_utilities_1_1_pre_built_craft_definition" kindref="compound">PreBuiltCraftDefinition</ref></type>
        <definition>static PreBuiltCraftDefinition FinePrint.Utilities.SystemUtilities.ValidateLoadCraftNode</definition>
        <argsstring>(string url, string className, bool brokenParts, bool bypassTechCheck)</argsstring>
        <name>ValidateLoadCraftNode</name>
        <param>
          <type>string</type>
          <declname>url</declname>
        </param>
        <param>
          <type>string</type>
          <declname>className</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brokenParts</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bypassTechCheck</declname>
        </param>
        <briefdescription>
<para>Will Validate/Load a Craft file located in the file at url in the filesystem. If the Craft is valid it will return a <ref refid="class_fine_print_1_1_utilities_1_1_pre_built_craft_definition" kindref="compound">PreBuiltCraftDefinition</ref> pre-populated. If the Craft is invalid or fails to load will return Null. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>The url for the craft file.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>className</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the calling class for logs.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="134" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="134" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a7e9e2ba483edca7ef460163e9efe79ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.WithinDeviation</definition>
        <argsstring>(double v1, double v2, double deviation)</argsstring>
        <name>WithinDeviation</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviation</declname>
        </param>
        <briefdescription>
<para>Checks if two values are within a certain percentage of each other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The deviation percentage (0-&gt;100).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the values are within that percentage of each other.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="654" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="654" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ac989e578eff6b781e4bb8a5208af3761" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.SystemUtilities.WithinDeviationAccuracy</definition>
        <argsstring>(double v1, double v2, double deviation)</argsstring>
        <name>WithinDeviationAccuracy</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviation</declname>
        </param>
        <briefdescription>
<para>Get the accuracy value of two values within a certain percentage of each other. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The deviation percentage.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The accuracy percentage.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="718" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="718" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ad64ee8c3428c01f8493417324925a6f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.SystemUtilities.WithinDeviationByReferenceAccuracy</definition>
        <argsstring>(double v1, double v2, double reference, double deviation)</argsstring>
        <name>WithinDeviationByReferenceAccuracy</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviation</declname>
        </param>
        <briefdescription>
<para>Gets the accuracy value of two values within a certain percentage of each other based on a reference value </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>The difference that equates to 100%</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The deviation percentage.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The accuracy percentage.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="734" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="734" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1a6a011d4e2824e826cbebd5cb332adadb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.SystemUtilities.WithinDeviationByValue</definition>
        <argsstring>(double v1, double v2, double deviation, double fullValue)</argsstring>
        <name>WithinDeviationByValue</name>
        <param>
          <type>double</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>deviation</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fullValue</declname>
        </param>
        <briefdescription>
<para>Checks if two values are within a certain percentage of the reference value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second value.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The deviation percentage (0-&gt;100).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fullValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that equals 100% deviation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the values are within that percentage of each other.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="668" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="668" bodyend="672"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_system_utilities_1ac5fbc3b229301537b18cc7651ce7aea7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.SystemUtilities.GetDeviationAsFraction</definition>
        <argsstring>(double deviation)</argsstring>
        <name>GetDeviationAsFraction</name>
        <param>
          <type>double</type>
          <declname>deviation</declname>
        </param>
        <briefdescription>
<para>Convert a percentage for deviation measurement to a fraction </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deviation</parametername>
</parameternamelist>
<parameterdescription>
<para>The deviation percentage (0-&gt;100).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Clamp fraction in 0-&gt;1 range</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="702" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="702" bodyend="708"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" line="16" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/SystemUtilities.cs" bodystart="15" bodyend="855"/>
    <listofallmembers>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1aa8b67aaaf3ec2f83edd3db9b333713fa" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>CheckTouristRecoveryContractKerbals</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ada0d00e347f0f6948b0f27bdd3c948c8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>CoinFlip</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a92e22f60264689c1f82609af00756d98" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>CondenseNodeList</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1afd1eea0118d0c37dacd3ea696b125ff2" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ExpungeKerbal</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a186312d87961109a708fad8ffc171831" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ExpungeVessel</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1afb29eb9759724194885d5b07d6f739d9" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>FlightIsReady</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1abf7a267137dc0aecc41a9c02c06ec541" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>FlightIsReady</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a948a6e9dd95239390b8cf9d3008685ae" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>frameSuccessDelay</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ac5fbc3b229301537b18cc7651ce7aea7" prot="private" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>GetDeviationAsFraction</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ae038b7a7e4511ca9bc9143f4d9ff7fd3" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>HashNumber</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a2af294c0357716c7ce7906f96da423aa" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>LoadNode&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a6dbf8a89fab9f0bd7e8509d665fc249b" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>LoadNodeList&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a94787f205ca1331de9891307ece8ae19" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>LoadNodePair&lt; T1, T2 &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ab67d1c0ff772084a33a36880cfcd4b2b" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>LoadTexture</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a6214502ad564f01aace6d783778cdadf" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>MeasureDeviation</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ac58778f47f739fb907003b91802a9827" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>MeasureDeviationByValue</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a2b2b57ceb45b050a0b73757e3e5bf217" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ProcessSideRequests</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1af2823e38a5aca645954999b1e90d17ed" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>RandomColor</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a20d99d67dde46bfadf28b11793add4db" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>RandomSplitChoice&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a9e61bae024073ce66d170989e45379b5" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>SaveNodeList&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a062ac88213c8381339686e40f0780279" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ShuffleList&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a1160de09e378277a7027a590fd15ed29" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>SuperSeed</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a31387f16bb5a8534d42a8e3944785a1c" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>TryConvert&lt; T &gt;</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ad15ef73e75c15865d7fedb36a716c710" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ValidateLoadCraftNode</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a7b6fae9b425f3402d407e253c780364b" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>ValidateLoadCraftNode</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a7e9e2ba483edca7ef460163e9efe79ba" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>WithinDeviation</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ac989e578eff6b781e4bb8a5208af3761" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>WithinDeviationAccuracy</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1ad64ee8c3428c01f8493417324925a6f5" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>WithinDeviationByReferenceAccuracy</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_system_utilities_1a6a011d4e2824e826cbebd5cb332adadb" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::SystemUtilities</scope><name>WithinDeviationByValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
