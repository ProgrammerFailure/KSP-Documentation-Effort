<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_lingoona_1_1_native_methods" kind="class" prot="public">
    <compoundname>Lingoona::NativeMethods</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1adaae69615d429ec3da3d4bece67290aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.NativeMethods.clearVariable</definition>
        <argsstring>([MarshalAs(UnmanagedType.LPWStr)] string name)</argsstring>
        <name>clearVariable</name>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Deletes a named variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Must consist of alphanumerical characters only and start with a letter.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1abf0736b0852c3dca5ed8c5dd150e3fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.NativeMethods.clearVariables</definition>
        <argsstring>()</argsstring>
        <name>clearVariables</name>
        <briefdescription>
<para>Deletes all named variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a545da1b88f6391947969d44e981a8101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.NativeMethods.generateName</definition>
        <argsstring>([MarshalAs(UnmanagedType.LPWStr)] string noun, int length, [MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.LPWStr)] string[] components, int ccount)</argsstring>
        <name>generateName</name>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>noun</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.LPWStr)]</attributes>
          <type>string[]</type>
          <declname>components</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ccount</declname>
        </param>
        <briefdescription>
<para>Composes a new name from a given noun and an individual amount of additional suffixes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noun</parametername>
</parameternamelist>
<parameterdescription>
<para>The tagged noun to be used, e.g. &quot;sword^n&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters to be passed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>components</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual suffixes, each individual one might be tagged to describe the actual use, e.g. &quot;strong^a&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ccount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters passed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The finalized, generated name, including gender tags.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a3d740ba6d0f67886546a58a1e86ac258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.NativeMethods.getLanguage</definition>
        <argsstring>()</argsstring>
        <name>getLanguage</name>
        <briefdescription>
<para>Retrieve the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library&apos;s current language code. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A 2 character language code, e.g. &quot;en&quot;, &quot;de&quot;, or &quot;fr&quot;.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a07b2fcb537d28114dc6e6c1131f9fe52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.NativeMethods.initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
<para>Initialize the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by the wrapper and shouldn&apos;t be called manually.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a514883cfa9804e04f320cb1051bf4ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Lingoona.NativeMethods.isAvailable</definition>
        <argsstring>()</argsstring>
        <name>isAvailable</name>
        <briefdescription>
<para>Reports whether the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library is available. </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by the wrapper and shouldn&apos;t be called manually.</para><para><simplesect kind="return"><para>True, if available, false otherwise.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a38477b1cf311a7e5274e0df45be47c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.NativeMethods.setLanguage</definition>
        <argsstring>([MarshalAs(UnmanagedType.LPWStr)] string language)</argsstring>
        <name>setLanguage</name>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>language</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library&apos;s language to be used. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2 character language code, e.g. &quot;en&quot;, &quot;de&quot;, or &quot;fr&quot;.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para>The available languages depend on your license agreement. Invalid values will fall back to English (&quot;en&quot;).</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a4abfcea0679e5c9b3f31993ebcffa9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.NativeMethods.setVariable</definition>
        <argsstring>([MarshalAs(UnmanagedType.LPWStr)] string name, [MarshalAs(UnmanagedType.LPWStr)] string value)</argsstring>
        <name>setVariable</name>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a named variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Must consist of alphanumerical characters only and start with a letter.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the variable.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_native_methods_1a4f330dd7d99e6fc00ced0c1925ecbb19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.NativeMethods.useGrammar</definition>
        <argsstring>([MarshalAs(UnmanagedType.LPWStr)] string template, int length, [MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.LPWStr)] string[] parameters, int pcount)</argsstring>
        <name>useGrammar</name>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPWStr)]</attributes>
          <type>string</type>
          <declname>template</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <attributes>[MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.LPWStr)]</attributes>
          <type>string[]</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcount</declname>
        </param>
        <briefdescription>
<para>Parses a string using the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library and returns the finalized text. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>template</parametername>
</parameternamelist>
<parameterdescription>
<para>The template string to be parsed, e.g. &quot;Greetings, &lt;&lt;1&gt;&gt;!&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters to be passed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual parameters, each individual onemight be tagged based on their gender, e.g. &quot;dog^n&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of parameters passed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The finalized, generated string.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" line="6" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/NativeMethods.cs" bodystart="5" bodyend="87"/>
    <listofallmembers>
      <member refid="class_lingoona_1_1_native_methods_1adaae69615d429ec3da3d4bece67290aa" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>clearVariable</name></member>
      <member refid="class_lingoona_1_1_native_methods_1abf0736b0852c3dca5ed8c5dd150e3fce" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>clearVariables</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a545da1b88f6391947969d44e981a8101" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>generateName</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a3d740ba6d0f67886546a58a1e86ac258" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>getLanguage</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a07b2fcb537d28114dc6e6c1131f9fe52" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>initialize</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a514883cfa9804e04f320cb1051bf4ff4" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>isAvailable</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a38477b1cf311a7e5274e0df45be47c61" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>setLanguage</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a4abfcea0679e5c9b3f31993ebcffa9cf" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>setVariable</name></member>
      <member refid="class_lingoona_1_1_native_methods_1a4f330dd7d99e6fc00ced0c1925ecbb19" prot="public" virt="non-virtual"><scope>Lingoona::NativeMethods</scope><name>useGrammar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
