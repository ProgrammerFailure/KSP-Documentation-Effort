<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_v_p_wheel_collider_8cs" kind="file">
    <compoundname>VPWheelCollider.cs</compoundname>
    <innerclass refid="class_vehicle_physics_1_1_v_p_wheel_collider" prot="public">VehiclePhysics::VPWheelCollider</innerclass>
    <innernamespace refid="namespace_vehicle_physics">VehiclePhysics</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_v_p_wheel_collider_8cs_1a71a2d13090d106f8022bee705a36032d" prot="public" static="no">
        <name>VPP_SUPPORTS_NEGATIVE_FORCEAPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Packages/VehiclePhysicsPro/Core/Vehicle Physics core/Components/VPWheelCollider.cs" line="23" column="9" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Packages/VehiclePhysicsPro/Core/Vehicle Physics core/Components/VPWheelCollider.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Vehicle<sp/>Physics<sp/>Pro:<sp/>advanced<sp/>vehicle<sp/>physics<sp/>kit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>Â©<sp/>2011-2019<sp/>Angel<sp/>Garcia<sp/>&quot;Edy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://vehiclephysics.com<sp/>|<sp/>@VehiclePhysics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VPWheelCollider:<sp/>implements<sp/>the<sp/>wheel<sp/>colling<sp/>entity<sp/>in<sp/>Unity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Features:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Suspension,<sp/>steering,<sp/>physical<sp/>contact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Suspension<sp/>analysis<sp/>at<sp/>the<sp/>Inspector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Comprehensive<sp/>wheel<sp/>gizmo<sp/>at<sp/>the<sp/>Scene<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>Visual<sp/>meshes<sp/>for<sp/>wheel,<sp/>brake<sp/>caliper<sp/>and<sp/>suspension<sp/>geometry.<sp/>They<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>supported<sp/>in<sp/>any<sp/>hierarchy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!UNITY_5<sp/>&amp;&amp;<sp/>!UNITY_5_3_OR_NEWER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Vehicle<sp/>Physics<sp/>Pro<sp/>requires<sp/>Unity<sp/>5<sp/>or<sp/>newer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Negative<sp/>forceAppPointDistance<sp/>is<sp/>supported<sp/>on<sp/>Unity<sp/>5.2+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(UNITY_5_0<sp/>||<sp/>UNITY_5_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VPP_SUPPORTS_NEGATIVE_FORCEAPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>VPP_DEBUG_LABELS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.ComponentModel;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>EdyCommonTools;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">VehiclePhysics</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">[DisallowMultipleComponent]</highlight></codeline>
<codeline lineno="37"><highlight class="normal">[AddComponentMenu(</highlight><highlight class="stringliteral">&quot;Vehicle<sp/>Physics/Wheel<sp/>Collider&quot;</highlight><highlight class="normal">,<sp/>-20)]</highlight></codeline>
<codeline lineno="38" refid="class_vehicle_physics_1_1_v_p_wheel_collider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider" kindref="compound">VPWheelCollider</ref><sp/>:<sp/><ref refid="class_vehicle_physics_1_1_vehicle_behaviour" kindref="compound">VehicleBehaviour</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad4e6bac1b4fdabcdb8da24d0273d8c98" kindref="member">mass</ref><sp/>=<sp/>20.0f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref><sp/>=<sp/>0.3f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a78b620a75378424c0406c1fa8e441871" kindref="member">center</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0.01f,<sp/>2.0f)]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>=<sp/>0.25f;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suspensionAnchor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>relative<sp/>point<sp/>in<sp/>the<sp/>suspension<sp/>travel<sp/>where<sp/>the<sp/>wheel<sp/>is<sp/>located<sp/>at<sp/>design<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,1)]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref><sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80deea689f588119f7ee1e131f3d3d46" kindref="member">springRate</ref><sp/>=<sp/>30000.0f;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a7eb922209d5620e81e59ed1396dd6b2f" kindref="member">damperRate</ref><sp/>=<sp/>1500.0f;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0.0f,<sp/>0.2f)]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a0e9839041ec74198499c356b297d7fa6" kindref="member">groundPenetration</ref><sp/>=<sp/>0.02f;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9434fdef5a9ed3a3b14a5cf22cbccde1" kindref="member">disableSuspensionMovement</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae1b772b9d3aafdde4502c7daa7ab16a7" kindref="member">hideWheelOnDisable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hidden<sp/>flag.<sp/>This<sp/>wheel<sp/>wouldn&apos;t<sp/>show<sp/>up<sp/>in<sp/>the<sp/>Telemetry<sp/>and<sp/>other<sp/>runtime<sp/>inspectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6ce52859a2486ee26a4a3256a98ef412" kindref="member">hidden</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steer<sp/>angle<sp/>fix<sp/>override.<sp/>May<sp/>be<sp/>disabled<sp/>when<sp/>the<sp/>forward<sp/>directions<sp/>of<sp/>all<sp/>wheels<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>in<sp/>the<sp/>same<sp/>direction<sp/>as<sp/>the<sp/>Rigidbody.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1abe344b85f883469dfe2aa09443d76661" kindref="member">disableSteerAngleFix</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wheel<sp/>frame<sp/>fix<sp/>override.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixes<sp/>wrong<sp/>calculation<sp/>for<sp/>WheelHit.forwardDir<sp/>and<sp/>WheelHit.sidewaysDir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a8c8962b742d9f03cbec2714b5bbdde63" kindref="member">disableWheelReferenceFrameFix</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>allowed<sp/>suspension<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref><sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Experimental<sp/>scale<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80ab53323be8e9d3b7e1453972df2824" kindref="member">scaleFactor</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rmarcoux<sp/>-<sp/>KSP<sp/>still<sp/>wants<sp/>to<sp/>use<sp/>the<sp/>custom<sp/>layerMasks<sp/>because<sp/>of<sp/>wheels<sp/>issues<sp/>regarding<sp/>Kerbins<sp/>getting<sp/>stuck<sp/>in<sp/>suspension<sp/>and<sp/>likewise<sp/>behaviors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a51d51256405c90b161b26295e5422e7c" kindref="member">layerMask</ref><sp/>=<sp/>~0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a2016e316f125dd010176d6a026209930" kindref="member">updateSuspension</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ab646143be70104671a763ed371683c52" kindref="member">updateCaliper</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a01e16662b3ce5ab6df790a61f18d2704" kindref="member">updateWheel</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1b9f5ef204924734c9a6dd989300ff5c" kindref="member">suspensionOffset</ref><sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Transform<sp/>m_transform;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Rigidbody<sp/>m_rigidbody;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Transform<sp/>m_rigidbodyTransform;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>RaycastHit<sp/>m_visualHit;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_edy_common_tools_1_1_collider_utility_1_1_layer_collision_matrix" kindref="compound">ColliderUtility.LayerCollisionMatrix</ref><sp/>m_collisionMatrix;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>implementation<sp/>uses<sp/>Unity&apos;s<sp/>WheelCollider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>WheelCollider<sp/>m_wheelCollider;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_steerAngle<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_angularPosition<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_contactDistance<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>m_suspensionPosition<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_edy_common_tools_1_1_interpolated_float" kindref="compound">InterpolatedFloat</ref><sp/>m_visualSteerAngle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_edy_common_tools_1_1_interpolated_float" kindref="compound">InterpolatedFloat</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isCaliperChildOfSuspension<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isWheelChildOfSuspension<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isWheelChildOfCaliper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_2PI<sp/>=<sp/>Mathf.PI<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameter<sp/>validation<sp/>(called<sp/>from<sp/>the<sp/>Editor<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnValidate<sp/>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref><sp/>&lt;<sp/>0.01f)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref><sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad4e6bac1b4fdabcdb8da24d0273d8c98" kindref="member">mass</ref><sp/>&lt;<sp/>0.1f)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad4e6bac1b4fdabcdb8da24d0273d8c98" kindref="member">mass</ref><sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>&lt;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80deea689f588119f7ee1e131f3d3d46" kindref="member">springRate</ref><sp/>&lt;<sp/>1.0f)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80deea689f588119f7ee1e131f3d3d46" kindref="member">springRate</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a7eb922209d5620e81e59ed1396dd6b2f" kindref="member">damperRate</ref><sp/>&lt;<sp/>0.0f)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a7eb922209d5620e81e59ed1396dd6b2f" kindref="member">damperRate</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref><sp/>=<sp/>Mathf.Clamp01(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Public<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>to<sp/>cachedTransform<sp/>is<sp/>allowed<sp/>before<sp/>OnEnable<sp/>is<sp/>invoked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a51f90d6e50833fe1cf96e9a9381877af" kindref="member">cachedTransform</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_transform<sp/>!=<sp/>null?<sp/>m_transform<sp/>:<sp/>transform;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Visual<sp/>contact<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updated<sp/>at<sp/>Update<sp/>rate<sp/>while<sp/>the<sp/>vehicle<sp/>and<sp/>the<sp/>wheel<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>[DefaultValue(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a74fb2f684b03aa5002bc9578d0669700" kindref="member">visualGrounded</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RaycastHit<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1644b67b21258d21eead9af577f78129" kindref="member">visualHit</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_visualHit;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steer<sp/>angle<sp/>relative<sp/>to<sp/>the<sp/>wheel&apos;s<sp/>forward<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad236a329c743f8b79b73d6aed78edf8e" kindref="member">steerAngle</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_steerAngle;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isActiveAndEnabled)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.steerAngle<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1abe344b85f883469dfe2aa09443d76661" kindref="member">disableSteerAngleFix</ref>?<sp/>value<sp/>:<sp/>FixSteerAngle(value);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_steerAngle<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Angular<sp/>velocity<sp/>and<sp/>position<sp/>of<sp/>the<sp/>visual<sp/>wheel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a23922a5479bf1cbb7fe8ea4ca286259d" kindref="member">angularVelocity</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a8ebbbe09b88d8022c128914ee026541d" kindref="member">angularPosition</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_angularPosition;<sp/>}<sp/>set<sp/>{<sp/>m_angularPosition<sp/>=<sp/>value;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>wheel<sp/>allowed<sp/>to<sp/>sleep?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1abe9ad0c054518405379d7df7543eedf3" kindref="member">canSleep</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>spring<sp/>rate<sp/>being<sp/>applied<sp/>at<sp/>the<sp/>WheelCollider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>for<sp/>physics<sp/>related<sp/>calculations<sp/>(i.e.<sp/>force<sp/>=<sp/>contact<sp/>depth<sp/>*<sp/>spring<sp/>rate).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae22a2bf376b29a0382945765a1c3c296" kindref="member">effectiveSpringRate</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wheelCollider.suspensionSpring.spring;<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>for<sp/>modifying<sp/>suspension<sp/>values<sp/>in<sp/>runtime<sp/>(non<sp/>LIMITED<sp/>editions<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>gets<sp/>reset<sp/>to<sp/>the<sp/>component&apos;s<sp/>default<sp/>before<sp/>each<sp/>physics<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>be<sp/>overwritten<sp/>or<sp/>amended<sp/>by<sp/>other<sp/>blocks<sp/>or<sp/>scripts<sp/>at<sp/>any<sp/>criteria.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>VehicleBehaviour<sp/>components<sp/>should<sp/>modify<sp/>these<sp/>values<sp/>at<sp/>UpdateVehicleSuspension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>It&apos;s<sp/>NOT<sp/>safe<sp/>reading<sp/>these<sp/>properties<sp/>from<sp/>OnEnableVehicle<sp/>/<sp/>OnEnableComponent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>other<sp/>component,<sp/>especially<sp/>when<sp/>relying<sp/>on<sp/>the<sp/>suspension<sp/>values<sp/>on<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(i.e.<sp/>as<sp/>VPDynamicSuspension<sp/>does).<sp/>Use<sp/>the<sp/>regular<sp/>public<sp/>fields<sp/>in<sp/>these<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9b9f6b9550ccd74eb6f172d638d6fb13" kindref="member">runtimeSpringRate</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48006e47ad17a54f576d11b350dfa0a7" kindref="member">runtimeDamperRate</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Latest<sp/>suspension<sp/>values<sp/>that<sp/>made<sp/>it<sp/>into<sp/>the<sp/>physics<sp/>WheelCollider.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>debug<sp/>/<sp/>performance<sp/>charts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae96a686ab9d04be12e54989f688c7346" kindref="member">lastRuntimeSpringRate</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a3d392f751c9a113aad3972f5b47f0871" kindref="member">lastRuntimeDamperRate</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extra<sp/>downforce<sp/>to<sp/>be<sp/>considered<sp/>when<sp/>computing<sp/>the<sp/>tire<sp/>force.<sp/>No<sp/>other<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>VehicleBase.<sp/>Restored<sp/>to<sp/>0<sp/>before<sp/>each<sp/>physics<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a88fa7f6bb68bbca155d3f29febddea3f" kindref="member">runtimeExtraDownforce</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Added<sp/>for<sp/>KSP<sp/>customization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//debugForces<sp/>is<sp/>editor<sp/>only<sp/>-<sp/>debugging<sp/>and<sp/>is<sp/>linked<sp/>to<sp/>the<sp/>debug<sp/>bool<sp/>in<sp/>ModuleWheelSuspension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debugForces<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Is<sp/>set<sp/>from<sp/>KSPWheelController<sp/>module<sp/>KSPField<sp/>of<sp/>the<sp/>same<sp/>name.<sp/>Will<sp/>be<sp/>set<sp/>when<sp/>the<sp/>VPWheelCollider<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>springSlerpRate<sp/>=<sp/>0.02f;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/><sp/>Added<sp/>for<sp/>KSP<sp/>customization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Event<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake<sp/>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>and<sp/>configure<sp/>the<sp/>WheelCollider<sp/>at<sp/>the<sp/>first<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>recreate<sp/>or<sp/>reconfigure<sp/>it<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>m_wheelCollider<sp/>reference<sp/>survives<sp/>enable/disable<sp/>and<sp/>hot<sp/>code<sp/>recompiling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider<sp/>=<sp/>SetupWheelCollider();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a991ca79ee6deb1b72e2e75c20ebe3697" kindref="member">OnEnableVehicle</ref><sp/>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_transform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>VPP_PRO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rigidbody<sp/>=<sp/>vehicle.cachedRigidbody;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_rigidbody<sp/>!=<sp/>m_wheelCollider.attachedRigidbody)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_vehicle_behaviour_1aeb5416ec4a7eb35c2718fd60daecdf13" kindref="member">DebugLogError</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>wheel<sp/>is<sp/>not<sp/>attached<sp/>to<sp/>the<sp/>vehicle&apos;s<sp/>rigidbody.<sp/>Multi-body<sp/>vehicles<sp/>are<sp/>not<sp/>supported<sp/>in<sp/>this<sp/>edition<sp/>of<sp/>Vehicle<sp/>Physics<sp/>Pro.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rigidbody<sp/>=<sp/>m_wheelCollider.attachedRigidbody;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rigidbodyTransform<sp/>=<sp/>m_rigidbody.transform;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_collisionMatrix<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_edy_common_tools_1_1_collider_utility_1_1_layer_collision_matrix" kindref="compound">ColliderUtility.LayerCollisionMatrix</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>vehicle<sp/>substeps.<sp/>Must<sp/>be<sp/>done<sp/>in<sp/>OnEnable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.ConfigureVehicleSubsteps(1000.0f,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>the<sp/>hierarchy<sp/>of<sp/>the<sp/>visual<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isCaliperChildOfSuspension<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>caliperTransform.IsChildOf(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isWheelChildOfSuspension<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>wheelTransform.IsChildOf(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_isWheelChildOfCaliper<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>wheelTransform.IsChildOf(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Startup<sp/>value<sp/>for<sp/>the<sp/>exposed<sp/>suspension<sp/>position<sp/>and<sp/>wheel<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_suspensionPosition<sp/>=<sp/>m_transform.position;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_angularPosition<sp/>=<sp/>wheelTransform.localEulerAngles.x;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_visualSteerAngle.Reset(m_steerAngle);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9b9f6b9550ccd74eb6f172d638d6fb13" kindref="member">runtimeSpringRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80deea689f588119f7ee1e131f3d3d46" kindref="member">springRate</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48006e47ad17a54f576d11b350dfa0a7" kindref="member">runtimeDamperRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a7eb922209d5620e81e59ed1396dd6b2f" kindref="member">damperRate</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a88fa7f6bb68bbca155d3f29febddea3f" kindref="member">runtimeExtraDownforce</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a89b05718881b3301488e1848d558ecec" kindref="member">OnDisableVehicle</ref><sp/>()</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>component<sp/>gets<sp/>disabled<sp/>while<sp/>vehicle<sp/>is<sp/>initializing<sp/>then<sp/>OnDisableVehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>be<sp/>called.<sp/>Disable<sp/>the<sp/>WheelCollider<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a026de45171e2c465d3e24b4bf668b44a" kindref="member">OnDisableComponent</ref><sp/>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aedb6ca2ab7e202eb11e4d90e5afcf4c4" kindref="member">GetUpdateOrder</ref><sp/>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>components<sp/>may<sp/>modify<sp/>the<sp/>suspension<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wheel<sp/>is<sp/>updated<sp/>after<sp/>all<sp/>them<sp/>for<sp/>getting<sp/>the<sp/>latest<sp/>values<sp/>and<sp/>pushing<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>current<sp/>physics<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>+100;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1abe972c0543241540e678c067e2180ab8" kindref="member">FixedUpdateVehicle</ref><sp/>()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateWheelCollider(m_wheelCollider);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>last<sp/>runtime<sp/>values<sp/>feed<sp/>to<sp/>the<sp/>physics<sp/>and<sp/>reset<sp/>the<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae96a686ab9d04be12e54989f688c7346" kindref="member">lastRuntimeSpringRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9b9f6b9550ccd74eb6f172d638d6fb13" kindref="member">runtimeSpringRate</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a3d392f751c9a113aad3972f5b47f0871" kindref="member">lastRuntimeDamperRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48006e47ad17a54f576d11b350dfa0a7" kindref="member">runtimeDamperRate</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9b9f6b9550ccd74eb6f172d638d6fb13" kindref="member">runtimeSpringRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80deea689f588119f7ee1e131f3d3d46" kindref="member">springRate</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48006e47ad17a54f576d11b350dfa0a7" kindref="member">runtimeDamperRate</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a7eb922209d5620e81e59ed1396dd6b2f" kindref="member">damperRate</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a88fa7f6bb68bbca155d3f29febddea3f" kindref="member">runtimeExtraDownforce</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>steer<sp/>angle<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_visualSteerAngle.Set(m_steerAngle);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Public<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>really<sp/>a<sp/>public<sp/>API<sp/>since<sp/>these<sp/>methods<sp/>are<sp/>called<sp/>from<sp/>VehicleBase<sp/>and<sp/>are<sp/>part<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>vehicle<sp/>dynamics<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>called<sp/>from<sp/>the<sp/>vehicle<sp/>explictly<sp/>for<sp/>the<sp/>collider&apos;s<sp/>raycast<sp/>vs.<sp/>interpolate<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>the<sp/>deltaTime<sp/>must<sp/>be<sp/>specified<sp/>(i.e.<sp/>for<sp/>replaying<sp/>step<sp/>by<sp/>step).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VehicleBehaviour.UpdateVehicle<sp/>does<sp/>not<sp/>apply<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae9c44718506832894e44f7fe5fbd7d6d" kindref="member">UpdateVisualWheel</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isActiveAndEnabled)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae1b772b9d3aafdde4502c7daa7ab16a7" kindref="member">hideWheelOnDisable</ref><sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref>.gameObject.activeInHierarchy)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelTransform.gameObject.SetActive(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ae1b772b9d3aafdde4502c7daa7ab16a7" kindref="member">hideWheelOnDisable</ref><sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>!<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref>.gameObject.activeInHierarchy)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelTransform.gameObject.SetActive(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>suspensionOrigin<sp/>=<sp/>m_transform.TransformPoint(m_wheelCollider.center)<sp/>+<sp/>m_transform.up<sp/>*<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>suspensionDirection<sp/>=<sp/>-m_transform.up;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>contact<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>layerMask<sp/>=<sp/>m_collisionMatrix.GetLayerCollisionMask(m_wheelCollider.gameObject.layer)<sp/>&amp;<sp/>~Physics.IgnoreRaycastLayer;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a74fb2f684b03aa5002bc9578d0669700" kindref="member">visualGrounded</ref><sp/>=<sp/>Physics.Raycast(suspensionOrigin,<sp/>suspensionDirection,<sp/>out<sp/>m_visualHit,<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref><sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>*2.0f,<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a51d51256405c90b161b26295e5422e7c" kindref="member">layerMask</ref>,<sp/>QueryTriggerInteraction.Ignore);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a74fb2f684b03aa5002bc9578d0669700" kindref="member">visualGrounded</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_contactDistance<sp/>=<sp/>Mathf.Clamp(m_visualHit.distance<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>*2.0f,<sp/>0.0f,<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_contactDistance<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>angular<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_angularPosition<sp/>=<sp/>(m_angularPosition<sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a23922a5479bf1cbb7fe8ea4ca286259d" kindref="member">angularVelocity</ref><sp/>*<sp/>deltaTime)<sp/>%<sp/>m_2PI;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>position<sp/>of<sp/>the<sp/>suspension<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9434fdef5a9ed3a3b14a5cf22cbccde1" kindref="member">disableSuspensionMovement</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_suspensionPosition<sp/>=<sp/>m_transform.position</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>suspensionDirection<sp/>*<sp/>(m_contactDistance<sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a0e9839041ec74198499c356b297d7fa6" kindref="member">groundPenetration</ref><sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>*<sp/>(1.0f<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref>)<sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1b9f5ef204924734c9a6dd989300ff5c" kindref="member">suspensionOffset</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_suspensionPosition<sp/>=<sp/>m_transform.position;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>values<sp/>to<sp/>the<sp/>visual<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a2016e316f125dd010176d6a026209930" kindref="member">updateSuspension</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspensionTransform.position<sp/>=<sp/>m_suspensionPosition;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ab646143be70104671a763ed371683c52" kindref="member">updateCaliper</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>due<sp/>to<sp/>suspension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref><sp/>==<sp/>null<sp/>||<sp/>!m_isCaliperChildOfSuspension)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caliperTransform.position<sp/>=<sp/>m_suspensionPosition;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>due<sp/>to<sp/>steering<sp/>(Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caliperTransform.localRotation<sp/>=<sp/>Quaternion.Euler(0.0f,<sp/>m_visualSteerAngle.GetInterpolated(),<sp/>0.0f);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a01e16662b3ce5ab6df790a61f18d2704" kindref="member">updateWheel</ref>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>due<sp/>to<sp/>suspension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>if<sp/>wheel<sp/>mesh<sp/>is<sp/>not<sp/>child<sp/>of<sp/>any<sp/>of<sp/>the<sp/>other<sp/>meshes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a485bc09eb3a187ad55f3943cd4919c42" kindref="member">suspensionTransform</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!m_isWheelChildOfSuspension<sp/>&amp;&amp;<sp/>!m_isWheelChildOfCaliper))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelTransform.position<sp/>=<sp/>m_suspensionPosition;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>due<sp/>to<sp/>spin<sp/>(X)<sp/>and<sp/>steering<sp/>(Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spin<sp/>without<sp/>steering<sp/>if<sp/>the<sp/>mesh<sp/>is<sp/>already<sp/>child<sp/>of<sp/>the<sp/>steering<sp/>caliper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a75fc186c4a3d48a753278fb8c223fea6" kindref="member">caliperTransform</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>m_isWheelChildOfCaliper)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelTransform.localRotation<sp/>=<sp/>Quaternion.Euler(m_angularPosition<sp/>*<sp/>Mathf.Rad2Deg,<sp/>0.0f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelTransform.localRotation<sp/>=<sp/>Quaternion.Euler(m_angularPosition<sp/>*<sp/>Mathf.Rad2Deg,<sp/>m_visualSteerAngle.GetInterpolated(),<sp/>0.0f);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5905937ae9dc8c88f594f8245c82de46" kindref="member">SetSuspensionForceOffset</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_wheelCollider<sp/>may<sp/>be<sp/>null<sp/>if<sp/>the<sp/>simulation<sp/>starts<sp/>with<sp/>the<sp/>GameObject<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wheelCollider<sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>offset<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5ba9904305d12fe946d54375e00d96bf" kindref="member">lastRuntimeSuspensionTravel</ref><sp/>*<sp/>m_wheelCollider.suspensionSpring.targetPosition;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>!VPP_SUPPORTS_NEGATIVE_FORCEAPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>&lt;<sp/>0.0f)<sp/>distance<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider.forceAppPointDistance<sp/>=<sp/>distance;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1add3c81f9cf8dd95e9165f5980b65c064" kindref="member">GetGroundHit</ref><sp/>(out<sp/>WheelHit<sp/>hit)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_wheelCollider<sp/>may<sp/>be<sp/>null<sp/>if<sp/>the<sp/>simulation<sp/>starts<sp/>with<sp/>the<sp/>GameObject<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_wheelCollider<sp/>==<sp/>null<sp/>||<sp/>m_rigidbody<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelHit<sp/>localHit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WheelHit();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit<sp/>=<sp/>localHit;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>grounded<sp/>=<sp/>m_wheelCollider.GetGroundHit(out<sp/>hit);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isActiveAndEnabled)<sp/>grounded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grounded)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_rigidbody<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit.point<sp/>+=<sp/>m_rigidbody.velocity<sp/>*<sp/>Time.fixedDeltaTime;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>the<sp/>wrong<sp/>calculations<sp/>for<sp/>WheelHit.forwardDir<sp/>and<sp/>WheelHit.sidewaysDir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a8c8962b742d9f03cbec2714b5bbdde63" kindref="member">disableWheelReferenceFrameFix</ref>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wheel&apos;s<sp/>forward<sp/>vector<sp/>with<sp/>steering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>steerRotation<sp/>=<sp/>Quaternion.AngleAxis(m_steerAngle,<sp/>m_transform.up);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelForward<sp/>=<sp/>steerRotation<sp/>*<sp/>m_transform.forward;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>forward<sp/>direction<sp/>onto<sp/>the<sp/>ground<sp/>for<sp/>the<sp/>forward<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>forwardNormal<sp/>=<sp/>-Vector3.Dot(wheelForward,<sp/>hit.normal);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upNormal<sp/>=<sp/>Vector3.Dot(m_transform.up,<sp/>hit.normal);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upNormal<sp/>&gt;<sp/>0.000001f)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>projection<sp/>=<sp/>m_transform.up<sp/>*<sp/>(forwardNormal<sp/>/<sp/>upNormal);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit.forwardDir<sp/>=<sp/>(wheelForward<sp/>+<sp/>projection).normalized;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit.forwardDir<sp/>=<sp/>forwardNormal<sp/>&gt;=<sp/>0.0f?<sp/>m_transform.up<sp/>:<sp/>-m_transform.up;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>sideways<sp/>vector<sp/>out<sp/>of<sp/>forward<sp/>and<sp/>normal<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit.sidewaysDir<sp/>=<sp/>Vector3.Cross(hit.normal,<sp/>hit.forwardDir);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grounded;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a522e544574b14d9f91cf7ccb66a26a2c" kindref="member">GetContactDepth</ref><sp/>(Vector3<sp/>contactPoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>suspensionTravel)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>&lt;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distanceToAnchorPoint<sp/>=<sp/>-m_transform.InverseTransformPoint(contactPoint).y;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(suspensionTravel<sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(distanceToAnchorPoint<sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>*<sp/>(1.0f<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref>));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a280828f2cee4be207dc4c0a355281b64" kindref="member">GetTangentVelocity</ref><sp/>(Vector3<sp/>contactPoint,<sp/>Vector3<sp/>surfaceNormal,<sp/>Rigidbody<sp/>surfaceRigidbody)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v<sp/>=<sp/>m_rigidbody.GetPointVelocity(contactPoint);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surfaceRigidbody<sp/>!=<sp/>null)<sp/>v<sp/>-=<sp/>surfaceRigidbody.GetPointVelocity(contactPoint);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>-<sp/>Vector3.Project(v,<sp/>surfaceNormal);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48615805dd264d3a3dafda2431a56a88" kindref="member">ApplyForce</ref><sp/>(Vector3<sp/>force,<sp/>Vector3<sp/>position,<sp/>Rigidbody<sp/>otherRb)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rigidbody.AddForceAtPosition(force,<sp/>position);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherRb<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>!otherRb.isKinematic)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>quick<sp/>and<sp/>dirty<sp/>workaround<sp/>for<sp/>preventing<sp/>the<sp/>wheels<sp/>to<sp/>throw<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>objects<sp/>away<sp/>unrealistically<sp/>when<sp/>running<sp/>over<sp/>them<sp/>(i.e.<sp/>track<sp/>panels).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>forceFactor<sp/>=<sp/>Mathf.Clamp01(otherRb.mass<sp/>/<sp/>m_rigidbody.mass);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRb.AddForceAtPosition(-force<sp/>*<sp/>forceFactor,<sp/>position);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DirectAccess<sp/>to<sp/>the<sp/>underlying<sp/>WheelCollider.<sp/>Used<sp/>for<sp/>in-editor<sp/>debug<sp/>purposes<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>WheelCollider<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a4451ea09cc752325d72b253f54f944d3" kindref="member">GetWheelCollider</ref><sp/>()</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelCollider<sp/>wheelCol<sp/>=<sp/>GetComponent&lt;WheelCollider&gt;();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelCol<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol<sp/>=<sp/>SetupWheelCollider();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wheelCol;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rmarcoux<sp/>-<sp/>KSP<sp/>resets<sp/>wheels<sp/>each<sp/>time<sp/>they<sp/>are<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>WheelCollider<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a4869b8563dd852b379b2c3f287689a1e" kindref="member">ResetWheelCollider</ref>()</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wheelCollider<sp/>=<sp/>SetupWheelCollider();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wheelCollider;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>WheelCollider<sp/>component<sp/>for<sp/>the<sp/>wheel,<sp/>creating<sp/>it<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>WheelCollider<sp/>SetupWheelCollider<sp/>()</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelCollider<sp/>wheelCol<sp/>=<sp/>GetComponent&lt;WheelCollider&gt;();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelCol<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol<sp/>=<sp/>gameObject.AddComponent&lt;WheelCollider&gt;();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.hideFlags<sp/>=<sp/>HideFlags.DontSaveInEditor<sp/>|<sp/>HideFlags.NotEditable;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WheelFrictionCurve<sp/>fc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WheelFrictionCurve();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc.stiffness<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.sidewaysFriction<sp/>=<sp/>fc;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.forwardFriction<sp/>=<sp/>fc;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.mass<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.enabled<sp/>=<sp/>this.enabled;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wheelCol;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>WheelCollider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateWheelCollider<sp/>(WheelCollider<sp/>wheelCol)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.motorTorque<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1abe9ad0c054518405379d7df7543eedf3" kindref="member">canSleep</ref>?<sp/>0.0f<sp/>:<sp/>0.00001f;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>optimization:<sp/>apply<sp/>properties<sp/>only<sp/>if<sp/>they<sp/>have<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>them<sp/>each<sp/>frame<sp/>has<sp/>a<sp/>significant<sp/>performace<sp/>impact<sp/>in<sp/>the<sp/>profiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>&lt;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelCenter<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a78b620a75378424c0406c1fa8e441871" kindref="member">center</ref><sp/>+<sp/>Vector3.up<sp/>*<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>*<sp/>(1.0f<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_edy_common_tools_1_1_math_utility" kindref="compound">MathUtility</ref>.<ref refid="class_edy_common_tools_1_1_math_utility_1a7f345fcf7f14fc438651d45b429b0958" kindref="member">Vector3Equals</ref>(wheelCol.center,<sp/>wheelCenter))<sp/>wheelCol.center<sp/>=<sp/>wheelCenter;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref><sp/>&lt;<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>)<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref><sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1aeee9173771c2e5a3178bf31936832cf7" kindref="member">minSuspensionDistance</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelCol.suspensionDistance<sp/>!=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref>)<sp/>wheelCol.suspensionDistance<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1ad3410e21b01d1b208192feb150d830fc" kindref="member">runtimeSuspensionTravel</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wheelCol.radius<sp/>!=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>)<sp/>wheelCol.radius<sp/>=<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JointSpring<sp/>suspension;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PhysX<sp/>3<sp/>uses<sp/>N/m<sp/>for<sp/>springs<sp/>and<sp/>N/ms-1<sp/>for<sp/>dampers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sprungForce<sp/>=<sp/>wheelCol.sprungMass<sp/>*<sp/>(<ref refid="class_vehicle_physics_1_1_vehicle_behaviour_1a0c9a9fd406ebd35c02d2901cdca1e134" kindref="member">vehicle</ref><sp/>==<sp/>null<sp/>?<sp/>9.80665f<sp/>:<sp/>vehicle.gravity.Magnitude);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KSP<sp/>customization<sp/>here<sp/>to<sp/>clamp<sp/>minSpringRate<sp/>to<sp/>a<sp/>minimum<sp/>of<sp/>0.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minSpringRate<sp/>=<sp/>Mathf.Max(sprungForce<sp/>/<sp/>wheelCol.suspensionDistance,<sp/>0.1f);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>scripts<sp/>to<sp/>configure<sp/>a<sp/>spring<sp/>rate<sp/>smaller<sp/>than<sp/>1<sp/>(may<sp/>cause<sp/>NaN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KSP<sp/>customization<sp/>here<sp/>to<sp/>comment<sp/>out<sp/>this<sp/>minimum<sp/>value.<sp/>is<sp/>handled<sp/>above<sp/>in<sp/>minSpringRate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(runtimeSpringRate<sp/>&lt;<sp/>1f)<sp/>runtimeSpringRate<sp/>=<sp/>1f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO-DO:<sp/>Study<sp/>how<sp/>to<sp/>calculate<sp/>a<sp/>top<sp/>limit<sp/>to<sp/>the<sp/>spring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>It<sp/>should<sp/>work<sp/>with<sp/>the<sp/>cases<sp/>sprungForce--&gt;0<sp/>(as<sp/>for<sp/>gravity<sp/>approaching<sp/>zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>maxSpringRate<sp/>=<sp/>sprungForce<sp/>/<sp/>(wheelCol.suspensionDistance<sp/>*<sp/>0.1f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspension.spring<sp/>=<sp/>Mathf.Clamp(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a9b9f6b9550ccd74eb6f172d638d6fb13" kindref="member">runtimeSpringRate</ref><sp/>*<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80ab53323be8e9d3b7e1453972df2824" kindref="member">scaleFactor</ref>,<sp/>minSpringRate,<sp/>Mathf.Infinity);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KSP<sp/>customization<sp/>on<sp/>next<sp/>two<sp/>lines<sp/>to<sp/>clamp<sp/>Damper<sp/>to<sp/>a<sp/>minimum<sp/>of<sp/>0.1<sp/>for<sp/>damper<sp/>and<sp/>targetPosition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspension.damper<sp/>=<sp/>vehicle.advancedSuspensionDamper?<sp/>0.0f<sp/>:<sp/>Mathf.Max(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a48006e47ad17a54f576d11b350dfa0a7" kindref="member">runtimeDamperRate</ref><sp/>*<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a80ab53323be8e9d3b7e1453972df2824" kindref="member">scaleFactor</ref>,<sp/>0.1f);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspension.targetPosition<sp/>=<sp/>Mathf.Clamp((sprungForce<sp/>/<sp/>suspension.spring)<sp/>/<sp/>wheelCol.suspensionDistance,<sp/>0.1f,<sp/>1f);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failsafe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsNaN(suspension.targetPosition))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JointSpring<sp/>currentSuspension<sp/>=<sp/>wheelCol.suspensionSpring;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KSP<sp/>customization<sp/>to<sp/>slerp<sp/>the<sp/>spring<sp/>targetPosition<sp/>which<sp/>jumps<sp/>all<sp/>the<sp/>jumping<sp/>and<sp/>bouncing<sp/>and<sp/>other<sp/>shenanigans.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>change<sp/>in<sp/>targetPosition<sp/>is<sp/>&gt;<sp/>springSlerpRate<sp/>we<sp/>need<sp/>to<sp/>gradually<sp/>change<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(suspension.targetPosition<sp/>-<sp/>currentSuspension.targetPosition)<sp/>&gt;<sp/>springSlerpRate)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugForces)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(</highlight><highlight class="stringliteral">&quot;TargetPosition<sp/>change<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>springSlerpRate);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>targetPos<sp/>=<sp/>(sprungForce<sp/>/<sp/>suspension.spring)<sp/>/<sp/>wheelCol.suspensionDistance;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(currentSuspension.targetPosition<sp/>&gt;<sp/>suspension.targetPosition)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspension.targetPosition<sp/>=<sp/>currentSuspension.targetPosition<sp/>-<sp/>springSlerpRate;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Current<sp/>position<sp/>is<sp/>&lt;<sp/>new<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suspension.targetPosition<sp/>=<sp/>currentSuspension.targetPosition<sp/>+<sp/>springSlerpRate;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/>KSP<sp/>customization<sp/>to<sp/>slerp<sp/>the<sp/>spring<sp/>targetPosition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>optimization:<sp/>apply<sp/>properties<sp/>only<sp/>if<sp/>they<sp/>have<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>them<sp/>each<sp/>frame<sp/>has<sp/>a<sp/>significant<sp/>performance<sp/>impact<sp/>in<sp/>the<sp/>profiler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentSuspension.spring<sp/>!=<sp/>suspension.spring</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>currentSuspension.damper<sp/>!=<sp/>suspension.damper</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>currentSuspension.targetPosition<sp/>!=<sp/>suspension.targetPosition)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//KSP<sp/>customization<sp/>to<sp/>do<sp/>some<sp/>debug<sp/>logging<sp/>if<sp/>this<sp/>bool<sp/>is<sp/>true.<sp/>Which<sp/>can<sp/>only<sp/>be<sp/>set<sp/>in<sp/>Unity<sp/>editor<sp/>inspector<sp/>(ModuleWheelSuspension).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugForces)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(</highlight><highlight class="stringliteral">&quot;Spring<sp/>changed.<sp/>MinSpring:{0}<sp/>CurrentSpring:{1}<sp/>NewSpring:{2}<sp/>CurrentDamper:{3}<sp/>NewDamper:{4}<sp/>CurrentTargetPos:{5}<sp/>NewTargetPos:{6}<sp/>SprungForce:{7}<sp/>SuspensionDistance:{8}<sp/>SprungMass:{9}&quot;</highlight><highlight class="normal">,<sp/>minSpringRate,<sp/>currentSuspension.spring,<sp/>suspension.spring,<sp/>currentSuspension.damper,<sp/>suspension.damper,<sp/>currentSuspension.targetPosition,<sp/>suspension.targetPosition,<sp/>sprungForce,<sp/>wheelCol.suspensionDistance,<sp/>wheelCol.sprungMass);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wheelCol.suspensionSpring<sp/>=<sp/>suspension;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>for<sp/>WheelCollider<sp/>orientation<sp/>in<sp/>Unity<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FixSteerAngle<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSteerAngle)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isActiveAndEnabled)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputSteerAngle;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>World-space<sp/>forward<sp/>vector<sp/>for<sp/>the<sp/>wheel<sp/>in<sp/>the<sp/>desired<sp/>steer<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>steerRot<sp/>=<sp/>Quaternion.AngleAxis(inputSteerAngle,<sp/>m_transform.up);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>wheelForward<sp/>=<sp/>steerRot<sp/>*<sp/>m_transform.forward;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stupid<sp/>PhysX<sp/>Vehicle<sp/>SDK<sp/>assumes<sp/>all<sp/>wheels<sp/>point<sp/>to<sp/>the<sp/>same<sp/>direction<sp/>as<sp/>the<sp/>rigidbody.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/><sp/>Project<sp/>the<sp/>forward<sp/>direction<sp/>into<sp/>the<sp/>rigidbody&apos;s<sp/>XZ<sp/>plane.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>vector<sp/>we<sp/>want<sp/>our<sp/>wheel<sp/>to<sp/>point<sp/>to<sp/>as<sp/>seen<sp/>from<sp/>the<sp/>rigidbody.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>rbWheelForward<sp/>=<sp/>wheelForward<sp/>-<sp/>Vector3.Project(wheelForward,<sp/>m_rigidbodyTransform.up);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/><sp/>Calculate<sp/>the<sp/>final<sp/>steer<sp/>angle<sp/>to<sp/>feed<sp/>PhysX<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3.Angle(m_rigidbodyTransform.forward,<sp/>rbWheelForward)<sp/>*<sp/>Mathf.Sign(Vector3.Dot(m_rigidbodyTransform.right,<sp/>rbWheelForward));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Context<sp/>menu<sp/>/<sp/>Editor<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>[ContextMenu(</highlight><highlight class="stringliteral">&quot;Adjust<sp/>position<sp/>and<sp/>radius<sp/>to<sp/>the<sp/>Wheel<sp/>mesh&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5297b62b96e554dc7e82b926dba0d94a" kindref="member">AdjustToWheelMesh</ref><sp/>()</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>position<sp/>and<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTES:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Local<sp/>rotation<sp/>is<sp/>configured<sp/>to<sp/>the<sp/>local<sp/>mesh<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>allows<sp/>the<sp/>feature<sp/>to<sp/>work<sp/>even<sp/>if<sp/>any<sp/>of<sp/>the<sp/>mesh<sp/>parents<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>(i.e.<sp/>rotating<sp/>a<sp/>mesh<sp/>180Âº<sp/>to<sp/>make<sp/>the<sp/>front<sp/>facing<sp/>+Z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>Local<sp/>position<sp/>in<sp/>the<sp/>X<sp/>axis<sp/>is<sp/>used<sp/>for<sp/>determining<sp/>whether<sp/>the<sp/>wheel<sp/>is<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Left<sp/>or<sp/>Right<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a1ab549438f2294cc7a27b08947b49271" kindref="member">wheelTransform</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_vehicle_behaviour_1aeb5416ec4a7eb35c2718fd60daecdf13" kindref="member">DebugLogError</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>Wheel<sp/>transform<sp/>is<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityEditor.Undo.RecordObject(transform,<sp/></highlight><highlight class="stringliteral">&quot;Adjust<sp/>wheel<sp/>position<sp/>and<sp/>radius<sp/>to<sp/>mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityEditor.Undo.RecordObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Adjust<sp/>wheel<sp/>position<sp/>and<sp/>radius<sp/>to<sp/>mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.position<sp/>=<sp/>wheelTransform.position;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.localPosition<sp/>=<sp/>MathUtility.RoundDecimals(transform.localPosition,<sp/>3);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.localRotation<sp/>=<sp/>wheelTransform.localRotation;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshFilter[]<sp/>meshFilters<sp/>=<sp/>wheelTransform.GetComponentsInChildren&lt;MeshFilter&gt;();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshFilters<sp/>==<sp/>null<sp/>||<sp/>meshFilters.Length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_vehicle_behaviour_1a30422be6b0c029dc01cad8e2119c9c95" kindref="member">DebugLogWarning</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>calculate<sp/>radius.<sp/>There<sp/>are<sp/>no<sp/>meshes<sp/>in<sp/>the<sp/>Wheel<sp/>transform<sp/>or<sp/>its<sp/>children&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>meshes<sp/>contained<sp/>in<sp/>the<sp/>Wheel<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounds<sp/>bounds<sp/>=<sp/>GetScaledBounds(meshFilters[0]);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1,<sp/>c=meshFilters.Length;<sp/>i&lt;c;<sp/>i++)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounds<sp/>meshBounds<sp/>=<sp/>GetScaledBounds(meshFilters[i]);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds.Encapsulate(meshBounds.min);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds.Encapsulate(meshBounds.max);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>correctly<sp/>placed<sp/>round<sp/>wheel<sp/>then<sp/>extents<sp/>for<sp/>y<sp/>and<sp/>z<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>approximately<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(bounds.extents.y-bounds.extents.z)<sp/>&gt;<sp/>0.05f)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_vehicle_behaviour_1a30422be6b0c029dc01cad8e2119c9c95" kindref="member">DebugLogWarning</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>Wheel<sp/>mesh<sp/>might<sp/>not<sp/>be<sp/>correct.<sp/>The<sp/>calculated<sp/>radius<sp/>is<sp/>different<sp/>along<sp/>z<sp/>and<sp/>y<sp/>axis.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref><sp/>=<sp/>MathUtility.FloorDecimals(bounds.extents.y,<sp/>2);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimate<sp/>a<sp/>position<sp/>for<sp/>the<sp/>WheelCollider&apos;s<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform.localPosition.x<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center.x<sp/>=<sp/>MathUtility.RoundDecimals(bounds.center.x<sp/>+<sp/>bounds.extents.x<sp/>*<sp/>0.85f,<sp/>3);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center.x<sp/>=<sp/>MathUtility.RoundDecimals(bounds.center.x<sp/>-<sp/>bounds.extents.x<sp/>*<sp/>0.85f,<sp/>3);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>Bounds<sp/>GetScaledBounds<sp/>(MeshFilter<sp/>meshFilter)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounds<sp/>bounds<sp/>=<sp/>meshFilter.sharedMesh.bounds;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>scale<sp/>=<sp/>meshFilter.transform.lossyScale;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>negative<sp/>scales<sp/>(would<sp/>result<sp/>in<sp/>negative<sp/>extents)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale.x<sp/>=<sp/>Mathf.Abs(scale.x);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale.y<sp/>=<sp/>Mathf.Abs(scale.y);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale.z<sp/>=<sp/>Mathf.Abs(scale.z);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds.max<sp/>=<sp/>Vector3.Scale(bounds.max,<sp/>scale);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds.min<sp/>=<sp/>Vector3.Scale(bounds.min,<sp/>scale);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>convenient<sp/>addition<sp/>to<sp/>the<sp/>[DrawGizmo]<sp/>decorator<sp/>in<sp/>the<sp/>Inspector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>OnDrawGizmosSelected<sp/>method<sp/>makes<sp/>the<sp/>component<sp/>appear<sp/>at<sp/>the<sp/>Scene<sp/>view&apos;s<sp/>Gizmos<sp/>dropdown<sp/>menu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDrawGizmosSelected<sp/>()</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>debug<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR<sp/>&amp;&amp;<sp/>VPP_DEBUG_LABELS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDrawGizmos<sp/>()</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Application.isPlaying<sp/>&amp;&amp;<sp/>!<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6ce52859a2486ee26a4a3256a98ef412" kindref="member">hidden</ref>)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>startPosition<sp/>=<sp/>transform.TransformPoint(<ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a78b620a75378424c0406c1fa8e441871" kindref="member">center</ref>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>topPosition<sp/>=<sp/>startPosition<sp/>+<sp/>transform.up<sp/>*<sp/>((1.0f<sp/>-<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a6bbf9f1a6581ea9653f9d916d0816fbf" kindref="member">suspensionAnchor</ref>)<sp/>*<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a5d2036c1d8b85d49be229afc7c70e199" kindref="member">suspensionDistance</ref><sp/>+<sp/><ref refid="class_vehicle_physics_1_1_v_p_wheel_collider_1a86ac84a484d511f4ba66209d039a00cf" kindref="member">radius</ref>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityEditor.Handles.Label(topPosition,<sp/>m_wheelCollider.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_wheelCollider.sprungMass.ToString(</highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Packages/VehiclePhysicsPro/Core/Vehicle Physics core/Components/VPWheelCollider.cs"/>
  </compounddef>
</doxygen>
