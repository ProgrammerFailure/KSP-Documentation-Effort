<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_k_s_p_1_1_i_o_1_1_file" kind="class" prot="public">
    <compoundname>KSP::IO::File</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a7cdb938a2ef39b0be489cd2c356f5116" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.IO.File.AppendAllText&lt; T &gt;</definition>
        <argsstring>(string data, string filename, Vessel flight=null)</argsstring>
        <name>AppendAllText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Append a string to a file, or creates it if it doesn&apos;t exist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to store as a text file.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="174" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="174" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1adcf9048e3079b1c056ffa536ded164aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_text_writer" kindref="compound">KSP.IO.TextWriter</ref></type>
        <definition>static KSP.IO.TextWriter KSP.IO.File.AppendText&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>AppendText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that appends to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to append to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="196" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="196" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a37b4dc3777c49bf1ca9cff6e18113e00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_file_stream" kindref="compound">KSP.IO.FileStream</ref></type>
        <definition>static KSP.IO.FileStream KSP.IO.File.Create&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>Create&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that creates a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="215" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="215" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a3d907ac22dd931f80f32002189cf4fb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_text_writer" kindref="compound">KSP.IO.TextWriter</ref></type>
        <definition>static KSP.IO.TextWriter KSP.IO.File.CreateText&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>CreateText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that creates a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="234" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="234" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a3e01bf65c8b2a0bec22aad9e3372d4fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.IO.File.Delete&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>Delete&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Delete a file in your <ref refid="namespace_k_s_p_1_1_i_o" kindref="compound">IO</ref> sandbox. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="34" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a4e027e2b781562436cb3511491af7c8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool KSP.IO.File.Exists&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>Exists&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Find out if a file in your <ref refid="namespace_k_s_p_1_1_i_o" kindref="compound">IO</ref> sandbox exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if file exists.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="14" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="14" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a5df5c1114e1c4e6662acc9dcad1b92cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_file_stream" kindref="compound">KSP.IO.FileStream</ref></type>
        <definition>static KSP.IO.FileStream KSP.IO.File.Open&lt; T &gt;</definition>
        <argsstring>(string filename, KSP.IO.FileMode mode, Vessel flight=null)</argsstring>
        <name>Open&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="namespace_k_s_p_1_1_i_o_1afe487827e52ac4a7b27b44b2ebf08751" kindref="member">KSP.IO.FileMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that operates on a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="253" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="253" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a47145648d69193757a86f98c63f109f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_text_reader" kindref="compound">KSP.IO.TextReader</ref></type>
        <definition>static KSP.IO.TextReader KSP.IO.File.OpenText&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>OpenText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that operates on a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="272" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="272" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a31cda537dd978cdfe95b2b08914f87b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_file_stream" kindref="compound">KSP.IO.FileStream</ref></type>
        <definition>static KSP.IO.FileStream KSP.IO.File.OpenWrite&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>OpenWrite&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Open a stream that writes to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Calling class</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>A vessel that relates to the data about to be written.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="291" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="291" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1ac61bbedf51fe538332524625869a0f0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>static byte [] KSP.IO.File.ReadAllBytes&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>ReadAllBytes&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Read all the bytes from a file in your <ref refid="namespace_k_s_p_1_1_i_o" kindref="compound">IO</ref> sandbox. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Content of the file requested</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="74" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a601cb26ae1635b795d91bb51ba51a80f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string[]</type>
        <definition>static string [] KSP.IO.File.ReadAllLines&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>ReadAllLines&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Read all lines from a file in your <ref refid="namespace_k_s_p_1_1_i_o" kindref="compound">IO</ref> sandbox. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of lines in the file</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="54" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="54" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1af68cf802c47331d2c235681ceddd27ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string KSP.IO.File.ReadAllText&lt; T &gt;</definition>
        <argsstring>(string filename, Vessel flight=null)</argsstring>
        <name>ReadAllText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Read all the text from a file in your <ref refid="namespace_k_s_p_1_1_i_o" kindref="compound">IO</ref> sandbox. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>All the text in that file</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="94" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="94" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1ada3ecfcb2f9c08538573a1436d54023e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.IO.File.WriteAllBytes&lt; T &gt;</definition>
        <argsstring>(byte[] data, string filename, Vessel flight=null)</argsstring>
        <name>WriteAllBytes&lt; T &gt;</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Write a bunch of bytes to a file on disk </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes to store as a binary file</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="134" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="134" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a3df2a36cc54ddda0c43c01de6f91278b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.IO.File.WriteAllLines&lt; T &gt;</definition>
        <argsstring>(string[] data, string filename, Vessel flight=null)</argsstring>
        <name>WriteAllLines&lt; T &gt;</name>
        <param>
          <type>string[]</type>
          <declname>data</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Write an array of strings to a file, with each string becoming a line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>strings to write as lines</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="114" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_file_1a0fac3b7b8fb1ee8435da2216bdb7c634" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KSP.IO.File.WriteAllText&lt; T &gt;</definition>
        <argsstring>(string data, string filename, Vessel flight=null)</argsstring>
        <name>WriteAllText&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_vessel" kindref="compound">Vessel</ref></type>
          <declname>flight</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Write a string to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Class that is calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename to look for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flight</parametername>
</parameternamelist>
<parameterdescription>
<para>The flight to track</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to store as a text file.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="154" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="154" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" line="6" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/File.cs" bodystart="5" bodyend="304"/>
    <listofallmembers>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a7cdb938a2ef39b0be489cd2c356f5116" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>AppendAllText&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1adcf9048e3079b1c056ffa536ded164aa" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>AppendText&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a37b4dc3777c49bf1ca9cff6e18113e00" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>Create&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a3d907ac22dd931f80f32002189cf4fb2" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>CreateText&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a3e01bf65c8b2a0bec22aad9e3372d4fd" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>Delete&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a4e027e2b781562436cb3511491af7c8b" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>Exists&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a5df5c1114e1c4e6662acc9dcad1b92cf" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>Open&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a47145648d69193757a86f98c63f109f4" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>OpenText&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a31cda537dd978cdfe95b2b08914f87b3" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>OpenWrite&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1ac61bbedf51fe538332524625869a0f0a" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>ReadAllBytes&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a601cb26ae1635b795d91bb51ba51a80f" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>ReadAllLines&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1af68cf802c47331d2c235681ceddd27ff" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>ReadAllText&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1ada3ecfcb2f9c08538573a1436d54023e" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>WriteAllBytes&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a3df2a36cc54ddda0c43c01de6f91278b" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>WriteAllLines&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_file_1a0fac3b7b8fb1ee8435da2216bdb7c634" prot="public" virt="non-virtual"><scope>KSP::IO::File</scope><name>WriteAllText&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
