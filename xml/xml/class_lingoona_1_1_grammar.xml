<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_lingoona_1_1_grammar" kind="class" prot="public">
    <compoundname>Lingoona::Grammar</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_lingoona_1_1_grammar_1a419a60bde72e291503a9f836b6d1f689" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Lingoona.Grammar.available</definition>
        <argsstring></argsstring>
        <name>available</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Caches whether the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library is available and to avoid exceptions in case the library is missing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="13" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1ad069fea02076ff37769233280d0ac582" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Lingoona.Grammar.Grammar</definition>
        <argsstring>()</argsstring>
        <name>Grammar</name>
        <briefdescription>
<para>The static constructor tests to see whether the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library is present and functional. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="18" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="18" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a6e738925fc9860d0c1af4ad326b94dad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.Grammar.clearVariable</definition>
        <argsstring>(string name)</argsstring>
        <name>clearVariable</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Deletes a named variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Must consist of alphanumerical characters only and start with a letter.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="167" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a5e5ae3df7e9dd693e8dd3c66767a362f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.Grammar.clearVariables</definition>
        <argsstring>()</argsstring>
        <name>clearVariables</name>
        <briefdescription>
<para>Deletes all named variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="176" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a7549f10827ca17df0b3389e78eed84e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.Grammar.generateName</definition>
        <argsstring>(string noun, List&lt; string &gt; components)</argsstring>
        <name>generateName</name>
        <param>
          <type>string</type>
          <declname>noun</declname>
        </param>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
<para>Composes a new name from a given noun and an individual amount of additional suffixes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noun</parametername>
</parameternamelist>
<parameterdescription>
<para>The tagged noun to be used, e.g. &quot;sword^n&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>components</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual suffixes, each individual one might be tagged to describe the actual use, e.g. &quot;strong^a&quot;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The finalized, generated name, including gender tags.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="145" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a08e9ff95c4050e0a6021d4a89f763275" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.Grammar.getLanguage</definition>
        <argsstring>()</argsstring>
        <name>getLanguage</name>
        <briefdescription>
<para>Retrieve the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library&apos;s current language code. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A 2 character language code, e.g. &quot;en&quot;, &quot;de&quot;, or &quot;fr&quot;.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="52" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a016e8ec0855d9434db69be14e88a6145" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.Grammar.setLanguage</definition>
        <argsstring>(string language)</argsstring>
        <name>setLanguage</name>
        <param>
          <type>string</type>
          <declname>language</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library&apos;s language to be used. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2 character language code, e.g. &quot;en&quot;, &quot;de&quot;, or &quot;fr&quot;.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para>The available languages depend on your license agreement. Invalid values will fall back to English (&quot;en&quot;).</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="42" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1ae1d05d4d1db62e81206fe6ba1e8d432a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Lingoona.Grammar.setVariable</definition>
        <argsstring>(string name, string value)</argsstring>
        <name>setVariable</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a named variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the variable. Must consist of alphanumerical characters only and start with a letter.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the variable.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="157" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a95c2298ac972db45d31ff96f4e671bb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.Grammar.useGrammar</definition>
        <argsstring>(string template, List&lt; string &gt; parameters)</argsstring>
        <name>useGrammar</name>
        <param>
          <type>string</type>
          <declname>template</declname>
        </param>
        <param>
          <type>List&lt; string &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Parses a string using the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library and returns the finalized text. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>template</parametername>
</parameternamelist>
<parameterdescription>
<para>The template string to be parsed, e.g. &quot;Greetings, &lt;&lt;1&gt;&gt;!&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual parameters, each individual one might be tagged based on their gender, e.g. &quot;dog^n&quot;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The finalized, generated string.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="65" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="65" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_lingoona_1_1_grammar_1a9c70785813e58eb6aca24163c7faaea3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Lingoona.Grammar.useGrammar</definition>
        <argsstring>(string template)</argsstring>
        <name>useGrammar</name>
        <param>
          <type>string</type>
          <declname>template</declname>
        </param>
        <briefdescription>
<para>Parses a string using the <ref refid="class_lingoona_1_1_grammar" kindref="compound">Grammar</ref> Library and returns the finalized text. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>template</parametername>
</parameternamelist>
<parameterdescription>
<para>The template string to be parsed, e.g. &quot;Greetings, &lt;&lt;1&gt;&gt;!&quot;.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The finalized, generated string.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="112" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="112" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" line="9" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Lingoona/Plugins/Grammar.cs" bodystart="8" bodyend="181"/>
    <listofallmembers>
      <member refid="class_lingoona_1_1_grammar_1a419a60bde72e291503a9f836b6d1f689" prot="private" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>available</name></member>
      <member refid="class_lingoona_1_1_grammar_1a6e738925fc9860d0c1af4ad326b94dad" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>clearVariable</name></member>
      <member refid="class_lingoona_1_1_grammar_1a5e5ae3df7e9dd693e8dd3c66767a362f" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>clearVariables</name></member>
      <member refid="class_lingoona_1_1_grammar_1a7549f10827ca17df0b3389e78eed84e5" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>generateName</name></member>
      <member refid="class_lingoona_1_1_grammar_1a08e9ff95c4050e0a6021d4a89f763275" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>getLanguage</name></member>
      <member refid="class_lingoona_1_1_grammar_1ad069fea02076ff37769233280d0ac582" prot="private" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>Grammar</name></member>
      <member refid="class_lingoona_1_1_grammar_1a016e8ec0855d9434db69be14e88a6145" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>setLanguage</name></member>
      <member refid="class_lingoona_1_1_grammar_1ae1d05d4d1db62e81206fe6ba1e8d432a" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>setVariable</name></member>
      <member refid="class_lingoona_1_1_grammar_1a95c2298ac972db45d31ff96f4e671bb1" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>useGrammar</name></member>
      <member refid="class_lingoona_1_1_grammar_1a9c70785813e58eb6aca24163c7faaea3" prot="public" virt="non-virtual"><scope>Lingoona::Grammar</scope><name>useGrammar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
