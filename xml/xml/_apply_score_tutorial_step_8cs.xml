<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_apply_score_tutorial_step_8cs" kind="file">
    <compoundname>ApplyScoreTutorialStep.cs</compoundname>
    <innerclass refid="class_apply_score_tutorial_step" prot="public">ApplyScoreTutorialStep</innerclass>
    <innernamespace refid="namespace_node_definition">NodeDefinition</innernamespace>
    <innernamespace refid="namespace_node_template_name">NodeTemplateName</innernamespace>
    <innernamespace refid="namespace_tutorial_button_type">TutorialButtonType</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" prot="public" static="no">
        <type><ref refid="class_m_e_tutorial_scenario_1afcf1de55a439c32404735edccf8c463b" kindref="member">METutorialScenario.NodeDefinition</ref></type>
        <definition>using NodeDefinition =  METutorialScenario.NodeDefinition</definition>
        <argsstring></argsstring>
        <name>NodeDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" line="9" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_apply_score_tutorial_step_8cs_1aeabf5b3c1eb08277e0abc5ab03bc6144" prot="public" static="no">
        <type><ref refid="class_m_e_tutorial_scenario_1_1_node_template_name" kindref="compound">METutorialScenario.NodeTemplateName</ref></type>
        <definition>using NodeTemplateName =  METutorialScenario.NodeTemplateName</definition>
        <argsstring></argsstring>
        <name>NodeTemplateName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" line="8" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" prot="public" static="no">
        <type><ref refid="class_m_e_tutorial_scenario_1aca237a8a32b983e55afb75e5370f5d18" kindref="member">METutorialScenario.TutorialButtonType</ref></type>
        <definition>using TutorialButtonType =  METutorialScenario.TutorialButtonType</definition>
        <argsstring></argsstring>
        <name>TutorialButtonType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" line="7" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Expansions.Missions;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_u_i___control_8cs_1a3bd9e1afc69c3993c299f5b96dfaf234a344a7f427fb765610ef96eb7bce95257" kindref="member">Expansions.Missions.Editor</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref><sp/>=<sp/><ref refid="class_m_e_tutorial_scenario_1aca237a8a32b983e55afb75e5370f5d18" kindref="member">METutorialScenario.TutorialButtonType</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_apply_score_tutorial_step_8cs_1aeabf5b3c1eb08277e0abc5ab03bc6144" kindref="member">NodeTemplateName</ref><sp/>=<sp/><ref refid="_apply_score_tutorial_step_8cs_1aeabf5b3c1eb08277e0abc5ab03bc6144" kindref="member">METutorialScenario.NodeTemplateName</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" kindref="member">NodeDefinition</ref><sp/>=<sp/><ref refid="class_m_e_tutorial_scenario_1afcf1de55a439c32404735edccf8c463b" kindref="member">METutorialScenario.NodeDefinition</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_apply_score_tutorial_step" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_apply_score_tutorial_step" kindref="compound">ApplyScoreTutorialStep</ref><sp/>:<sp/><ref refid="class_intermediate_tutorial_page_step" kindref="compound">IntermediateTutorialPageStep</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>intermediateTitleLoc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990010&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>erronousIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>applyScoreNodeAttended<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modifierCountAttended<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeCountRequired<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dialogNodeCountRequired<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vesselNodeCountRequired<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeSinceNodeCountRequired<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>applyNodeCountRequired<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_apply_score_tutorial_step_1a5609d8a9d27dddd0e1fc16e9acae597c" kindref="member">ApplyScoreTutorialStep</ref>(<ref refid="class_intermediate_tutorial" kindref="compound">IntermediateTutorial</ref><sp/><ref refid="class_intermediate_tutorial_page_step_1a6e27b3abaee082c7c1b935b4a625a37c" kindref="member">tutorialScenario</ref>,<sp/><ref refid="class_tutorial_scenario" kindref="compound">TutorialScenario</ref>.TutorialFSM<sp/>tutorialFsm)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base(tutorialScenario,<sp/>tutorialFsm)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;dragApplyScoreNode&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990051&quot;</highlight><highlight class="normal">,<sp/>OnEnterDragApplyScoreNode,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;dragApplyScoreNodeHelper&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990052&quot;</highlight><highlight class="normal">,<sp/>OnEnterDragApplyScoreNodeHelper,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;setupApplyScoreNode&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990053&quot;</highlight><highlight class="normal">,<sp/>OnEnterSetupApplyScoreNode,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;setupApplyScoreNodeHelper&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990054&quot;</highlight><highlight class="normal">,<sp/>OnEnterSetupApplyScoreNodeHelper,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;linkAllIntro&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990055&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_tutorial_page_config_1a85d14ae018aa50af62d8344935ecd98f" kindref="member">OnEnterEmpty</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;linkExplanation&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990056&quot;</highlight><highlight class="normal">,<sp/>OnEnterLinkExplanation,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_score_tutorial_step_1ae2bc0faca57d2a2e4190e5d956b5060b" kindref="member">AddTutorialStepConfig</ref>(</highlight><highlight class="stringliteral">&quot;linkExplanationHelper&quot;</highlight><highlight class="normal">,<sp/>intermediateTitleLoc,<sp/></highlight><highlight class="stringliteral">&quot;#autoLOC_9990057&quot;</highlight><highlight class="normal">,<sp/>OnEnterLinkExplanation,<sp/><ref refid="_apply_score_tutorial_step_8cs_1aff2d39707cfd113d7b31a743fe5eca87" kindref="member">TutorialButtonType</ref>.NoButton);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>dragApplyScoreNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnterDragApplyScoreNode(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>+=<sp/>OnLeaveDragApplyScoreNode;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.DragNodeHelper(FilterApplyNodeCriteria,<sp/></highlight><highlight class="stringliteral">&quot;CurrencyAndScore&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.Mission.onBuilderNodeFocused.Add(OnNodeFocused);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FilterApplyNodeCriteria(<ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_node_icon" kindref="compound">MEGUINodeIcon</ref><sp/>meguiNodeIcon)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meguiNodeIcon.basicNode<sp/>!=<sp/>null<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meguiNodeIcon.basicNode.name<sp/>==<sp/>NodeTemplateName.MissionScore.ToString()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meguiNodeIcon.<ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_node_icon_1a59f4230aa3f7fc1e87be3136c6cb20b7" kindref="member">basicNode</ref>.<ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_basic_node_1a039054d7d10908455fc8e31f4d2b6298" kindref="member">actions</ref>.Contains(</highlight><highlight class="stringliteral">&quot;ActionMissionScore&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnNodeFocused(<ref refid="class_expansions_1_1_missions_1_1_m_e_node" kindref="compound">MENode</ref><sp/>data)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HasApplyScoreNode())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasApplyScoreNode()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;MEGUINode&gt;<sp/>applyScoreNodes<sp/>=<sp/>tutorialScenario.GetMEGUINodes(NodeTemplateName.MissionScore);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>applyScoreNodeCountOk<sp/>=<sp/>applyScoreNodes.Count<sp/>==<sp/>applyScoreNodeAttended;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>applyScoreNodeIndex<sp/>=<sp/>applyScoreNodeCountOk<sp/>?<sp/>tutorialScenario.GetMEGUINodeIndex(applyScoreNodes[0])<sp/>:<sp/>erronousIndex;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>applyScoreNodeIndex<sp/>==<sp/>(int)<ref refid="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" kindref="member">NodeDefinition</ref>.ApplyScore;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSelectedGameObjectChange(GameObject<sp/>gameObject)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsLinksConnected())</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLeaveDragApplyScoreNode(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>-=<sp/>OnLeaveDragApplyScoreNode;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.RemoveDragHelper();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.Mission.onBuilderNodeFocused.Remove(OnNodeFocused);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>dragApplyScoreNodeHelper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnterDragApplyScoreNodeHelper(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>+=<sp/>OnLeaveDragApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!HasApplyScoreNode())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.DragNodeHelper(FilterApplyNodeCriteria);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.Mission.onBuilderNodeFocused.Add(OnNodeFocused);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLeaveDragApplyScoreNodeHelper(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>-=<sp/>OnLeaveDragApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.RemoveDragHelper();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.Mission.onBuilderNodeFocused.Remove(OnNodeFocused);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>setupApplyScoreNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnterSetupApplyScoreNode(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>+=<sp/>OnUpdateSetupApplyScoreNode;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>+=<sp/>OnLeaveSetupApplyScoreNode;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockNodeSettings(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnUpdateSetupApplyScoreNode()</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CanHighlightApplyScoreSetup())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanHighlightApplyScoreSetup()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tutorialScenario.<ref refid="class_m_e_tutorial_scenario_1afdae6ea95ba403e99e9b241c8e41f3f3" kindref="member">GetSelectedNodeTemplateName</ref>()<sp/>!=<sp/>NodeTemplateName.MissionScore.ToString()<sp/>||</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.<ref refid="class_m_e_tutorial_scenario_1a2961288d071124d276eea0db09ed3196" kindref="member">GetSelectedNodeIndex</ref>()<sp/>!=<sp/>(int)<ref refid="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" kindref="member">NodeDefinition</ref>.ApplyScore)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.HideAllTutorialSelectors();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canHighlightSetup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_parameter_dynamic_module_list" kindref="compound">MEGUIParameterDynamicModuleList</ref><sp/>list<sp/>=<sp/>tutorialScenario.GetApplyScoreScoreParam()<sp/>as<sp/><ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_parameter_dynamic_module_list" kindref="compound">MEGUIParameterDynamicModuleList</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list.<ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_parameter_dynamic_module_list_1a11801509616737619cf002dbb9f31286" kindref="member">FieldValue</ref>.<ref refid="class_expansions_1_1_missions_1_1_dynamic_module_list_1a4ef9091976b20099843e70dab3368f67" kindref="member">activeModules</ref>.Count<sp/>==<sp/>modifierCountAttended)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_expansions_1_1_missions_1_1_score_module___completion" kindref="compound">ScoreModule_Completion</ref><sp/>scoreModule<sp/>=<sp/>list.FieldValue.activeModules[0]<sp/>as<sp/><ref refid="class_expansions_1_1_missions_1_1_score_module___completion" kindref="compound">ScoreModule_Completion</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scoreModule<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>scoreModule.<ref refid="class_expansions_1_1_missions_1_1_score_module___completion_1a97db9aba419a31af754626bc321180e4" kindref="member">bonusScore</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canHighlightSetup<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canHighlightSetup;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLeaveSetupApplyScoreNode(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>-=<sp/>OnUpdateSetupApplyScoreNode;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>-=<sp/>OnLeaveSetupApplyScoreNode;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockNodeSettings(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>setupApplyScoreNodeHelper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnterSetupApplyScoreNodeHelper(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>+=<sp/>OnUpdateSetupApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>+=<sp/>OnLeaveSetupApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockNodeSettings(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnUpdateSetupApplyScoreNodeHelper()</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canGoToNextStep<sp/>=<sp/>!CanHighlightApplyScoreSetup();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(canGoToNextStep)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLeaveSetupApplyScoreNodeHelper(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>-=<sp/>OnUpdateSetupApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>-=<sp/>OnLeaveSetupApplyScoreNodeHelper;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockNodeSettings(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>linkExplanation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnterLinkExplanation(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>+=<sp/>OnUpdateLinkExplanation;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>+=<sp/>OnLeaveLinkExplanation;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MissionEditorLogic.Instance.OnSelectedGameObjectChange<sp/>+=<sp/>OnSelectedGameObjectChange;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockCanvas(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnUpdateLinkExplanation()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsLinksConnected())</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.GoToNextPage();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLinksConnected()</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tutorialScenario.IsAllNodeLinked(NodeDefinition.ScienceExperiment,<sp/>NodeDefinition.TimeSinceNode)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.IsAllNodeLinked(<ref refid="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" kindref="member">NodeDefinition</ref>.TimeSinceNode,<sp/><ref refid="_apply_score_tutorial_step_8cs_1a346021e5e90abba4c64bc35d5ff579a0" kindref="member">NodeDefinition</ref>.ApplyScore)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.IsAllNodeLinked(NodeDefinition.ApplyScore,<sp/>NodeDefinition.DialogMessage2);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLeaveLinkExplanation(<ref refid="class_k_f_s_m_state" kindref="compound">KFSMState</ref><sp/>kfsmState)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnUpdate<sp/>-=<sp/>OnUpdateLinkExplanation;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorial.CurrentState.OnLeave<sp/>-=<sp/>OnLeaveLinkExplanation;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MissionEditorLogic.Instance.OnSelectedGameObjectChange<sp/>-=<sp/>OnSelectedGameObjectChange;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tutorialScenario.LockCanvas(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Scenarios/IntermediateTutorialStep/ApplyScoreTutorialStep.cs"/>
  </compounddef>
</doxygen>
