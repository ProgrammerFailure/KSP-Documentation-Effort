<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_orbit_8cs" kind="file">
    <compoundname>Orbit.cs</compoundname>
    <innerclass refid="struct_orbit_1_1_c_a_solution_state" prot="public">Orbit::CASolutionState</innerclass>
    <innerclass refid="class_orbit" prot="public">Orbit</innerclass>
    <innerclass refid="struct_orbit_1_1_state" prot="public">Orbit::State</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">[System.Serializable]</highlight></codeline>
<codeline lineno="8" refid="class_orbit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orbit" kindref="compound">Orbit</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>;</highlight></codeline>
<codeline lineno="12"></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac6f6699afd679e068080e7b1a7331f46" kindref="member">Rad2Deg</ref><sp/>=<sp/>180.0<sp/>/<sp/>Math.PI;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref><sp/>=<sp/>Math.PI<sp/>/<sp/>180.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref><sp/><ref refid="class_orbit_1a07d2b33ea5b0e0f6f7ed4d62d6e1fb0b" kindref="member">OrbitFrame</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>vel;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a784354eb69349bbd16e8a88772fd0397" kindref="member">orbitalEnergy</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref>;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ae001aa0cf604ed46802d0b1d625f4918" kindref="member">altitude</ref>;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a73c09432b9052c305b9cf38be231d3c1" kindref="member">orbitalSpeed</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref>;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2ab" kindref="member">ObjectType</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2abafc3a069115b4743ae5f7d6b59cbb7de1" kindref="member">VESSEL</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2abac5632fcf0e9cb5e588690ab58d09cb71" kindref="member">SPACE_DEBRIS</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2abad7c1cff4be00b3ec52649d7d0495f96e" kindref="member">CELESTIAL_BODIES</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2abaaeaf35eaa21154ff8b211ffc6a665fe3" kindref="member">UNKNOWN_MISC</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2abaf7776d9a8724b18bcc6a493253d6f6d8" kindref="member">KERBAL</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[Obsolete(</highlight><highlight class="stringliteral">&quot;Use<sp/>VesselType<sp/>or<sp/>CelestialBodyType<sp/>instead&quot;</highlight><highlight class="normal">)]<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abe9c150ab071f14fe57cd99eda9ba2ab" kindref="member">ObjectType</ref><sp/><ref refid="class_orbit_1a5cfc0a9dd9ee4cb24e14a957eda9c49c" kindref="member">objectType</ref><sp/>=<sp/>ObjectType.UNKNOWN_MISC;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>,<sp/>eccVec,<sp/>an;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abf83362992d32812c1d59e470b1db1cc" kindref="member">semiMinorAxis</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0<sp/>?<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>Math.Sqrt(1.0<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>:<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>Math.Sqrt(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>-<sp/>1.0);<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h.sqrMagnitude<sp/>/<sp/>referenceBody.gravParameter;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1.0<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1.0<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5d2fc15df21ea351193124dc73939192" kindref="member">PeA</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref><sp/>-<sp/>referenceBody.Radius;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a892208eba1cbadbb9e993bd152fe5db1" kindref="member">ApA</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref><sp/>-<sp/>referenceBody.Radius;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sma)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>Math.Abs(sma);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Sqrt(referenceBody.gravParameter<sp/>/<sp/>(a<sp/>*<sp/>a<sp/>*<sp/>a));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abc66e8caaa4c856b3e7db5cff586f8fb" kindref="member">SetOrbit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lan,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>argPe,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mEp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>=<sp/>inc;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>=<sp/>sma;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>=<sp/>lan;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>argPe;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref><sp/>=<sp/>mEp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>=<sp/>body;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a6bee77b7c30964ed62a6a51fd3ce350b" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lan,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>argPe,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mEp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abc66e8caaa4c856b3e7db5cff586f8fb" kindref="member">SetOrbit</ref>(inc,<sp/>e,<sp/>sma,<sp/>lan,<sp/>argPe,<sp/>mEp,<sp/>t,<sp/>body);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>=<sp/>orbit.inclination;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>=<sp/>orbit.eccentricity;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>=<sp/>orbit.semiMajorAxis;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>=<sp/>orbit.LAN;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>orbit.argumentOfPeriapsis;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref><sp/>=<sp/>orbit.meanAnomalyAtEpoch;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref><sp/>=<sp/>orbit.epoch;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>=<sp/>orbit.referenceBody;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a6bee77b7c30964ed62a6a51fd3ce350b" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a6bee77b7c30964ed62a6a51fd3ce350b" kindref="member">Init</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Planetarium.CelestialFrame.OrbitalFrame(<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref>,<sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref>,<sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref>,<sp/>ref<sp/><ref refid="class_orbit_1a07d2b33ea5b0e0f6f7ed4d62d6e1fb0b" kindref="member">OrbitFrame</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>=<sp/>Vector3d.Cross(<ref refid="struct_vector3d_1a71184487bbf0858ef5bde3e1210c4b0d" kindref="member">Vector3d.forward</ref>,<sp/>OrbitFrame.Z);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(an.sqrMagnitude<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>=<sp/><ref refid="struct_vector3d_1a09d484660f89e92b1e17c3218cb83c8a" kindref="member">Vector3d.right</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccVec<sp/>=<sp/>Planetarium.Zup.WorldToLocal(OrbitFrame.X<sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>broken<sp/>if<sp/>eccentricity<sp/>==<sp/>1<sp/>(really<sp/>need<sp/>to<sp/>store<sp/>slr,<sp/>not<sp/>sma)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hh<sp/>=<sp/>referenceBody.gravParameter<sp/>*<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(1<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref><sp/>=<sp/>Planetarium.Zup.WorldToLocal(OrbitFrame.Z<sp/>*<sp/>Math.Sqrt(hh));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref><sp/>=<sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref><sp/>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref><sp/>=<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>=<sp/>(Math.PI<sp/>*<sp/>2d)<sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>/<sp/>(Math.PI<sp/>*<sp/>2d);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>trajectories<sp/>do<sp/>not<sp/>have<sp/>a<sp/>finite<sp/>period<sp/>and<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>percentage<sp/>is<sp/>always<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Object-Dependent<sp/>Calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a579081ebe431007c696e76bf230d7807" kindref="member">SafeAcos</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>issues<sp/>with<sp/>rounding<sp/>errors<sp/>putting<sp/>the<sp/>cos<sp/>of<sp/>the<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outside<sp/>the<sp/>-1..1<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>-1.0)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Acos<sp/>(c);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab02534b069997c1795ada6ba4b21f848" kindref="member">UpdateFromOrbitAtUT</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>toBody)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>state,<sp/>toState;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orbit.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a65d967421827bdf702d51f1517cc1909" kindref="member">HasChild</ref>(toBody))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>going<sp/>in<sp/>a<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA<sp/>=<sp/>orbit.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>state);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(tA))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tA<sp/>=<sp/>toBody.orbit.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>toState);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(tA))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref><sp/>=<sp/>state.pos<sp/>-<sp/>toState.pos;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>state.vel<sp/>-<sp/>toState.vel;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a35f31767a59dbe369e8c85b2a6ae967a" kindref="member">UpdateFromFixedVectors</ref>(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>vel,<sp/>toBody,<sp/>UT);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;in<sp/>i:{inclination:G17},<sp/>e:{eccentricity:G17},<sp/>a:{semiMajorAxis:G17},<sp/>lan:{LAN:G17},<sp/>aPe:{argumentOfPeriapsis:G17},<sp/>maE:{meanAnomalyAtEpoch:G17},<sp/>E:{epoch:G17},<sp/>T:{ObT:G17},<sp/>TE:{ObTAtEpoch:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toBody.<ref refid="class_celestial_body_1a65d967421827bdf702d51f1517cc1909" kindref="member">HasChild</ref>(orbit.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>going<sp/>out<sp/>a<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA<sp/>=<sp/>orbit.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>state);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(tA))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tA<sp/>=<sp/>orbit.referenceBody.orbit.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>toState);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(tA))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref><sp/>=<sp/>state.pos<sp/>+<sp/>toState.pos;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>state.vel<sp/>+<sp/>toState.vel;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a35f31767a59dbe369e8c85b2a6ae967a" kindref="member">UpdateFromFixedVectors</ref>(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>vel,<sp/>toBody,<sp/>UT);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;out<sp/>i:{inclination:G17},<sp/>e:{eccentricity:G17},<sp/>a:{semiMajorAxis:G17},<sp/>lan:{LAN:G17},<sp/>aPe:{argumentOfPeriapsis:G17},<sp/>maE:{meanAnomalyAtEpoch:G17},<sp/>E:{epoch:G17},<sp/>T:{ObT:G17},<sp/>TE:{ObTAtEpoch:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unknown,<sp/>so<sp/>fall<sp/>back<sp/>to<sp/>fully<sp/>absolute<sp/>pos<sp/>and<sp/>vel<sp/>(but<sp/>in<sp/>the<sp/>rotating<sp/>reference<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref><sp/>=<sp/>(orbit.getTruePositionAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>)<sp/>-<sp/>toBody.<ref refid="class_celestial_body_1a96d6a30c1bd4072ebf11168b6b83943f" kindref="member">getTruePositionAtUT</ref>(UT)).xzy;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>(orbit.getOrbitalVelocityAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>)<sp/>+<sp/>orbit.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a415f490a0fb476c6f1621b5e26dc6ede" kindref="member">GetFrameVelAtUT</ref>(UT))<sp/>-<sp/>toBody.<ref refid="class_celestial_body_1a415f490a0fb476c6f1621b5e26dc6ede" kindref="member">GetFrameVelAtUT</ref>(UT);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a3bc2b8f61ee091c7317fb7767076f207" kindref="member">UpdateFromStateVectors</ref>(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>vel,<sp/>toBody,<sp/>UT);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a3bc2b8f61ee091c7317fb7767076f207" kindref="member">UpdateFromStateVectors</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>refBody,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>Planetarium.Zup.LocalToWorld(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>Planetarium.Zup.LocalToWorld(vel);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a35f31767a59dbe369e8c85b2a6ae967a" kindref="member">UpdateFromFixedVectors</ref>(pos,<sp/>vel,<sp/>refBody,<sp/>UT);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(<ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref>))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vecToAN<sp/>=<sp/>Quaternion.AngleAxis(-(float)<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref>,<sp/><ref refid="class_planetarium" kindref="compound">Planetarium</ref>.<ref refid="class_planetarium_1a19176ac1e758068b7f31709ff933aa67" kindref="member">up</ref>)<sp/>*<sp/><ref refid="class_planetarium_1acb8953402ccf0c815294fe6b4c690aa3" kindref="member">Planetarium.right</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vecToPe<sp/>=<sp/>eccVec.xzy;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosArgumentOfPeriapsis<sp/>=<sp/>Vector3d.Dot(vecToAN,<sp/>vecToPe)<sp/>/<sp/>(vecToAN.magnitude<sp/>*<sp/>vecToPe.<ref refid="struct_vector3d_1a69a951470018e7a9aa878644b0649cbd" kindref="member">magnitude</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cosArgumentOfPeriapsis<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cosArgumentOfPeriapsis<sp/>&lt;<sp/>-1)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>180;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>Math.Acos(cosArgumentOfPeriapsis);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a35f31767a59dbe369e8c85b2a6ae967a" kindref="member">UpdateFromFixedVectors</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>refBody,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>=<sp/>refBody;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//specific<sp/>angular<sp/>momentum<sp/>vector<sp/>(also<sp/>defines<sp/>orbital<sp/>plane)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref><sp/>=<sp/>Vector3d.Cross(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>vel);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>.<ref refid="struct_vector3d_1a697f9819e9645e720c4d721891ac64c5" kindref="member">sqrMagnitude</ref>.Equals(0.0d))<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>h<sp/>is<sp/>0,<sp/>then<sp/>this<sp/>is<sp/>a<sp/>radial<sp/>trajectory<sp/>and<sp/>thus<sp/>the<sp/>position<sp/>specifies<sp/>the<sp/>inclination<sp/>so<sp/>long<sp/>as<sp/>it<sp/>too<sp/>is<sp/>not<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>=<sp/>Math.Acos(pos.z<sp/>/<sp/>pos.magnitude)<sp/>*<sp/><ref refid="class_orbit_1ac6f6699afd679e068080e7b1a7331f46" kindref="member">Rad2Deg</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>=<sp/>Vector3d.Cross(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/><ref refid="struct_vector3d_1a71184487bbf0858ef5bde3e1210c4b0d" kindref="member">Vector3d.forward</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>=<sp/>Vector3d.Cross(<ref refid="struct_vector3d_1a71184487bbf0858ef5bde3e1210c4b0d" kindref="member">Vector3d.forward</ref>,<sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.Z<sp/>=<sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref><sp/>/<sp/>h.magnitude;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>=<sp/>UtilMath.AngleBetween(OrbitFrame.Z,<sp/><ref refid="struct_vector3d_1a71184487bbf0858ef5bde3e1210c4b0d" kindref="member">Vector3d.forward</ref>)<sp/>*<sp/><ref refid="class_orbit_1ac6f6699afd679e068080e7b1a7331f46" kindref="member">Rad2Deg</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;an:<sp/>{an.x:G17},<sp/>{an.y:G17},<sp/>{an.z:G17}<sp/>Z:<sp/>{OrbitFrame.Z.x:G17},<sp/>{OrbitFrame.Z.y:G17},<sp/>{OrbitFrame.Z.z:G17}<sp/>i:<sp/>{inclination:G17}<sp/>rLAN:{Math.Atan2<sp/>(an.y,<sp/>an.x)<sp/>*<sp/>Rad2Deg:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(an.<ref refid="struct_vector3d_1a697f9819e9645e720c4d721891ac64c5" kindref="member">sqrMagnitude</ref>.Equals(0.0d))<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ascending<sp/>node<sp/>is<sp/>undefined<sp/>for<sp/>non-radial<sp/>orbits<sp/>that<sp/>are<sp/>paralel<sp/>to<sp/>the<sp/>reference<sp/>plane<sp/>(ie,<sp/>either<sp/>0<sp/>or<sp/>180<sp/>degrees)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>for<sp/>radial<sp/>trajectories<sp/>perpendicular<sp/>to<sp/>the<sp/>reference<sp/>plane,<sp/>so<sp/>point<sp/>the<sp/>ascending<sp/>node<sp/>to<sp/>+X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>=<sp/><ref refid="struct_vector3d_1a09d484660f89e92b1e17c3218cb83c8a" kindref="member">Vector3d.right</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>=<sp/>Math.Atan2<sp/>(an.y,<sp/>an.x)<sp/>*<sp/><ref refid="class_orbit_1ac6f6699afd679e068080e7b1a7331f46" kindref="member">Rad2Deg</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>=<sp/>(LAN<sp/>+<sp/>360.0d)<sp/>%<sp/>360.0d;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>correct<sp/>even<sp/>for<sp/>radial<sp/>trajectories<sp/>as<sp/>the<sp/>orbit<sp/>effectively<sp/>bounces<sp/>off<sp/>the<sp/>focus<sp/>so<sp/>long<sp/>as<sp/>the<sp/>position<sp/>is<sp/>not<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccVec<sp/>=<sp/>(Vector3d.Dot(vel,<sp/>vel)<sp/>/<sp/>refBody.<ref refid="class_celestial_body_1ac26b72af5325ff4d3c83ae9a9b6923d1" kindref="member">gravParameter</ref><sp/>-<sp/>1d<sp/>/<sp/>pos.magnitude)<sp/>*<sp/>pos<sp/>-<sp/>Vector3d.Dot(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,vel)<sp/>*<sp/>vel<sp/>/<sp/>refBody.<ref refid="class_celestial_body_1ac26b72af5325ff4d3c83ae9a9b6923d1" kindref="member">gravParameter</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>=<sp/>eccVec.<ref refid="struct_vector3d_1a69a951470018e7a9aa878644b0649cbd" kindref="member">magnitude</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a784354eb69349bbd16e8a88772fd0397" kindref="member">orbitalEnergy</ref><sp/>=<sp/>(vel.sqrMagnitude<sp/>/<sp/>2d)<sp/>-<sp/>(refBody.gravParameter<sp/>/<sp/>pos.magnitude);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>=<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1d<sp/>?<sp/>-refBody.gravParameter<sp/>/<sp/>(2d<sp/>*<sp/><ref refid="class_orbit_1a784354eb69349bbd16e8a88772fd0397" kindref="member">orbitalEnergy</ref>)<sp/>:<sp/>-<ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref><sp/>/<sp/>(eccVec.<ref refid="struct_vector3d_1a697f9819e9645e720c4d721891ac64c5" kindref="member">sqrMagnitude</ref><sp/>-<sp/>1d);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>.Equals(0.0d))<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>circular<sp/>orbits,<sp/>the<sp/>periapsis<sp/>is<sp/>set<sp/>to<sp/>point<sp/>to<sp/>the<sp/>ascending<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>not<sp/>conflict<sp/>with<sp/>the<sp/>Y<sp/>axis<sp/>of<sp/>radial<sp/>orbits<sp/>being<sp/>the<sp/>ascending<sp/>node<sp/>as<sp/>radial<sp/>orbits<sp/>have<sp/>an<sp/>eccentricity<sp/>of<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>is<sp/>already<sp/>in<sp/>the<sp/>fixed<sp/>frame<sp/>so<sp/>X<sp/>will<sp/>be<sp/>in<sp/>the<sp/>fixed<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.X<sp/>=<sp/>an.normalized;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eccVec<sp/>is<sp/>in<sp/>the<sp/>rotating<sp/>frame<sp/>so<sp/>need<sp/>to<sp/>transform<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.X<sp/>=<sp/>eccVec.normalized;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>UtilMath.AngleBetween(an,<sp/>OrbitFrame.X);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a59179e16405e9c8bbde010595148a6e5" kindref="member">Dot</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1aa6ce5a5a721be04dee0ecfe572a7aa11" kindref="member">Cross</ref>(an,<sp/><ref refid="class_orbit_1a07d2b33ea5b0e0f6f7ed4d62d6e1fb0b" kindref="member">OrbitFrame</ref>.X),<sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>)<sp/>&lt;<sp/>0d)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>Math.PI<sp/>*<sp/>2d<sp/>-<sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>.<ref refid="struct_vector3d_1a697f9819e9645e720c4d721891ac64c5" kindref="member">sqrMagnitude</ref>.Equals(0.0d))<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>is<sp/>already<sp/>in<sp/>the<sp/>fixed<sp/>frame<sp/>so<sp/>Y<sp/>will<sp/>be<sp/>in<sp/>the<sp/>fixed<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.Y<sp/>=<sp/>an.normalized;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>X<sp/>and<sp/>Y<sp/>are<sp/>in<sp/>the<sp/>fixed<sp/>frame,<sp/>so<sp/>Z<sp/>will<sp/>be<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.Z<sp/>=<sp/>Vector3d.Cross(OrbitFrame.X,<sp/>OrbitFrame.Y);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>X<sp/>and<sp/>Z<sp/>are<sp/>in<sp/>the<sp/>fixed<sp/>frame,<sp/>so<sp/>Y<sp/>will<sp/>be<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrame.Y<sp/>=<sp/>Vector3d.Cross(OrbitFrame.Z,<sp/>OrbitFrame.X);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>*=<sp/><ref refid="class_orbit_1ac6f6699afd679e068080e7b1a7331f46" kindref="member">Rad2Deg</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref><sp/>=<sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref><sp/>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>anomalies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>Vector3d.Dot(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>OrbitFrame.X);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>Vector3d.Dot(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>,<sp/>OrbitFrame.Y);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref><sp/>=<sp/>Math.Atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1a9f077951cf686c380063aa83db91d77c" kindref="member">GetEccentricAnomaly</ref>(trueAnomaly);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1a7fae257d1bbfc269846202f9abcb9786" kindref="member">GetMeanAnomaly</ref>(eccentricAnomaly);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref><sp/>=<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0d)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>=<sp/>(Math.PI<sp/>*<sp/>2d)<sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>/<sp/>(Math.PI<sp/>*<sp/>2d);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/>(<ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>+<sp/>1d)<sp/>%<sp/>1d;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>=<sp/>(<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>-<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>)<sp/>%<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>=<sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>-<sp/>(<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>&lt;<sp/>0d)<sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>+=<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/>0d;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>=<sp/>-<ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>takes<sp/>a<sp/>while<sp/>to<sp/>get<sp/>to<sp/>-1/12<sp/>via<sp/>1+2+3+4...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>=<sp/>pos.magnitude;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ae001aa0cf604ed46802d0b1d625f4918" kindref="member">altitude</ref><sp/>=<sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>-<sp/>refBody.Radius;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>time<sp/>of<sp/>last<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref><sp/>=<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.pos<sp/>=<sp/>Planetarium.Zup.WorldToLocal(<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.vel<sp/>=<sp/>Planetarium.Zup.WorldToLocal(vel);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref><sp/>=<sp/>Planetarium.Zup.WorldToLocal(<ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0978d14e83f801a2798288194befea2" kindref="member">debugPos</ref><sp/>=<sp/>this.pos;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugVel<sp/>=<sp/>this.vel;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugH<sp/>=<sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugAN<sp/>=<sp/>an;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugEccVec<sp/>=<sp/>eccVec;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a976df0daec298c6e53737763a82eadde" kindref="member">OrbitFrameX</ref><sp/>=<sp/>OrbitFrame.X;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrameY<sp/>=<sp/>OrbitFrame.Y;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OrbitFrameZ<sp/>=<sp/>OrbitFrame.Z;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_orbit_1a976df0daec298c6e53737763a82eadde" kindref="member">OrbitFrameX</ref>,<sp/>OrbitFrameY,<sp/>OrbitFrameZ;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_orbit_1ab0978d14e83f801a2798288194befea2" kindref="member">debugPos</ref>,<sp/>debugVel,<sp/>debugH,<sp/>debugAN,<sp/>debugEccVec;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a38f211d8f4e8bcc6c1ebbf3a8699e14c" kindref="member">mag</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//private<sp/>Vector3d<sp/>lastPos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a03e49ebe93555ef975c9386db8b0a629" kindref="member">UpdateFromUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>=<sp/><ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>*<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(<ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref>,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref><sp/>=<sp/><ref refid="class_orbit_1ac8d951a58b313116b863583d7a81211e" kindref="member">GetTrueAnomaly</ref>(<ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>=<sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(<ref refid="class_orbit_1aeb8b538891888d3eaa34faadec688960" kindref="member">trueAnomaly</ref>,<sp/>UT,<sp/>out<sp/>pos,<sp/>out<sp/>vel);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a73c09432b9052c305b9cf38be231d3c1" kindref="member">orbitalSpeed</ref><sp/>=<sp/>vel.magnitude;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a784354eb69349bbd16e8a88772fd0397" kindref="member">orbitalEnergy</ref><sp/>=<sp/>((<ref refid="class_orbit_1a73c09432b9052c305b9cf38be231d3c1" kindref="member">orbitalSpeed</ref><sp/>*<sp/><ref refid="class_orbit_1a73c09432b9052c305b9cf38be231d3c1" kindref="member">orbitalSpeed</ref>)<sp/>/<sp/>2.0)<sp/>-<sp/>(referenceBody.gravParameter<sp/>/<sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ae001aa0cf604ed46802d0b1d625f4918" kindref="member">altitude</ref><sp/>=<sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref><sp/>-<sp/>referenceBody.Radius;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/><ref refid="class_orbit_1a1db80d5901822edbb5a886a07af64625" kindref="member">meanAnomaly</ref><sp/>/<sp/>(Math.PI<sp/>*<sp/>2d);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/>(<ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>+<sp/>1d)<sp/>%<sp/>1d;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>=<sp/>(<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>-<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>)<sp/>%<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>=<sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>-<sp/>(<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>&lt;<sp/>0d)<sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>+=<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a05ed6d0e9eb71184910e78d2ec96d5c2" kindref="member">orbitPercent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>=<sp/>-<ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>takes<sp/>a<sp/>while<sp/>to<sp/>get<sp/>to<sp/>-1/12<sp/>via<sp/>1+2+3+4...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1aef8b4e3eee98db84bb4c554ac9b80e3d" kindref="member">timeToAp</ref><sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0978d14e83f801a2798288194befea2" kindref="member">debugPos</ref><sp/>=<sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugVel<sp/>=<sp/>vel;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugH<sp/>=<sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugAN<sp/>=<sp/>an;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugEccVec<sp/>=<sp/>eccVec;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1702e026a605913e62d79fc36d99c59e" kindref="member">GetDTforTrueAnomalyAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="class_orbit_1afc66f770fb3385be68a66f5817154cc7" kindref="member">getObtAtTrueAnomaly</ref>(tA);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/><ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(t1)<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(t2))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>($&quot;[Orbit]<sp/>GetDTforTrueAnomalyAtUT:<sp/>pondering<sp/>imponderables<sp/>tA:{tA}<sp/>UT:{UT}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>double.NaN;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(t1))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(t2))</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-t2;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>t1<sp/>-<sp/>t2;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>closed<sp/>trajectories<sp/>have<sp/>a<sp/>half<sp/>orbit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>dt/period<sp/>is<sp/>always<sp/>in<sp/>the<sp/>range<sp/>-1/2..1/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>-=<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>*<sp/>Math.Floor<sp/>(dt/<ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ae9957d30c9aaf337cb7c418cd017fb96" kindref="member">GetDTforTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wrapAfterSeconds)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a9f077951cf686c380063aa83db91d77c" kindref="member">GetEccentricAnomaly</ref>(tA);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M<sp/>=<sp/><ref refid="class_orbit_1a7fae257d1bbfc269846202f9abcb9786" kindref="member">GetMeanAnomaly</ref>(E);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>M<sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>T<sp/>-<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dT<sp/>&lt;<sp/>-Math.Abs(wrapAfterSeconds))<sp/>dT<sp/>+=<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>T<sp/>-<sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;GetDTforTrueAnomaly:<sp/>e:{0}<sp/>v:{1}<sp/>E:{2}<sp/>M:{3}<sp/>T:{4}<sp/>dT:{5}&quot;,<sp/>eccentricity,<sp/>tA,<sp/>E,<sp/>M,<sp/>T,<sp/>dT));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(dT)<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;dT<sp/>is<sp/>NaN!<sp/>tA:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tA<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>E:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>E<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>M:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>M<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>T:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>T<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>Environment.StackTrace);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dT;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a465681aad2db3169f3b9dfe1189fa09b" kindref="member">GetUTforTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wrapAfterSeconds)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref><sp/>+<sp/>(<ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref><sp/>-<sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref>)<sp/>+<sp/><ref refid="class_orbit_1ae9957d30c9aaf337cb7c418cd017fb96" kindref="member">GetDTforTrueAnomaly</ref>(tA,<sp/>wrapAfterSeconds);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a5cf1851717d50c62ddca45925f52b59d" kindref="member">getPositionAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af636445c2302a4cdd49882de09521b8c" kindref="member">getPositionAtT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a61d5eaa86089f9d8286b7d2631b40aa6" kindref="member">getTruePositionAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a707b89ab04b1581cf3241808e499e4be" kindref="member">getRelativePositionAtUT</ref>(UT).xzy<sp/>+<sp/>referenceBody.getTruePositionAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a707b89ab04b1581cf3241808e499e4be" kindref="member">getRelativePositionAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5e29f8def936608319220a399b9c00fb" kindref="member">getRelativePositionAtT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT));<sp/></highlight><highlight class="comment">//z<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af8b367181b31777066ae1ddc1b20a71f" kindref="member">getOrbitalVelocityAtObT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(UT)<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;getObtAtUT<sp/>infinite<sp/>UT<sp/>on<sp/>elliptical<sp/>orbit<sp/>UT:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>UT.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>returning<sp/>NaN\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>Environment.StackTrace);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>double.NaN;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/>((UT<sp/>-<sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref>)<sp/>+<sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref>)<sp/>%<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T<sp/>&gt;<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref><sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>-=<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(UT))<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-infinite<sp/>time<sp/>is<sp/>valid<sp/>for<sp/>hyperbolic<sp/>trajectories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/><ref refid="class_orbit_1af4c1c2c656a7fecd6095c3bb79883b9d" kindref="member">ObTAtEpoch</ref><sp/>+<sp/>(UT<sp/>-<sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a34b09764e0095dde3a308714b2fb588f" kindref="member">getObTAtMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M<sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1afc66f770fb3385be68a66f5817154cc7" kindref="member">getObtAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a9f077951cf686c380063aa83db91d77c" kindref="member">GetEccentricAnomaly</ref>(tA);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M<sp/>=<sp/><ref refid="class_orbit_1a7fae257d1bbfc269846202f9abcb9786" kindref="member">GetMeanAnomaly</ref>(E);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M<sp/>/<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>()</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(OrbitFrame.Z);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a114d2c198ce639b5e778a8c977b9e009" kindref="member">GetEccVector</ref>()</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(OrbitFrame.X);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a8553fe87878acc91d4578af81dd9053e" kindref="member">GetANVector</ref>()</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(an);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1aa18079fb12ccbe63c1a6b9d75c3ba578" kindref="member">GetVel</ref>()</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>worldVel<sp/>=<sp/><ref refid="class_orbit_1ab9ee803a8190bf425c652185697ae58d" kindref="member">GetFrameVel</ref>()<sp/>-<sp/>(FlightGlobals.ActiveVessel<sp/>?<sp/>FlightGlobals.ActiveVessel.orbitDriver.referenceBody.GetFrameVel()<sp/>:<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">zero</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Vector3d<sp/>worldVel<sp/>=<sp/>GetFrameVel()<sp/>-<sp/>Planetarium.fetch.CurrentMainBody.GetFrameVel();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>(worldVel.<ref refid="struct_vector3d_1a8b074c5ebd03db4c04ba78abc574ec9a" kindref="member">x</ref>,<sp/>worldVel.<ref refid="struct_vector3d_1a0543aef44b01310ddaffebca15106640" kindref="member">z</ref>,<sp/>worldVel.<ref refid="struct_vector3d_1ac0a671a7e3d671fec99088b393079b80" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1add39b52d54c01fff9ccc4b575dd44dec" kindref="member">GetRelativeVel</ref>()</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vel.xzy;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a1aa7e5eaa0ad54f8709d19a2e4d34b3d" kindref="member">GetRotFrameVel</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>refBody)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBody.<ref refid="class_celestial_body_1a50e8205ef327beed9435f564af20399f" kindref="member">rotates</ref><sp/>&amp;&amp;<sp/>refBody.<ref refid="class_celestial_body_1a658b289fed2c1237706612ba44777980" kindref="member">inverseRotation</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Cross(refBody.zUpAngularVelocity,<sp/>-<ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a16bc07300dcb0110d066a3dd9b34c979" kindref="member">GetRotFrameVelAtPos</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>refBody,<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>refPos)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBody.<ref refid="class_celestial_body_1a50e8205ef327beed9435f564af20399f" kindref="member">rotates</ref><sp/>&amp;&amp;<sp/>refBody.<ref refid="class_celestial_body_1a658b289fed2c1237706612ba44777980" kindref="member">inverseRotation</ref>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Cross(refBody.zUpAngularVelocity,<sp/>-refPos);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ab9ee803a8190bf425c652185697ae58d" kindref="member">GetFrameVel</ref>()</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vel<sp/>+<sp/>referenceBody.GetFrameVel();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a346b2dbdd0abba001fb5b5713ae92023" kindref="member">GetFrameVelAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(UT)<sp/>+<sp/>referenceBody.GetFrameVelAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1abcb8420085bdf2915ddd4a3cf9dc5f6f" kindref="member">GetWorldSpaceVel</ref>()</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aa18079fb12ccbe63c1a6b9d75c3ba578" kindref="member">GetVel</ref>()<sp/>-<sp/>(referenceBody.inverseRotation<sp/>?<sp/>referenceBody.getRFrmVel(pos<sp/>+<sp/>referenceBody.position)<sp/>:<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">zero</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a9e1d6060b9feb5e751f4e11005d75a79" kindref="member">GetTimeToPeriapsis</ref>()</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity<sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/>patchEndTransition<sp/>!=<sp/>Orbit.PatchTransitionType.FINAL<sp/>&amp;&amp;<sp/>StartUT<sp/>+<sp/>timeToPe<sp/>&gt;<sp/><ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref><sp/>-<sp/><ref refid="class_orbit_1a3b21188489acf2642322ae49dbbfffff" kindref="member">period</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a34ff4a3db48f9daee26da5cd2e724321" kindref="member">GetRadiusAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a1c63a5a9672195bfa06e07b08a2cb5cf" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a490b94dd45609fae8c646ec8b36f5239" kindref="member">GetOrbitalStateVectorsAtUT</ref>(time,<sp/>out<sp/>pos,<sp/>out<sp/>vel);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos.magnitude;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1f52350258a47d75fa74a38b14874940" kindref="member">GetRadiusAtPhaseAngle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phaseAngle)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosInclination<sp/>=<sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>&lt;<sp/>90f<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af581cf4bae5fc1cecb386f110a1dd2e1" kindref="member">RadiusAtTrueAnomaly</ref>(phaseAngle<sp/>-<sp/>Mathf.Deg2Rad<sp/>*<sp/>(<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>+<sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>*<sp/>cosInclination));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0a0c14d048b2f08069e776e4b07bdd59" kindref="member">PhaseAngle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>longitude)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a50e8205ef327beed9435f564af20399f" kindref="member">rotates</ref><sp/>||<sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1aad3b4bb7a1f92542da13dc231b70b4f3" kindref="member">rotationPeriod</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mathf.Deg2Rad<sp/>*<sp/>(referenceBody.initialRotation<sp/>+<sp/>longitude);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mathf.Deg2Rad<sp/>*<sp/>(referenceBody.initialRotation<sp/>+<sp/>longitude)<sp/>+<sp/>((2.0<sp/>*<sp/>Math.PI)<sp/>/<sp/>referenceBody.rotationPeriod)<sp/>*<sp/>time;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0a0c14d048b2f08069e776e4b07bdd59" kindref="member">PhaseAngle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosInclination<sp/>=<sp/><ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>&lt;<sp/>90f<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>Mathf.Deg2Rad<sp/>*<sp/>(<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>+<sp/><ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>*<sp/>cosInclination)<sp/>+<sp/><ref refid="class_orbit_1a78bdc5c929fd8adfa5f3d0605dc3083b" kindref="member">TrueAnomalyAtUT</ref>(time)<sp/>*<sp/>cosInclination;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(angle<sp/>&gt;<sp/>0<sp/>+<sp/>(2.0<sp/>*<sp/>Math.PI))</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>-=<sp/>2.0<sp/>*<sp/>Math.PI;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(angle<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angle<sp/>+=<sp/>2.0<sp/>*<sp/>Math.PI;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>angle;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ad3ad39e0a466d971b6f284b9508cf2e2" kindref="member">GetRelativeInclination</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>otherOrbit)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Angle(<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>(),<sp/>otherOrbit.GetOrbitNormal());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a3fa3a76f7ed18542adc5982f84d7d2d7" kindref="member">TrueAnomalyFromVector</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vec)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>project<sp/>=<sp/>Vector3d.Exclude(-(<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>().xzy).normalized,<sp/>vec);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vecToAN<sp/>=<sp/>Quaternion.AngleAxis(-(float)<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref>,<sp/><ref refid="class_planetarium" kindref="compound">Planetarium</ref>.<ref refid="class_planetarium_1a19176ac1e758068b7f31709ff933aa67" kindref="member">up</ref>)<sp/>*<sp/><ref refid="class_planetarium_1acb8953402ccf0c815294fe6b4c690aa3" kindref="member">Planetarium.right</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vecToPe<sp/>=<sp/>Quaternion.AngleAxis((float)<ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref>,<sp/>-(<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>().xzy).normalized)<sp/>*<sp/>vecToAN;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecToPe<sp/>=<sp/><ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref><sp/>*<sp/>vecToPe;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angFromPe<sp/>=<sp/>Vector3d.Angle(vecToPe,<sp/>project);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.Abs(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a7609dfe7d7abb8f82ea6c2346b7c402a" kindref="member">Angle</ref>(project,<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1aa6ce5a5a721be04dee0ecfe572a7aa11" kindref="member">Cross</ref>(-(<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>().xzy).normalized,<sp/>vecToPe)))<sp/>&lt;<sp/>90d)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>angFromPe<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(360<sp/>-<sp/>angFromPe)<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Object-Free<sp/>Calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a9f077951cf686c380063aa83db91d77c" kindref="member">GetEccentricAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(tA<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(tA<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0d)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>2<sp/>*<sp/>Math.Atan2<sp/>(Math.Sqrt(1d<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>s,<sp/>Math.Sqrt(1d<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>hyperbolic<sp/>trajectory,<sp/>c<sp/>will<sp/>never<sp/>be<sp/>0<sp/>(assuming<sp/>tA<sp/>is<sp/>even<sp/>close<sp/>to<sp/>valid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>Math.Sqrt<sp/>((<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>-<sp/>1d)<sp/>/<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>+<sp/>1d))<sp/>*<sp/>s<sp/>/<sp/>c;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>1.0d)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>-1.0d)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>double.NegativeInfinity;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E<sp/>=<sp/>2<sp/>artanh(t),<sp/>but<sp/>artanh(t)<sp/>=<sp/>1/2<sp/>ln(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>Math.Log<sp/>((1d<sp/>+<sp/>t)<sp/>/<sp/>(1d<sp/>-<sp/>t));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a7fae257d1bbfc269846202f9abcb9786" kindref="member">GetMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0d)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClampRadiansTwoPI(E<sp/>-<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Sin(E)));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(E))<sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>eccentric<sp/>anomaly<sp/>is<sp/>infinite,<sp/>then<sp/>the<sp/>mean<sp/>anomaly<sp/>will<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Sinh(E))<sp/>-<sp/>E;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af581cf4bae5fc1cecb386f110a1dd2e1" kindref="member">RadiusAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref><sp/>*<sp/>(1d<sp/>/<sp/>(1d<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Cos(tA)));</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//inverse<sp/>of<sp/>the<sp/>above<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TrueAnomalyAtRadiusSimple(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_color_values_8cs_1ae7dd471f9ad36b81822ddf3635effce2ae1e1d3d40573127e9ee0480caf1283d6" kindref="member">R</ref>)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Acos((<ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref><sp/>/<sp/>(R<sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>))<sp/>-<sp/>(1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>));</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Alternate<sp/>formula</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>Math.Acos(((semiMajorAxis<sp/>*<sp/>(1d<sp/>-<sp/>(eccentricity<sp/>*<sp/>eccentricity)))<sp/>/<sp/>(R<sp/>*<sp/>eccentricity))<sp/>-<sp/>(1d<sp/>/<sp/>eccentricity));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4815e40be78123ea7d780d4b91a769c5" kindref="member">TrueAnomalyAtRadius</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trueAnomalyAtRadiusExtreme(R);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trueAnomalyAtRadiusExtreme(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>semilatus<sp/>rectum<sp/>is<sp/>dependent<sp/>on<sp/>h,<sp/>and<sp/>h<sp/>itself<sp/>is<sp/>a<sp/>cross<sp/>of<sp/>position<sp/>and<sp/>velocity<sp/>vectors,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>vectors<sp/>are<sp/>discrete<sp/>to<sp/>each<sp/>frame,<sp/>which<sp/>means<sp/>the<sp/>magnitude<sp/>of<sp/>h<sp/>cannot<sp/>be<sp/>fully<sp/>trusted<sp/>with<sp/>very</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fast<sp/>moving<sp/>objects<sp/>on<sp/>highly<sp/>curved<sp/>tracjectories,<sp/>therefore<sp/>the<sp/>SLR<sp/>will<sp/>also<sp/>shift<sp/>in<sp/>such<sp/>situations.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here,<sp/>we<sp/>calculate<sp/>everything<sp/>independently<sp/>of<sp/>state<sp/>vectors,<sp/>to<sp/>get<sp/>a<sp/>stable<sp/>h<sp/>vector<sp/>and<sp/>hopefully<sp/>a<sp/>stable<sp/>SLR<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref><sp/>=<sp/>Vector3d.Cross(<ref refid="class_orbit_1a5f2ac1a9bc4db2b22c713da399afe72e" kindref="member">getRelativePositionFromEccAnomaly</ref>(<ref refid="class_orbit_1a229e9b865bc1dfc68fb8b0f9733432fc" kindref="member">eccentricAnomaly</ref>),</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1af8b367181b31777066ae1ddc1b20a71f" kindref="member">getOrbitalVelocityAtObT</ref>(<ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SLR<sp/>=<sp/>h.sqrMagnitude<sp/>/<sp/>referenceBody.gravParameter;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clamp<sp/>between<sp/>periapsis<sp/>and<sp/>apoapsis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>Math.Min(Math.Max(<ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref>,<sp/><ref refid="_color_values_8cs_1ae7dd471f9ad36b81822ddf3635effce2ae1e1d3d40573127e9ee0480caf1283d6" kindref="member">R</ref>),<sp/><ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clamp<sp/>periapsis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>Math.Max(<ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref>,<sp/><ref refid="_color_values_8cs_1ae7dd471f9ad36b81822ddf3635effce2ae1e1d3d40573127e9ee0480caf1283d6" kindref="member">R</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Acos((SLR<sp/>/<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="_color_values_8cs_1ae7dd471f9ad36b81822ddf3635effce2ae1e1d3d40573127e9ee0480caf1283d6" kindref="member">R</ref>))<sp/>-<sp/>(1.0<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a78bdc5c929fd8adfa5f3d0605dc3083b" kindref="member">TrueAnomalyAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a34ce6b1e3429c77d7aff72c2205facd6" kindref="member">TrueAnomalyAtT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a34ce6b1e3429c77d7aff72c2205facd6" kindref="member">TrueAnomalyAtT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/>E,<sp/>V;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>T<sp/>*<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(E))</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Double.NaN;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/><ref refid="class_orbit_1ac8d951a58b313116b863583d7a81211e" kindref="member">GetTrueAnomaly</ref>(E);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5c15fe4ae8a61654e3363ca99d6d6398" kindref="member">EccentricAnomalyAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a70e8bb38c78bbc090dcf734e734d5468" kindref="member">EccentricAnomalyAtObT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT));</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a70e8bb38c78bbc090dcf734e734d5468" kindref="member">EccentricAnomalyAtObT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/>E;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>T<sp/>*<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>E;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxError<sp/>=<sp/>1e-7,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>8)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0d<sp/>?<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>0.8d<sp/>?<sp/>solveEccentricAnomalyStd(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>,<sp/>maxError)<sp/>:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solveEccentricAnomalyExtremeEcc(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>,<sp/>maxIterations)<sp/>:</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solveEccentricAnomalyHyp(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>,<sp/>maxError);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solveEccentricAnomalyStd(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxError<sp/>=<sp/>0.0000001)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>Kepler&apos;s<sp/>Equation<sp/>to<sp/>find<sp/>the<sp/>Eccentric<sp/>anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>low-eccentricity<sp/>method<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>du,<sp/>u0,<sp/>l0;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>du<sp/>=<sp/>1.0d;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u0<sp/>=<sp/>M<sp/>+<sp/>ecc<sp/>*<sp/>Math.Sin(M)<sp/>+<sp/>0.5d<sp/>*<sp/>ecc<sp/>*<sp/>ecc<sp/>*<sp/>Math.Sin(2.0d<sp/>*<sp/>M);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Math.Abs(du)<sp/>&gt;<sp/>maxError)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l0<sp/>=<sp/>u0<sp/>-<sp/>ecc<sp/>*<sp/>Math.Sin(u0);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>du<sp/>=<sp/>(M<sp/>-<sp/>l0)<sp/>/<sp/>(1.0d<sp/>-<sp/>ecc<sp/>*<sp/>Math.Cos(u0));</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u0<sp/>+=<sp/>du;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u0;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solveEccentricAnomalyExtremeEcc(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>8)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>Kepler&apos;s<sp/>equation<sp/>by<sp/>the<sp/>Laguerre-Conway<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>much<sp/>more<sp/>stable<sp/>on<sp/>extreme<sp/>eccentricities,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>runs<sp/>on<sp/>a<sp/>fixed<sp/>iteration<sp/>count<sp/>to<sp/>prevent<sp/>lockups.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>M<sp/>+<sp/>0.85d<sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Sign(Math.Sin(M));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,<sp/>c,<sp/>f,<sp/>f1,<sp/>f2;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iterations;<sp/>i++)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>ecc<sp/>*<sp/>Math.Sin(x);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>ecc<sp/>*<sp/>Math.Cos(x);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>x<sp/>-<sp/>s<sp/>-<sp/>M;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>1.0d<sp/>-<sp/>c;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>-5.0d<sp/>*<sp/>f<sp/>/<sp/>(f1<sp/>+<sp/>Math.Sign(f1)<sp/>*<sp/>Math.Sqrt(Math.Abs(16.0d<sp/>*<sp/>f1<sp/>*<sp/>f1<sp/>-<sp/>20.0d<sp/>*<sp/>f<sp/>*<sp/>f2)));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console.WriteLine(e);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>double.NaN;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>solveEccentricAnomalyHyp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecc,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxError<sp/>=<sp/>0.0000001)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>Kepler&apos;s<sp/>Equation<sp/>to<sp/>find<sp/>the<sp/>Eccentric<sp/>anomaly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hyperbolic<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(M))<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trivial<sp/>solution:<sp/>if<sp/>the<sp/>mean<sp/>anomaly<sp/>is<sp/>infinite,<sp/>then<sp/>the<sp/>eccentric<sp/>anomaly<sp/>will<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio<sp/>=<sp/>1.0d;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>2d<sp/>*<sp/>M<sp/>/<sp/>ecc;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a800618943025315f869e4e1f09471012" kindref="member">F</ref><sp/>=<sp/>Math.Log(Math.Sqrt(x<sp/>*<sp/>x<sp/>+<sp/>1d)<sp/>+<sp/>x);<sp/></highlight><highlight class="comment">//danby<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Math.Abs(ratio)<sp/>&gt;<sp/>maxError)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Sinh(<ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a800618943025315f869e4e1f09471012" kindref="member">F</ref>)<sp/>-<sp/>F<sp/>-<sp/>M)<sp/>/<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>Math.Cosh(<ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a800618943025315f869e4e1f09471012" kindref="member">F</ref>)<sp/>-<sp/>1d);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>=<sp/>F<sp/>-<sp/>ratio;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070a800618943025315f869e4e1f09471012" kindref="member">F</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac8d951a58b313116b863583d7a81211e" kindref="member">GetTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E)</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0d)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(E<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(E<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>2d<sp/>*<sp/>Math.Atan2<sp/>(Math.Sqrt(1d<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>s,<sp/>Math.Sqrt(1d<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsPositiveInfinity(E))<sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>Math.Acos<sp/>(-1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNegativeInfinity(E))<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>-Math.Acos<sp/>(-1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sinh(E<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cosh(E<sp/>/<sp/>2d);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/>2d<sp/>*<sp/>Math.Atan2<sp/>(Math.Sqrt(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>+<sp/>1d)<sp/>*<sp/>s,<sp/>Math.Sqrt(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>-<sp/>1d)<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5c7874115d0af36579e349be60fb6488" kindref="member">GetTrueAnomalyOfZupVector</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vector)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rPoint;<sp/></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rPoint<sp/>=<sp/>Planetarium.Zup.LocalToWorld(vector);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>Vector3d.Dot(rPoint,<sp/>OrbitFrame.X);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>Vector3d.Dot(rPoint,<sp/>OrbitFrame.Y);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA<sp/>=<sp/>Math.Atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tA;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af636445c2302a4cdd49882de09521b8c" kindref="member">getPositionAtT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceBody.position<sp/>+<sp/><ref refid="class_orbit_1a5e29f8def936608319220a399b9c00fb" kindref="member">getRelativePositionAtT</ref>(T).xzy;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a5e29f8def936608319220a399b9c00fb" kindref="member">getRelativePositionAtT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/>E,<sp/>V;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>T<sp/>*<sp/><ref refid="class_orbit_1aa891521123ac488722aa8fbeae22a154" kindref="member">meanMotion</ref>;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>=<sp/><ref refid="class_orbit_1ac8d951a58b313116b863583d7a81211e" kindref="member">GetTrueAnomaly</ref>(E);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(V);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a6b5e973dae21adf597b60a7be4bcb865" kindref="member">getPositionFromMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceBody.position<sp/>+<sp/><ref refid="class_orbit_1ad4c030b6013195f4c0bf79753211c4c3" kindref="member">getRelativePositionFromMeanAnomaly</ref>(M).xzy;<sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ad4c030b6013195f4c0bf79753211c4c3" kindref="member">getRelativePositionFromMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E<sp/>=<sp/><ref refid="class_orbit_1a1dc9bbc4be01820b57959c67477941d6" kindref="member">solveEccentricAnomaly</ref>(M,<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>,<sp/>0.00001,<sp/>8);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5f2ac1a9bc4db2b22c713da399afe72e" kindref="member">getRelativePositionFromEccAnomaly</ref>(E);<sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a06cd4216d8bb08dd716d7612d79703d4" kindref="member">TimeOfTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0c0bdbd1973db662a7eb8749284965bf" kindref="member">getUTAtMeanAnomaly</ref>(<ref refid="class_orbit_1a7fae257d1bbfc269846202f9abcb9786" kindref="member">GetMeanAnomaly</ref>(<ref refid="class_orbit_1a9f077951cf686c380063aa83db91d77c" kindref="member">GetEccentricAnomaly</ref>(tA)),<sp/>UT);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0c0bdbd1973db662a7eb8749284965bf" kindref="member">getUTAtMeanAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentMeanAnomaly<sp/>=<sp/><ref refid="class_orbit_1a8fab58e5708a59d0d00e214c3ff6f1bf" kindref="member">getMeanAnomalyAtUT</ref>(UT);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>meanDifference<sp/>=<sp/>M<sp/>-<sp/>currentMeanAnomaly;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanDifference<sp/>=<sp/>ClampRadiansTwoPI(meanDifference);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UT<sp/>+<sp/>(meanDifference<sp/>/<sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a8fab58e5708a59d0d00e214c3ff6f1bf" kindref="member">getMeanAnomalyAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mA<sp/>=<sp/><ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref><sp/>+<sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>)<sp/>*<sp/>(UT<sp/>-<sp/><ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mA<sp/>=<sp/>ClampRadiansTwoPI(mA);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mA;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ac370e5e614c69fb4a0e5799ed4c82be0" kindref="member">getPositionFromEccAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceBody.position<sp/>+<sp/><ref refid="class_orbit_1a5f2ac1a9bc4db2b22c713da399afe72e" kindref="member">getRelativePositionFromEccAnomaly</ref>(E).xzy;<sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a5f2ac1a9bc4db2b22c713da399afe72e" kindref="member">getRelativePositionFromEccAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(Math.Cos(E)<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>Math.Sqrt(1.0d<sp/>-<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>))<sp/>*<sp/>Math.Sin(E);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>-<sp/>Math.Cosh(E));</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>Math.Sqrt((<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>-<sp/>1.0d)<sp/>*<sp/>Math.Sinh(E);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>p<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>x<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(p);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ad4d55b7050b41756a0d78fe2759dd340" kindref="member">getPositionFromEccAnomalyWithSemiMinorAxis</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abf83362992d32812c1d59e470b1db1cc" kindref="member">semiMinorAxis</ref>)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceBody.position<sp/>+<sp/><ref refid="class_orbit_1a499663cc776a408e0195ed1cfc20cfe1" kindref="member">getRelativePositionFromEccAnomalyWithSemiMinorAxis</ref>(E,<sp/>semiMinorAxis).xzy;<sp/></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a499663cc776a408e0195ed1cfc20cfe1" kindref="member">getRelativePositionFromEccAnomalyWithSemiMinorAxis</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semiMinorAxis)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(Math.Cos(E)<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>semiMinorAxis<sp/>*<sp/>Math.Sin(E);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>-<sp/>Math.Cosh(E));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-semiMinorAxis<sp/>*<sp/>Math.Sinh(E);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0.0d;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0.0d;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>p<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>x<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(p);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceBody.position<sp/>+<sp/><ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(tA).xzy;<sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(tA,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worldToLocal)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(tA);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(tA);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref><sp/>/<sp/>(1d<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>p<sp/>=<sp/>r<sp/>*<sp/>(OrbitFrame.X<sp/>*<sp/>c<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!worldToLocal)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(p);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ad294ac97fd1f02017cf96b12952d62b9" kindref="member">getOrbitalSpeedAt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>(<ref refid="class_orbit_1a5e29f8def936608319220a399b9c00fb" kindref="member">getRelativePositionAtT</ref>(time).magnitude);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1fdc4927a896fcf07fc4058565c21ee2" kindref="member">getOrbitalSpeedAtRelativePos</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>relPos)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>(relPos.<ref refid="struct_vector3d_1a69a951470018e7a9aa878644b0649cbd" kindref="member">magnitude</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aa11c8e059c7b44cf2c70ade503cc797e" kindref="member">getOrbitalSpeedAtPos</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>((<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>-<sp/>pos).magnitude);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Sqrt(referenceBody.gravParameter<sp/>*<sp/>((2d<sp/>/<sp/>d)<sp/>-<sp/>(1d<sp/>/<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>)));</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af8b367181b31777066ae1ddc1b20a71f" kindref="member">getOrbitalVelocityAtObT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1b171937b91935a51a6eb29e037096dd" kindref="member">ObT</ref>)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af1dc7551ece75539e20480af3d1ff5d2" kindref="member">getOrbitalVelocityAtTrueAnomaly</ref>(<ref refid="class_orbit_1a34ce6b1e3429c77d7aff72c2205facd6" kindref="member">TrueAnomalyAtT</ref>(ObT));</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af1dc7551ece75539e20480af3d1ff5d2" kindref="member">getOrbitalVelocityAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af1dc7551ece75539e20480af3d1ff5d2" kindref="member">getOrbitalVelocityAtTrueAnomaly</ref>(tA,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1af1dc7551ece75539e20480af3d1ff5d2" kindref="member">getOrbitalVelocityAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worldToLocal)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(tA);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(tA);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hol<sp/>=<sp/>Math.Sqrt(referenceBody.gravParameter<sp/>/<sp/>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(1.0<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)));</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx<sp/>=<sp/>-s<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy<sp/>=<sp/>(c<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>v<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>vx<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>vy;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!worldToLocal)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Planetarium.Zup.WorldToLocal(v);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>these<sp/>really<sp/>shouldn&apos;t<sp/>need<sp/>UT<sp/>passed<sp/>all<sp/>the<sp/>way<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orbits<sp/>should<sp/>not<sp/>need<sp/>to<sp/>know<sp/>about<sp/>the<sp/>rotating<sp/>frame!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a490b94dd45609fae8c646ec8b36f5239" kindref="member">GetOrbitalStateVectorsAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af424a5ecf673ab5cddc4ab328459eb4a" kindref="member">GetOrbitalStateVectorsAtObT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT),<sp/>UT,<sp/>out<sp/>pos,<sp/>out<sp/>vel);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af424a5ecf673ab5cddc4ab328459eb4a" kindref="member">GetOrbitalStateVectorsAtObT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ObT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(<ref refid="class_orbit_1a34ce6b1e3429c77d7aff72c2205facd6" kindref="member">TrueAnomalyAtT</ref>(ObT),<sp/>UT,<sp/>out<sp/>pos,<sp/>out<sp/>vel);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(tA,<sp/>UT,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>out<sp/>pos,<sp/>out<sp/>vel);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worldToLocal,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/>out<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(tA);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(tA);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slr<sp/>=<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(1.0d<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hol<sp/>=<sp/>Math.Sqrt(referenceBody.gravParameter<sp/>/<sp/>slr);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx<sp/>=<sp/>-s<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy<sp/>=<sp/>(c<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>slr<sp/>/<sp/>(1.0d<sp/>+<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px<sp/>=<sp/>c<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py<sp/>=<sp/>s<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worldToLocal)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref><sp/>tZup<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref>();</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Planetarium.ZupAtT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/><ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>,<sp/>ref<sp/>tZup);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>tZup.WorldToLocal(OrbitFrame.X<sp/>*<sp/>px<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>py);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>tZup.WorldToLocal(OrbitFrame.X<sp/>*<sp/>vx<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>vy);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>px<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>py;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>vx<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>vy;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a490b94dd45609fae8c646ec8b36f5239" kindref="member">GetOrbitalStateVectorsAtUT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>state)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af424a5ecf673ab5cddc4ab328459eb4a" kindref="member">GetOrbitalStateVectorsAtObT</ref>(<ref refid="class_orbit_1afa08d2caf7f095264fafecc78f203279" kindref="member">getObtAtUT</ref>(UT),<sp/>out<sp/>state);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1af424a5ecf673ab5cddc4ab328459eb4a" kindref="member">GetOrbitalStateVectorsAtObT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ObT,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>state)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA<sp/>=<sp/><ref refid="class_orbit_1a34ce6b1e3429c77d7aff72c2205facd6" kindref="member">TrueAnomalyAtT</ref>(ObT);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(tA))</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref>();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>double.NaN;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(tA,<sp/>out<sp/>state);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4101a16f3071a90c32ee9f5ced7ca699" kindref="member">GetOrbitalStateVectorsAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>state)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>referenceBody.gravParameter;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l<sp/>=<sp/><ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref><sp/>*<sp/>(1.0d<sp/>-<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>*<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e<sp/>=<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(tA);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>Math.Sin(tA);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1.0d<sp/>+<sp/>e<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>l<sp/>/<sp/>k;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>px<sp/>=<sp/>c<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>py<sp/>=<sp/>s<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>velocity<sp/>(via<sp/>vis-viva<sp/>reexpressed<sp/>using<sp/>l<sp/>instead<sp/>of<sp/>a<sp/>(sma,<sp/>not<sp/>to<sp/>be<sp/>confused<sp/>with<sp/>acceleration))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hol<sp/>=<sp/>Math.Sqrt(u<sp/>/<sp/>l);<sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>=<sp/>sqrt(u*l)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx<sp/>=<sp/>-s<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy<sp/>=<sp/>(c<sp/>+<sp/>e)<sp/>*<sp/>hol;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>-u<sp/>/<sp/>(r<sp/>*<sp/>r);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/>c<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ay<sp/>=<sp/>s<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>jerk<sp/>(da/dt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(u*hol)/(r*r*r);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jx<sp/>=<sp/>j<sp/>*<sp/>((3d<sp/>*<sp/>k<sp/>-<sp/>2d)<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jy<sp/>=<sp/>j<sp/>*<sp/>(2d<sp/>*<sp/>e<sp/>-<sp/>(3d<sp/>*<sp/>k<sp/>-<sp/>2d)<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.pos<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>px<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>py;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.vel<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>vx<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>vy;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.acc<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>ax<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>ay;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.jrk<sp/>=<sp/>OrbitFrame.X<sp/>*<sp/>jx<sp/>+<sp/>OrbitFrame.Y<sp/>*<sp/>jy;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.w<sp/>=<sp/>-a/hol;</highlight><highlight class="comment">//=<sp/>h/r^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a9e14d86434c4168a66f76c72b8997dc5" kindref="member">GetOrbitalCurvatureAtTrueAnomaly</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ta)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>Math.Cos(ta);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e<sp/>=<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>!=<sp/>1)<sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ecp1<sp/>=<sp/>1d<sp/>+<sp/>e<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>never<sp/>be<sp/>negative<sp/>as<sp/>the<sp/>denominator<sp/>varies<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1-e)**2<sp/>to<sp/>(1+e)**2<sp/>as<sp/>c<sp/>varies<sp/>from<sp/>-1<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>fact,<sp/>it<sp/>is<sp/>the<sp/>square<sp/>magnitude<sp/>of<sp/>the<sp/>tangent<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ecp1<sp/>is<sp/>squared<sp/>here<sp/>for<sp/>the<sp/>following<sp/>sqrt<sp/>and<sp/>thus<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eventual<sp/>cube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>ecp1<sp/>*<sp/>ecp1<sp/>/<sp/>(1d<sp/>+<sp/>2d<sp/>*<sp/>e<sp/>*<sp/>c<sp/>+<sp/>e<sp/>*<sp/>e);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>eccentricity<sp/>is<sp/>1,<sp/>the<sp/>above<sp/>simplifies<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>following<sp/>(avoids<sp/>0/0<sp/>and<sp/>thus<sp/>NaN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>(1d<sp/>+<sp/>c)<sp/>/<sp/>2d;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc<sp/>*<sp/>Math.Sqrt<sp/>(cc)<sp/>/<sp/><ref refid="class_orbit_1ac74d23887d855c45e693fcd73c76c389" kindref="member">semiLatusRectum</ref>;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a25250aa80b4e0a63790f34daab8cabb8" kindref="member">Prograde</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(UT).xzy.normalized;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a2faad9feb9a3602f19cb9b72b2e611b8" kindref="member">Radial</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Exclude(<ref refid="class_orbit_1a25250aa80b4e0a63790f34daab8cabb8" kindref="member">Prograde</ref>(UT),<sp/><ref refid="class_orbit_1a1a25af14ae90568a650d1808e5dc25db" kindref="member">Up</ref>(UT)).normalized;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a0191b6d1850e5f93a3843d8649d92eb9" kindref="member">Normal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>().xzy).normalized;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a1a25af14ae90568a650d1808e5dc25db" kindref="member">Up</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a707b89ab04b1581cf3241808e499e4be" kindref="member">getRelativePositionAtUT</ref>(UT).xzy.normalized;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1ad4e3e494f0e420ec63f96a6babdd708e" kindref="member">Horizontal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Exclude(<ref refid="class_orbit_1a1a25af14ae90568a650d1808e5dc25db" kindref="member">Up</ref>(UT),<sp/><ref refid="class_orbit_1a25250aa80b4e0a63790f34daab8cabb8" kindref="member">Prograde</ref>(UT)).normalized;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a274598e0ad761238e7bf069434cea2b4" kindref="member">GetNextPeriapsisTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a06cd4216d8bb08dd716d7612d79703d4" kindref="member">TimeOfTrueAnomaly</ref>(0d,<sp/>UT);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UT<sp/>-<sp/><ref refid="class_orbit_1a8fab58e5708a59d0d00e214c3ff6f1bf" kindref="member">getMeanAnomalyAtUT</ref>(UT)<sp/>/<sp/><ref refid="class_orbit_1af9026aa089a22850e6f84cff36d8a5e0" kindref="member">GetMeanMotion</ref>(<ref refid="class_orbit_1abe25c458c2fbef9902d72d265919df2f" kindref="member">semiMajorAxis</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab1837d261ba8fcf2e1d0394d06098609" kindref="member">GetNextApoapsisTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a06cd4216d8bb08dd716d7612d79703d4" kindref="member">TimeOfTrueAnomaly</ref>(Math.PI,<sp/>UT);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Orbit<sp/>is<sp/>hyperbolic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a1c20b6e5fb0657d066fbc5910792cec8" kindref="member">GetNextTimeOfRadius</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a42541e2cae189b49c45c0208db267949" kindref="member">radius</ref>)</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius<sp/>&lt;<sp/><ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref><sp/>||<sp/>(eccentricity<sp/>&lt;<sp/>1d<sp/>&amp;&amp;<sp/>radius<sp/>&gt;<sp/><ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref>))</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA1<sp/>=<sp/><ref refid="class_orbit_1a4815e40be78123ea7d780d4b91a769c5" kindref="member">TrueAnomalyAtRadius</ref>(radius);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA2<sp/>=<sp/>TwoPI<sp/>-<sp/>tA1;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time1<sp/>=<sp/><ref refid="class_orbit_1a06cd4216d8bb08dd716d7612d79703d4" kindref="member">TimeOfTrueAnomaly</ref>(tA1,<sp/>UT);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time2<sp/>=<sp/><ref refid="class_orbit_1a06cd4216d8bb08dd716d7612d79703d4" kindref="member">TimeOfTrueAnomaly</ref>(tA2,<sp/>UT);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time2<sp/>&lt;<sp/>time1<sp/>&amp;&amp;<sp/>time2<sp/>&gt;<sp/>UT)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time2;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time1;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Orbit<sp/>drawing<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>drawResolution<sp/>=<sp/>15d;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a8c145576d6dae911e8fc8614b45822c1" kindref="member">DrawOrbit</ref>()</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a8c145576d6dae911e8fc8614b45822c1" kindref="member">DrawOrbit</ref>(Color.black);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a8c145576d6dae911e8fc8614b45822c1" kindref="member">DrawOrbit</ref>(Color<sp/>color)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p1,<sp/>p2;<sp/></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1d)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(float<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>period;<sp/>i<sp/>+=<sp/>drawResolution)</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Debug.DrawLine(getPositionAt(i),<sp/>getPositionAt(Mathf.Min(i<sp/>+<sp/>drawResolution,<sp/>period)),<sp/>Color.Lerp(Color.yellow,<sp/>Color.green,<sp/>Mathf.InverseLerp(getOrbitalVelocityAt(0f),<sp/>getOrbitalVelocityAt(period<sp/>/<sp/>2f),<sp/>getOrbitalVelocityAt((float)i))));</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(getPositionAt(i),<sp/>getPositionAt(Mathf.Min(i<sp/>+<sp/>drawResolution,<sp/>period)),<sp/>Color.green);</highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0d;<sp/>i<sp/>&lt;<sp/>Math.PI<sp/>*<sp/>2d;<sp/>i<sp/>+=<sp/>drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/><ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(i<sp/>%<sp/>(Math.PI<sp/>*<sp/>2d));</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/><ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>((i<sp/>+<sp/>drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>)<sp/>%<sp/>(Math.PI<sp/>*<sp/>2d));</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>==<sp/>Color.black)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p1),</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(p2),</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.Lerp(Color.yellow,</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.green,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mathf.InverseLerp((float)<sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>(<ref refid="class_orbit_1a5834c2b15205c7a07032c2b2a653da1b" kindref="member">PeR</ref>),</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><ref refid="class_orbit_1a0793fba394157af2cba7b0c10b7eba19" kindref="member">getOrbitalSpeedAtDistance</ref>(<ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref>),</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><ref refid="class_orbit_1aa11c8e059c7b44cf2c70ade503cc797e" kindref="member">getOrbitalSpeedAtPos</ref>(p1))</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p1),</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(p2),</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(p1,<sp/>p2,<sp/>Color.green);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-Math.Acos(-(1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>))<sp/>+<sp/>(drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>);<sp/>i<sp/>&lt;<sp/>Math.Acos(-(1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>))<sp/>-<sp/>(drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>);<sp/>i<sp/>+=<sp/>drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>==<sp/>Color.black)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(i)),</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(Math.Min(Math.Acos(-(1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)),</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>))),<sp/>Color.green);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(i)),</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(Math.Min(Math.Acos(-(1d<sp/>/<sp/><ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref>)),</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+<sp/>drawResolution<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>))),color);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>position<sp/>radial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(<ref refid="class_orbit_1af636445c2302a4cdd49882de09521b8c" kindref="member">getPositionAtT</ref>(ObT)),</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref>),<sp/>Color.green);<sp/></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawRay(ScaledSpace.LocalToScaledSpace(<ref refid="class_orbit_1af636445c2302a4cdd49882de09521b8c" kindref="member">getPositionAtT</ref>(ObT)),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>(vel.x,<sp/>vel.z,<sp/>vel.y)<sp/>*<sp/>0.01f,<sp/>Color.white);<sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(referenceBody.position),</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>((<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>+<sp/>(Vector3)(an.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref><sp/>*<sp/>radius))),<sp/>Color.cyan);<sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(referenceBody.position),</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(<ref refid="class_orbit_1af636445c2302a4cdd49882de09521b8c" kindref="member">getPositionAtT</ref>(0f)),<sp/>Color.magenta);<sp/></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawRay(ScaledSpace.LocalToScaledSpace(referenceBody.position),</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(<ref refid="class_orbit_1a956c6e129cba9ff4afcdd811d04717f6" kindref="member">h</ref>.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref>),<sp/>Color.blue);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Static<sp/>Creator<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a2b67692f99ee424bab9593d77d9e5672" kindref="member">OrbitFromStateVectors</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>pos,<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vel,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>retOrbit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retOrbit.UpdateFromStateVectors((pos<sp/>-<sp/>body.position).xzy,<sp/>vel.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref>,<sp/>body,<sp/>UT);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retOrbit;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Static<sp/>Orbit<sp/>Maths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1abaf424cdbb82e296b84cc1b14fc4bd89" kindref="member">PeApIntersects</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>primary,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>secondary,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(primary.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>primary.PeR<sp/>&lt;<sp/>secondary.ApR<sp/>+<sp/>threshold;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(secondary.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>secondary.PeR<sp/>&lt;<sp/>primary.ApR<sp/>+<sp/>threshold;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Max(primary.PeR,<sp/>secondary.PeR)<sp/>-<sp/>Math.Min(primary.<ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref>,<sp/>secondary.<ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref>)<sp/>&lt;=<sp/>threshold;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a972427baff761c04d35b6711e127ef8d" kindref="member">FindClosestPointsDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CCD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFs,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FindClosestPointsDelegate<sp/><ref refid="class_orbit_1afdad32c792dae11a2e0c5a8638e9faaf" kindref="member">FindClosestPoints</ref><sp/>=<sp/><ref refid="class_orbit_1a746f4810144638d379e35b929e59bcf5" kindref="member">_FindClosestPoints</ref>;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a746f4810144638d379e35b929e59bcf5" kindref="member">_FindClosestPoints</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CCD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFs,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_game_settings" kindref="compound">GameSettings</ref>.<ref refid="class_game_settings_1a96c657ce1a29376663d0483990714e79" kindref="member">LEGACY_ORBIT_TARGETING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a8f332b91b85d518a967ec662034ddba3" kindref="member">FindClosestPoints_old</ref>(p,<sp/>s,<sp/>ref<sp/>CD,<sp/>ref<sp/>CCD,<sp/>ref<sp/>FFp,<sp/>ref<sp/>FFs,<sp/>ref<sp/>SFp,<sp/>ref<sp/>SFs,<sp/>epsilon,<sp/>maxIterations,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>pc<sp/>=<sp/>Targeting.Conic.Borrow(p);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sc<sp/>=<sp/>Targeting.Conic.Borrow(s);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cepts<sp/>=<sp/>Targeting.Intercepts(pc,<sp/>sc,<sp/>24);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc.Release();</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc.Release();</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cept_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_idx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>cepts.Count;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>count<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;cept<sp/>{0}:<sp/>min:{1}<sp/>v:{2}<sp/>d:{3}&quot;,<sp/>i,<sp/>cepts[i].minimum,<sp/>cepts[i].v,<sp/>cepts[i].info.d.magnitude));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a59179e16405e9c8bbde010595148a6e5" kindref="member">Dot</ref>(cepts[i].tgt.p,<sp/>cepts[i].src.p)<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>orbit<sp/>crossing<sp/>&quot;intercepts&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cepts[i].minimum)<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cept_idx<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cept_idx;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_intercept(cepts[i],<sp/>out<sp/>FFp,<sp/>out<sp/>FFs,<sp/>out<sp/>CD);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>expect<sp/>more<sp/>than<sp/>two<sp/>minima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cept_idx;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_intercept(cepts[i],<sp/>out<sp/>SFp,<sp/>out<sp/>SFs,<sp/>out<sp/>CCD);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cept_idx<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>only<sp/>one<sp/>minima,<sp/>so<sp/>set<sp/>the<sp/>second<sp/>approach&apos;s<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>those<sp/>of<sp/>the<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process_intercept(cepts[first_idx],<sp/>out<sp/>SFp,<sp/>out<sp/>SFs,<sp/>out<sp/>CCD);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Targeting.Sample.ReleaseAllBorrowed();</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Smooth.Pools.ListPool&lt;<ref refid="class_targeting_1_1_sample" kindref="compound">Targeting.Sample</ref>&gt;.Instance.Release(cepts);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cept_idx<sp/>is<sp/>also<sp/>the<sp/>number<sp/>of<sp/>minimal<sp/>intercepts<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cept_idx;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_intercept(<ref refid="class_targeting" kindref="compound">Targeting</ref>.Sample<sp/>cept,<sp/>out<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Vp,<sp/>out<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Vs,<sp/>out<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_discovery_info_8cs_1aa4534f4ef35a5b44e916abb50aa15070af623e75af30e62bbd73d6df5b50bb7b5" kindref="member">D</ref>)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vp<sp/>=<sp/>cept.v;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vs<sp/>=<sp/>cept.orbit2.TrueAnomaly(cept.tgt.p);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>cept.info.d.magnitude;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a8f332b91b85d518a967ec662034ddba3" kindref="member">FindClosestPoints_old</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CCD,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FFs,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SFs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>K;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtPcos,<sp/>dtPsin,<sp/>dtScos,<sp/>dtSsin,<sp/>deltaPrimary,<sp/>deltaSecondary,<sp/>Ir,<sp/>Ip,<sp/>Is;<sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ip<sp/>=<sp/>p.inclination<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Is<sp/>=<sp/>s.inclination<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ir<sp/>=<sp/>Ip<sp/>-<sp/>Is;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>=<sp/>Vector3d.Cross(s.h,<sp/>p.h);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawRay(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),<sp/>K.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref><sp/>*<sp/>1000.0,<sp/>Color.white);<sp/></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yes,<sp/>large<sp/>and<sp/>ugly,<sp/>but<sp/>it<sp/>gives<sp/>a<sp/>proper<sp/>0<sp/>-<sp/>2PI<sp/>angle<sp/>(unlike<sp/>the<sp/>Vector.Angle<sp/>approach)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtPcos<sp/>=<sp/>(1.0<sp/>/<sp/>Math.Sin(Ir))<sp/>*<sp/>(Math.Sin(Ip)<sp/>*<sp/>Math.Cos(Is)<sp/>-<sp/>Math.Sin(Is)<sp/>*<sp/>Math.Cos(Ip)<sp/>*<sp/>Math.Cos(p.LAN<sp/>*<sp/>Deg2Rad<sp/>-<sp/>s.LAN<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>));</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtPsin<sp/>=<sp/>(1.0<sp/>/<sp/>Math.Sin(Ir))<sp/>*<sp/>(Math.Sin(Is)<sp/>*<sp/>Math.Sin(p.<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>*<sp/>Deg2Rad<sp/>-<sp/>s.<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>*<sp/>Deg2Rad));</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaPrimary<sp/>=<sp/>Math.Atan2(dtPsin,<sp/>dtPcos);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtScos<sp/>=<sp/>(1.0<sp/>/<sp/>Math.Sin(Ir))<sp/>*<sp/>(Math.Sin(Ip)<sp/>*<sp/>Math.Cos(Is)<sp/>*<sp/>Math.Cos(p.LAN<sp/>*<sp/>Deg2Rad<sp/>-<sp/>s.LAN<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>)<sp/>-<sp/>Math.Sin(Is)<sp/>*<sp/>Math.Cos(Ip));</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtSsin<sp/>=<sp/>(1.0<sp/>/<sp/>Math.Sin(Ir))<sp/>*<sp/>(Math.Sin(Ip)<sp/>*<sp/>Math.Sin(p.<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>*<sp/>Deg2Rad<sp/>-<sp/>s.<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>*<sp/>Deg2Rad));</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaSecondary<sp/>=<sp/>Math.Atan2(dtSsin,<sp/>dtScos);<sp/></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FFp<sp/>=<sp/>deltaPrimary<sp/>-<sp/>p.argumentOfPeriapsis<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FFs<sp/>=<sp/>deltaSecondary<sp/>-<sp/>s.argumentOfPeriapsis<sp/>*<sp/><ref refid="class_orbit_1a5450b48b2c5f085bf5b66b47fa746218" kindref="member">Deg2Rad</ref>;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(p.referenceBody.position,<sp/>p.getPositionFromTrueAnomaly(FFp),<sp/>Color.cyan);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(s.referenceBody.position,<sp/>s.getPositionFromTrueAnomaly(FFs),<sp/>Color.magenta);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>s.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CD<sp/>=<sp/>Vector3d.Distance(p.getPositionFromTrueAnomaly(FFp),<sp/>s.<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(FFs));</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCD<sp/>=<sp/>CD;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>non-circular<sp/>orbits,<sp/>find<sp/>the<sp/>closest<sp/>point<sp/>using<sp/>a<sp/>binary<sp/>partinioning<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CD<sp/>=<sp/>SolveClosestBSP(ref<sp/>FFp,<sp/>ref<sp/>FFs,<sp/>Ir,<sp/>Math.PI,<sp/>p,<sp/>s,<sp/>0.0001,<sp/>maxIterations,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(p.<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(FFp)),<sp/>Color.green);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(s.referenceBody.position),<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(s.<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(FFs)),<sp/>Color.grey);<sp/></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SFp<sp/>=<sp/>FFp<sp/>+<sp/>Math.PI;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SFs<sp/>=<sp/>FFs<sp/>+<sp/>Math.PI;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(p.referenceBody.position,<sp/>p.getPositionFromTrueAnomaly(FFp),<sp/>Color.blue);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(s.referenceBody.position,<sp/>s.getPositionFromTrueAnomaly(FFs),<sp/>Color.red);<sp/>///&lt;<sp/>setting<sp/>dFs<sp/>to<sp/>half<sp/>PI<sp/>(90°)<sp/>seems<sp/>to<sp/>make<sp/>the<sp/>solver<sp/>always<sp/>find<sp/>the<sp/>second<sp/>point...<sp/>no<sp/>idea<sp/>why,<sp/>but<sp/>it<sp/>seems<sp/>to<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCD<sp/>=<sp/>SolveClosestBSP(ref<sp/>SFp,<sp/>ref<sp/>SFs,<sp/>Ir,<sp/>Math.PI<sp/>*<sp/>0.5,<sp/>p,<sp/>s,<sp/>0.0001,<sp/>maxIterations,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(p.<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(SFp)),<sp/>Color.cyan);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(s.referenceBody.position),<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(s.<ref refid="class_orbit_1af701f03b21ae0acb3dce346acdfa7534" kindref="member">getPositionFromTrueAnomaly</ref>(SFs)),<sp/>Color.magenta);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CD<sp/>=<sp/>Math.Sqrt(CD);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CCD<sp/>=<sp/>Math.Sqrt(CCD);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SolveClosestBSP(ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fp,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ir,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dF,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>probably<sp/>less<sp/>efficient<sp/>than<sp/>the<sp/>newton<sp/>method<sp/>solver,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>that<sp/>one<sp/>failed<sp/>on<sp/>most<sp/>cases,<sp/>and<sp/>this<sp/>one<sp/>seems<sp/>to<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO::<sp/>Find<sp/>a<sp/>way<sp/>to<sp/>reliably<sp/>find<sp/>the<sp/>second<sp/>encounter<sp/>point.<sp/>The<sp/>patched<sp/>conic<sp/>really<sp/>needs<sp/>that<sp/>to<sp/>work<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D1<sp/>=<sp/>double.MaxValue;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D1N<sp/>=<sp/>double.MaxValue;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>D0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dFp<sp/>=<sp/>dF;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dFs<sp/>=<sp/>dF;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.Abs(Ir)<sp/>%<sp/>Math.PI<sp/>*<sp/>2.0<sp/>&gt;<sp/>Math.PI<sp/>*<sp/>0.5)<sp/>dFs<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D0<sp/>=<sp/>(p.getRelativePositionFromTrueAnomaly(Fp)<sp/>-<sp/>s.<ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(Fs)).sqrMagnitude;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dFp<sp/>&gt;<sp/>0.0001<sp/>&amp;&amp;<sp/>iterationCount<sp/>&lt;<sp/>maxIterations)</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>two<sp/>samples.<sp/>One<sp/>at<sp/>current<sp/>test<sp/>point,<sp/>and<sp/>one<sp/>on<sp/>each<sp/>side<sp/>of<sp/>the<sp/>control<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D1<sp/>=<sp/>(p.getRelativePositionFromTrueAnomaly(Fp<sp/>+<sp/>dFp)<sp/>-<sp/>s.<ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(Fs<sp/>+<sp/>dFs)).sqrMagnitude;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D1N<sp/>=<sp/>(p.getRelativePositionFromTrueAnomaly(Fp<sp/>-<sp/>dFp)<sp/>-<sp/>s.<ref refid="class_orbit_1ac8ca7f923a1fd230efc4f088ca7aa4ee" kindref="member">getRelativePositionFromTrueAnomaly</ref>(Fs<sp/>-<sp/>dFs)).sqrMagnitude;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D0<sp/>=<sp/>Math.Min(D0,<sp/>Math.Min(D1,<sp/>D1N));</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D0<sp/>==<sp/>D1)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>positive<sp/>sample<sp/>is<sp/>closest,<sp/>make<sp/>it<sp/>the<sp/>new<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fp<sp/>=<sp/>Fp<sp/>+<sp/>dFp;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fs<sp/>=<sp/>Fs<sp/>+<sp/>dFs;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(D0<sp/>==<sp/>D1N)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>negative<sp/>sample<sp/>is<sp/>closest<sp/>make<sp/>it<sp/>the<sp/>new<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fp<sp/>=<sp/>Fp<sp/>-<sp/>dFp;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fs<sp/>=<sp/>Fs<sp/>-<sp/>dFs;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>halve<sp/>the<sp/>sample<sp/>angles<sp/>for<sp/>the<sp/>next<sp/>iteration,<sp/>to<sp/>converge<sp/>on<sp/>the<sp/>closest<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dFp<sp/>*=<sp/>0.5;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dFs<sp/>*=<sp/>0.5;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount++;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>D0;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796" refid="struct_orbit_1_1_state" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="struct_orbit_1_1_state_1af48a8a80c5cdc7ac8b585a94a03dbf3b" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="struct_orbit_1_1_state_1a0dc473276716a98a9dcee4a744d0063c" kindref="member">vel</ref>;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="struct_orbit_1_1_state_1a22d7df3ea379a17e796876f36b789972" kindref="member">acc</ref>;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="struct_orbit_1_1_state_1a13792ea07d4aa9b183c6429b178d6f7a" kindref="member">jrk</ref>;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state_1af8c7be11ade9c32e42cea3bf50577520" kindref="member">w</ref>;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state_1a0ae27e635dc7b75579a7c71cdcd4f31b" kindref="member">DumpData</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:state:{name}:{UT:G17},<sp/>{pos.x:G17},<sp/>{pos.y:G17},<sp/>{pos.z:G17},<sp/>{vel.x:G17},<sp/>{vel.y:G17},<sp/>{vel.z:G17},<sp/>{acc.x:G17},<sp/>{acc.y:G17},<sp/>{acc.z:G17},<sp/>{jrk.x:G17},<sp/>{jrk.y:G17},<sp/>{jrk.z:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a09f56eb77ca7a04562c25fa74af35999" kindref="member">RelativeStateAtUT</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>pstate,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>sstate,<sp/>out<sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/>rstate,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dump<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>pstate);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.GetOrbitalStateVectorsAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>out<sp/>sstate);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.pos<sp/>=<sp/>pstate.pos<sp/>-<sp/>sstate.pos;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.vel<sp/>=<sp/>pstate.vel<sp/>-<sp/>sstate.vel;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.acc<sp/>=<sp/>pstate.acc<sp/>-<sp/>sstate.acc;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.jrk<sp/>=<sp/>pstate.jrk<sp/>-<sp/>sstate.jrk;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.w<sp/>=<sp/>pstate.w<sp/>-<sp/>sstate.w;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dump<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstate.DumpData(</highlight><highlight class="stringliteral">&quot;Ship&quot;</highlight><highlight class="normal">,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstate.DumpData(</highlight><highlight class="stringliteral">&quot;Mun&quot;</highlight><highlight class="normal">,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate.DumpData(</highlight><highlight class="stringliteral">&quot;rel&quot;</highlight><highlight class="normal">,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Dot<sp/>(rstate.vel,<sp/>rstate.pos);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836" refid="struct_orbit_1_1_c_a_solution_state" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_orbit_1_1_c_a_solution_state" kindref="compound">CASolutionState</ref></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1adf458fcc6dbc73f01c5cb3a456f705fa" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a7a142aea61699c379d72744e312450c2" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a6f7123dc2f49afe0183e2f31b775a7f7" kindref="member">pstate</ref>;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a416f5daf66567a292ac9e2be9d819758" kindref="member">sstate</ref>;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a1e8c3a386bcc8e99dd9ab1d3a0f7f538" kindref="member">rstate</ref>;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ab35f0efc6ecec9e1cfeacdd342737b70" kindref="member">rdv</ref>;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref>,<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a636d7af3e5e129d367d1ccc5ba5d8ef0" kindref="member">ddrdv</ref>;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1aa6202a65dec61a2281c73d31edbe3165" kindref="member">MaxDT</ref>;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref>;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ad44f1811604a3388a06a60e0e68d05ae" kindref="member">CASolutionState</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1aa6202a65dec61a2281c73d31edbe3165" kindref="member">MaxDT</ref>)</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.p<sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1adf458fcc6dbc73f01c5cb3a456f705fa" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.s<sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a7a142aea61699c379d72744e312450c2" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.MaxDT<sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1aa6202a65dec61a2281c73d31edbe3165" kindref="member">MaxDT</ref>;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstate<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref>();</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sstate<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref>();</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstate<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_state" kindref="compound">State</ref>();</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ab35f0efc6ecec9e1cfeacdd342737b70" kindref="member">rdv</ref><sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref><sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a636d7af3e5e129d367d1ccc5ba5d8ef0" kindref="member">ddrdv</ref><sp/>=<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1af3b13755aae6f1f40e73eff9c3ce6820" kindref="member">Update</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dump<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ab35f0efc6ecec9e1cfeacdd342737b70" kindref="member">rdv</ref><sp/><sp/>=<sp/><ref refid="class_orbit_1a09f56eb77ca7a04562c25fa74af35999" kindref="member">RelativeStateAtUT</ref>(p,<sp/>s,<sp/>t,<sp/>out<sp/>pstate,<sp/>out<sp/>sstate,<sp/>out<sp/>rstate,<sp/>dump);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref><sp/>=<sp/>Vector3d.Dot(rstate.vel,<sp/>rstate.vel)<sp/>+<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a59179e16405e9c8bbde010595148a6e5" kindref="member">Dot</ref>(rstate.pos,<sp/>rstate.acc);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a636d7af3e5e129d367d1ccc5ba5d8ef0" kindref="member">ddrdv</ref><sp/>=<sp/>3*Vector3d.Dot(rstate.vel,<sp/>rstate.acc)<sp/>+<sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a59179e16405e9c8bbde010595148a6e5" kindref="member">Dot</ref>(rstate.pos,<sp/>rstate.jrk);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref><sp/>=<sp/>2*rstate.pos.magnitude<sp/>/<sp/>rstate.vel.magnitude;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref><sp/>=<sp/>Math.Min<sp/>(<ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref>,<sp/>MaxDT/2);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dump)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:r:{t:G17},<sp/>{rstate.pos.magnitude:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:r.v:{t:G17},<sp/>{rdv:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:(r.v)&apos;:{t:G17},<sp/>{drdv:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:(r.v)\&quot;:{t:G17},<sp/>{ddrdv:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:maxdt:{t:G17},<sp/>{maxdt:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:T:{t:G17},<sp/>{-maxdt:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:r.v*:{t:G17},<sp/>{Vector3d.Dot(rstate.pos,<sp/>pstate.vel):G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1aa7a1a92e40ca1ef2eaeb2bf9887489c5" kindref="member">targetAhead</ref></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3d.Dot(rstate.pos,<sp/>pstate.vel)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a8af0aa639cd14f2a9063be80e3ca3afe" kindref="member">Halley_dt</ref>()</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<sp/>2*<ref refid="struct_orbit_1_1_c_a_solution_state_1ab35f0efc6ecec9e1cfeacdd342737b70" kindref="member">rdv</ref><sp/>*<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref><sp/>/<sp/>(2*<ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref>*<ref refid="struct_orbit_1_1_c_a_solution_state_1af8e997aca42c96697a083cdad58adc01" kindref="member">drdv</ref><sp/>-<sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1ab35f0efc6ecec9e1cfeacdd342737b70" kindref="member">rdv</ref>*<ref refid="struct_orbit_1_1_c_a_solution_state_1a636d7af3e5e129d367d1ccc5ba5d8ef0" kindref="member">ddrdv</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_orbit_1_1_c_a_solution_state_1a8b2f0001dda5173a4ce58ba7c88adee3" kindref="member">Clamp_dt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Min(<ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref>,<sp/>Math.Max(-<ref refid="struct_orbit_1_1_c_a_solution_state_1ac00ad591b25e1559276170b284aac075" kindref="member">maxdt</ref>,<sp/>dt));</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a7b9ae6d5f5cb9fefd5d800c2eb378568" kindref="member">SynodicPeriod</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>o1,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>o2)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o1.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>o2.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o2.period<sp/>*<sp/>o1.period<sp/>/<sp/>(o2.period<sp/>-<sp/>o1.period);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o1.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o1.period;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o2.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-o2.period;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>double.NaN;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ae1652e9258a36537fd523e608ba6acd1" kindref="member">SolveClosestApproachDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ae1652e9258a36537fd523e608ba6acd1" kindref="member">SolveClosestApproachDelegate</ref><sp/><ref refid="class_orbit_1a1840ca264c9a30e5f29ce71fcb262e5c" kindref="member">SolveClosestApproach</ref><sp/>=<sp/><ref refid="class_orbit_1ac8609b0e232ff24c586f5e0fb9f71516" kindref="member">_SolveClosestApproach</ref>;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac8609b0e232ff24c586f5e0fb9f71516" kindref="member">_SolveClosestApproach</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>point<sp/>of<sp/>closest<sp/>approach<sp/>between<sp/>both<sp/>bodies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>the<sp/>point<sp/>of<sp/>SOI<sp/>transition,<sp/>but<sp/>the<sp/>SOI<sp/>solver<sp/>has<sp/>to<sp/>start<sp/>somewhere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check.<sp/>Don&apos;t<sp/>allow<sp/>UT<sp/>to<sp/>go<sp/>into<sp/>the<sp/>past<sp/>or<sp/>exceed<sp/>the<sp/>max<sp/>time<sp/>ahead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;SolveClosestApproach:<sp/>MinUT:<sp/>{0}<sp/>UT:<sp/>{1}<sp/>MaxUT:<sp/>{2}&quot;,<sp/>MinUT,<sp/>UT,<sp/>MaxUT));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>&lt;<sp/>MinUT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>&gt;<sp/>MaxUT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;p<sp/>u:{0:G17},<sp/>i:{1:G17},<sp/>e:{2:G17},<sp/>a:{3:G17},<sp/>lan:{4:G17},<sp/>aPe:{5:G17},<sp/>maE:{6:G17},<sp/>E:{7:G17},<sp/>T:{8:G17},<sp/>TE:{9:G17}&quot;,<sp/>p.referenceBody.gravParameter,<sp/>p.inclination,<sp/>p.eccentricity,<sp/>p.semiMajorAxis,<sp/>p.LAN,<sp/>p.argumentOfPeriapsis,<sp/>p.meanAnomalyAtEpoch,<sp/>p.epoch,<sp/>p.ObT,<sp/>p.ObTAtEpoch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;s<sp/>u:{0:G17},<sp/>i:{1:G17},<sp/>e:{2:G17},<sp/>a:{3:G17},<sp/>lan:{4:G17},<sp/>aPe:{5:G17},<sp/>maE:{6:G17},<sp/>E:{7:G17},<sp/>T:{8:G17},<sp/>TE:{9:G17}&quot;,<sp/>s.referenceBody.gravParameter,<sp/>s.inclination,<sp/>s.eccentricity,<sp/>s.semiMajorAxis,<sp/>s.LAN,<sp/>s.argumentOfPeriapsis,<sp/>s.meanAnomalyAtEpoch,<sp/>s.epoch,<sp/>s.ObT,<sp/>s.ObTAtEpoch);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;[Orbit]<sp/>SolveClosestApproach<sp/>init<sp/>{UT},<sp/>{MinUT},<sp/>{MaxUT}<sp/>{MaxUT<sp/>-<sp/>MinUT}<sp/>{p.timeToPe<sp/>+<sp/>p.StartUT}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CASolutionState<sp/>state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CASolutionState(p,<sp/>s,<sp/>dT);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:scan&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dT<sp/>=<sp/>(MaxUT<sp/>-<sp/>MinUT)<sp/>/<sp/>250;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(double<sp/>t<sp/>=<sp/>MinUT;<sp/>t<sp/>&lt;<sp/>MaxUT;<sp/>t<sp/>+=<sp/>dT)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>state.Update(t,<sp/>ref<sp/>dummyIter,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>dT<sp/>=<sp/>0.01/state.pstate.w;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:start&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//state.Update(UT,<sp/>ref<sp/>dummyIter,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>d<sp/>=<sp/>s.GetDTforTrueAnomalyAtUT(p.FEVs,<sp/>UT);</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(d<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>secondary<sp/>beat<sp/>the<sp/>primary<sp/>to<sp/>the<sp/>intercept<sp/>point,<sp/>so<sp/>step<sp/>back</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Debug.Log($&quot;data:push:start-mun&quot;);</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CASolutionState<sp/>sec_state<sp/>=<sp/>new<sp/>CASolutionState(p,<sp/>s,<sp/>dT);</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sec_state.Update(UT<sp/>+<sp/>d,<sp/>ref<sp/>iterationCount,<sp/>true);</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//UT<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1a635287ba19e81f46382703691c3bc46c" kindref="member">numClosePoints</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UTforIcept1<sp/>=<sp/>UT<sp/>+<sp/>p.GetDTforTrueAnomalyAtUT(p.FEVp,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UTforIcept2<sp/>=<sp/>UT<sp/>+<sp/>p.GetDTforTrueAnomalyAtUT(p.SEVp,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:start-sec&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(UTforIcept1,<sp/>ref<sp/>iterationCount,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r1<sp/>=<sp/>state.rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rdv1<sp/>=<sp/>state.rdv;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ut<sp/>=<sp/>UTforIcept2;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:start-sec&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(ut,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/>state.rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rdv2<sp/>=<sp/>state.rdv;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;[Orbit]<sp/>UT:{UT}<sp/>r1:{r1}<sp/>ut:{ut}<sp/>r2:{r2}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rdv1<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>rdv2<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>-rdv1<sp/>/(rdv2-rdv1);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>frac<sp/>*<sp/>(ut-<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;[Orbit]<sp/>simple<sp/>intersect<sp/>x0={UT};<sp/>y0={rdv1};<sp/>x1={ut};<sp/>y1={rdv2}<sp/>{dT}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>+=<sp/>dT;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frac<sp/>&lt;<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.rdv<sp/>&gt;<sp/>rdv2<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>a<sp/>bump<sp/>in<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>(UTforIcept1<sp/>+<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.rdv<sp/>&lt;<sp/>rdv1<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>a<sp/>bump<sp/>in<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>(UTforIcept2<sp/>+<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r2<sp/>&lt;<sp/>r1)<sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;[Orbit]<sp/>choosing<sp/>second<sp/>icept&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>ut;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:start-mid&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//state.Update(UT,<sp/>ref<sp/>dummyIter,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:solving&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tgtAhead<sp/>=<sp/>state.targetAhead;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tgtAhead<sp/>&amp;&amp;<sp/>state.rdv<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>state.drdv<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>is<sp/>ahead<sp/>and<sp/>pulling<sp/>away,<sp/>so<sp/>skip<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>-state.rdv<sp/>/<sp/>state.drdv;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>Math.Max(dT,<sp/>-state.maxdt);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>target<sp/>ahead<sp/>and<sp/>pulling<sp/>away<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>iterationCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:dT:{UT:G17},<sp/>{dT:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>+=<sp/>dT;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(state.drdv<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>iterationCount<sp/>&lt;<sp/>maxIterations)</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>state.rdv;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>state.drdv;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>state.ddrdv;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma<sp/>=<sp/>v*v<sp/>-<sp/>2*a*x;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>find<sp/>min<sp/>region<sp/>{0}<sp/>{1}&quot;,<sp/>UT,<sp/>iterationCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.rdv<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>(v<sp/>+<sp/>Math.Sqrt(gamma))<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>state.Clamp_dt(dT);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>ball<sp/>throw<sp/>back<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>tgtAhead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>(v<sp/>+<sp/>Math.Sqrt(gamma))<sp/>/<sp/>a;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>state.Clamp_dt(dT);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>ball<sp/>throw<sp/>forward<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>tgtAhead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.rdv<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>-state.maxdt;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>skip<sp/>back<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>tgtAhead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>state.maxdt;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>skip<sp/>forward<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>tgtAhead);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:dT:{UT:G17},<sp/>{dT:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>+=<sp/>dT;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationCount<sp/>&gt;=<sp/>maxIterations)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_game_settings" kindref="compound">GameSettings</ref>.<ref refid="class_game_settings_1a7e7928a7b962a930ed31babfb840c631" kindref="member">VERBOSE_DEBUG_LOG</ref><sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(</highlight><highlight class="stringliteral">&quot;[Orbit]<sp/>SolveClosestApproach:<sp/>presolve<sp/>took<sp/>too<sp/>many<sp/>iterations,<sp/>bailing<sp/>UT:{0}<sp/>MinUT:{1}<sp/>MaxUT:{2}&quot;</highlight><highlight class="normal">,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>MinUT,<sp/>MaxUT);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>state.Halley_dt();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>+<sp/>dT<sp/>&lt;<sp/>MinUT)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state.MaxDT<sp/>is<sp/>the<sp/>synodic<sp/>period<sp/>unless<sp/>both<sp/>orbits<sp/>are<sp/>open,<sp/>in<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>MinUT<sp/>/is/<sp/>the<sp/>closest<sp/>approach<sp/>that<sp/>can<sp/>be<sp/>reached.<sp/>But<sp/>if<sp/>either<sp/>orbit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>periodic,<sp/>then<sp/>the<sp/>next<sp/>time<sp/>around<sp/>will<sp/>reach<sp/>the<sp/>closest<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MaxUT<sp/>-<sp/>MinUT<sp/>&gt;=<sp/>state.MaxDT<sp/>&amp;&amp;<sp/>(p.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1<sp/>||<sp/>s.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1))</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>+=<sp/>state.MaxDT;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>MinUT;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>+<sp/>dT<sp/>&gt;<sp/>MaxUT)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>MaxUT;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;[Orbit]<sp/>{0}<sp/>{1}&quot;,<sp/>dT,<sp/>UT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:value:dT:{UT:G17},<sp/>{dT:G17}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iterationCount<sp/>&lt;<sp/>maxIterations<sp/>&amp;&amp;<sp/>Math.Abs<sp/>(dT)<sp/>&gt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>+=<sp/>dT;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>Math.Min(MaxUT,<sp/>Math.Max(MinUT,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>));</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.Update(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>ref<sp/>iterationCount,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>state.Halley_dt();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationCount<sp/>&gt;=<sp/>maxIterations<sp/>&amp;&amp;<sp/><ref refid="class_game_settings" kindref="compound">GameSettings</ref>.<ref refid="class_game_settings_1a7e7928a7b962a930ed31babfb840c631" kindref="member">VERBOSE_DEBUG_LOG</ref><sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;[Orbit]<sp/>SolveClosestApproach:<sp/>solve<sp/>took<sp/>too<sp/>many<sp/>iterations,<sp/>result<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;data:push:solution&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//state.Update(UT,<sp/>ref<sp/>dummyIter,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log($&quot;[Orbit]<sp/>SolveClosestApproach<sp/>dT:{dT}<sp/>r:{relp.magnitude}<sp/>v:{relv.magnitude}&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.rstate.pos.magnitude;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>closest<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a743411fc229ef3e491ff20ede6d956d3" kindref="member">SolveSOI_Delegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Rsoi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a743411fc229ef3e491ff20ede6d956d3" kindref="member">SolveSOI_Delegate</ref><sp/><ref refid="class_orbit_1ae853f9d89e014b35cb613e70186a7885" kindref="member">SolveSOI</ref><sp/>=<sp/><ref refid="class_orbit_1a4dac6defabc68eb34b4edf6be29c7b1c" kindref="member">_SolveSOI</ref>;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4dac6defabc68eb34b4edf6be29c7b1c" kindref="member">_SolveSOI</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Rsoi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>State<sp/>pstate;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>State<sp/>sstate;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>State<sp/>rstate;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rdotv;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdotv<sp/>=<sp/><ref refid="class_orbit_1a09f56eb77ca7a04562c25fa74af35999" kindref="member">RelativeStateAtUT</ref>(p,<sp/>s,<sp/>MaxUT,<sp/>out<sp/>pstate,<sp/>out<sp/>sstate,<sp/>out<sp/>rstate);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>rstate.pos.magnitude;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>Rsoi)</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;[Orbit]<sp/>_SolveSOI:<sp/>MaxUT<sp/>puts<sp/>p<sp/>outside<sp/>of<sp/>s&apos;s<sp/>SoI,<sp/>punting<sp/>to<sp/>old<sp/>solver&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a5aa23b8f7f775f682034e35a8115397e" kindref="member">SolveSOI_BSP</ref>(p,<sp/>s,<sp/>ref<sp/>UT,<sp/>dT,<sp/>Rsoi,<sp/>MinUT,<sp/>MaxUT,<sp/>epsilon,<sp/>maxIterations,<sp/>ref<sp/>iterationCount);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>==<sp/>Rsoi)</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exact<sp/>hit<sp/>(very<sp/>unlikely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!Thread.CurrentThread.IsBackground)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Debug.LogFormat(&quot;[Orbit]<sp/>_SolveSOI<sp/>Exact<sp/>Hit!<sp/>Bullseye!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>MaxUT;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>a<sp/>better<sp/>initial<sp/>guess<sp/>for<sp/>intercept<sp/>time:<sp/>the<sp/>time<sp/>taken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>linear<sp/>travel<sp/>from<sp/>the<sp/>SoI<sp/>to<sp/>the<sp/>closest<sp/>approach<sp/>point<sp/>along</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>relative<sp/>velocity<sp/>vector<sp/>at<sp/>the<sp/>closest<sp/>approach.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>the<sp/>relative<sp/>position<sp/>is<sp/>known<sp/>to<sp/>be<sp/>inside<sp/>the<sp/>SoI,<sp/>the<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ray<sp/>is<sp/>guaranteed<sp/>to<sp/>intersect<sp/>with<sp/>the<sp/>sphere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SphereIntersection<sp/>(Rsoi,<sp/>rstate.pos,<sp/>rstate.vel,<sp/>out<sp/>dT,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>from<sp/>above,<sp/>dT<sp/>is<sp/>known<sp/>to<sp/>be<sp/>negative.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>Math.Max(MinUT,<sp/>MaxUT<sp/>+<sp/>dT);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdotv<sp/>=<sp/><ref refid="class_orbit_1a09f56eb77ca7a04562c25fa74af35999" kindref="member">RelativeStateAtUT</ref>(p,<sp/>s,<sp/>UT,<sp/>out<sp/>pstate,<sp/>out<sp/>sstate,<sp/>out<sp/>rstate);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>rstate.pos.sqrMagnitude;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>(Math.Sqrt(dist)<sp/>*<sp/>Rsoi<sp/>-<sp/>dist)<sp/>/<sp/>rdotv;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>+=<sp/>dT;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>Math.Min(MaxUT,<sp/>Math.Max<sp/>(MinUT,<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>));</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!Thread.CurrentThread.IsBackground)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Debug.LogFormat<sp/>(&quot;[Orbit]<sp/>_SolveSOI<sp/>{0},<sp/>{1},<sp/>{2},<sp/>{3},<sp/>{4}&quot;,<sp/>UT,<sp/>rdotv,<sp/>Math.Sqrt(dist)<sp/>-<sp/>Rsoi,<sp/>dT,<sp/>epsilon);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iterationCount++<sp/>&lt;<sp/>maxIterations<sp/>&amp;&amp;<sp/>Math.Abs(dT)<sp/>&gt;<sp/>epsilon);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!Thread.CurrentThread.IsBackground)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(iterationCount<sp/>&lt;<sp/>maxIterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(&quot;[Orbit]<sp/>_SolveSOI<sp/>Found<sp/>SOI<sp/>crossing<sp/>at<sp/>{0}&quot;,<sp/>dT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogFormat(&quot;[Orbit]<sp/>_SolveSOI<sp/>Max<sp/>iterations<sp/>SOI<sp/>crossing<sp/>dT<sp/>is<sp/>{0}&quot;,<sp/>dT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterationCount<sp/>&lt;<sp/>maxIterations;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab23b528edb14d33ab35fd455e74fcc10" kindref="member">SolveSOI_BSPDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Rsoi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab23b528edb14d33ab35fd455e74fcc10" kindref="member">SolveSOI_BSPDelegate</ref><sp/><ref refid="class_orbit_1a5aa23b8f7f775f682034e35a8115397e" kindref="member">SolveSOI_BSP</ref><sp/>=<sp/><ref refid="class_orbit_1ac3e9843cb6ff26151b5ad3240c0d9633" kindref="member">_SolveSOI_BSP</ref>;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac3e9843cb6ff26151b5ad3240c0d9633" kindref="member">_SolveSOI_BSP</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Rsoi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations,<sp/>ref<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>point<sp/>at<sp/>which<sp/>the<sp/>primary<sp/>will<sp/>enter<sp/>the<sp/>SOI<sp/>of<sp/>the<sp/>secondary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>necessarily<sp/>the<sp/>point<sp/>of<sp/>closest<sp/>passage,<sp/>but<sp/>that<sp/>is<sp/>a<sp/>good<sp/>starting<sp/>point<sp/>for<sp/>a<sp/>converging<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>is<sp/>recommended<sp/>for<sp/>MaxUT<sp/>(ie,<sp/>it<sp/>is<sp/>best<sp/>if<sp/>MaxUT<sp/>puts<sp/>p<sp/>inside<sp/>the<sp/>SoI<sp/>and<sp/>not<sp/>past<sp/>the<sp/>other<sp/>side,<sp/>and<sp/>if<sp/>MaxUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>before<sp/>the<sp/>SoI<sp/>encounter,<sp/>then<sp/>the<sp/>time<sp/>of<sp/>crossing<sp/>cannot<sp/>be<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check.<sp/>Don&apos;t<sp/>allow<sp/>UT<sp/>to<sp/>go<sp/>into<sp/>the<sp/>past.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>&lt;<sp/>MinUT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>&gt;<sp/>MaxUT)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>starting<sp/>at<sp/>the<sp/>closest<sp/>encounter<sp/>UT,<sp/>take<sp/>two<sp/>samples,<sp/>one<sp/>before<sp/>and<sp/>one<sp/>after<sp/>the<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>get<sp/>the<sp/>separation<sp/>distance<sp/>at<sp/>each<sp/>of<sp/>the<sp/>times,<sp/>choose<sp/>the<sp/>one<sp/>that&apos;s<sp/>closest<sp/>to<sp/>the<sp/>SOI<sp/>radius<sp/>(not<sp/>the<sp/>smallest<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>make<sp/>the<sp/>selected<sp/>time<sp/>the<sp/>new<sp/>control<sp/>and<sp/>reduce<sp/>the<sp/>sample<sp/>time<sp/>interval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>Repeat<sp/>from<sp/>step<sp/>1<sp/>until<sp/>the<sp/>time<sp/>interval<sp/>is<sp/>smaller<sp/>than<sp/>epsilon<sp/>or<sp/>maxIterations<sp/>is<sp/>exceeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>if<sp/>the<sp/>resulting<sp/>distance<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>SOI<sp/>radius,<sp/>return<sp/>false,<sp/>as<sp/>there<sp/>won&apos;t<sp/>be<sp/>a<sp/>transition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d0,<sp/>d1,<sp/>d1n;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intersects<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqrRsoi<sp/>=<sp/>Rsoi<sp/>*<sp/>Rsoi;<sp/></highlight><highlight class="comment">//<sp/>squared,<sp/>so<sp/>we<sp/>can<sp/>use<sp/>sqrMagnitude<sp/>on<sp/>distances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>Math.Abs((p.getPositionAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>)<sp/>-<sp/>s.<ref refid="class_orbit_1a5cf1851717d50c62ddca45925f52b59d" kindref="member">getPositionAtUT</ref>(UT)).sqrMagnitude<sp/>-<sp/>sqrRsoi);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dT<sp/>&gt;<sp/>epsilon<sp/>&amp;&amp;<sp/>iterationCount<sp/>&lt;<sp/>maxIterations)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>this<sp/>needs<sp/>to<sp/>be<sp/>rewritten<sp/>to<sp/>solve<sp/>for<sp/>the<sp/>zero-crossing<sp/>of<sp/>the<sp/>signed<sp/>distance<sp/>delta<sp/>instead<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>minimum<sp/>of<sp/>the<sp/>absolute<sp/>distance<sp/>delta,<sp/>as<sp/>is<sp/>prefered<sp/>by<sp/>a<sp/>properly<sp/>implemented<sp/>BSP<sp/>solver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>(p.getPositionAtUT(UT<sp/>+<sp/>dT)<sp/>-<sp/>s.<ref refid="class_orbit_1a5cf1851717d50c62ddca45925f52b59d" kindref="member">getPositionAtUT</ref>(UT<sp/>+<sp/>dT)).sqrMagnitude<sp/>-<sp/>sqrRsoi;<sp/></highlight><highlight class="comment">//leading<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1n<sp/>=<sp/>(p.getPositionAtUT(UT<sp/>-<sp/>dT)<sp/>-<sp/>s.<ref refid="class_orbit_1a5cf1851717d50c62ddca45925f52b59d" kindref="member">getPositionAtUT</ref>(UT<sp/>-<sp/>dT)).sqrMagnitude<sp/>-<sp/>sqrRsoi;<sp/></highlight><highlight class="comment">//trailing<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>-<sp/>dT<sp/>&lt;<sp/>MinUT)<sp/>d1n<sp/>=<sp/>double.MaxValue;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>UT<sp/>to<sp/>go<sp/>into<sp/>the<sp/>past<sp/>by<sp/>forcing<sp/>such<sp/>samples<sp/>to<sp/>be<sp/>impossibly<sp/>useless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UT<sp/>+<sp/>dT<sp/>&gt;<sp/>MaxUT)<sp/>d1<sp/>=<sp/>double.MaxValue;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d0<sp/>&lt;<sp/>0<sp/>||<sp/>d1<sp/>&lt;<sp/>0<sp/>||<sp/>d1n<sp/>&lt;<sp/>0)<sp/>intersects<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1<sp/>=<sp/>Math.Abs(d1);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1n<sp/>=<sp/>Math.Abs(d1n);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d0<sp/>=<sp/>Math.Min(d0,<sp/>Math.Min(d1,<sp/>d1n));</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d0<sp/>==<sp/>d1n)</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>UT<sp/>-<sp/>dT;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d0<sp/>==<sp/>d1)</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>UT<sp/>+<sp/>dT;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>/=<sp/>2.0;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount++;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1ab37649714edecc1cad11acfb888ea3a7" kindref="member">LocalToScaledSpace</ref>(p.<ref refid="class_orbit_1a5cf1851717d50c62ddca45925f52b59d" kindref="member">getPositionAtUT</ref>(UT)),<sp/><ref refid="class_x_k_c_d_colors" kindref="compound">XKCDColors</ref>.<ref refid="class_x_k_c_d_colors_1a9d7d295a9dfb352795db0b160d94c7c3" kindref="member">LightMagenta</ref><sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>intersects;<sp/></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a11fcb8283aedfa74536457f9c510cab3" kindref="member">NextCloseApproachTime</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closeTime<sp/>=<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closeDist<sp/>=<sp/>Double.MaxValue;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minTime<sp/>=<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>interval<sp/>=<sp/>p.period;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval<sp/>=<sp/>100<sp/>/<sp/>p.GetMeanMotion(p.semiMajorAxis);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxTime<sp/>=<sp/>UT<sp/>+<sp/>interval;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDivs<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>(maxTime<sp/>-<sp/>minTime)<sp/>/<sp/>numDivs;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numDivs;<sp/>j++)</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>minTime<sp/>+<sp/>j<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>Separation(p,<sp/>s,<sp/>t);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>&lt;<sp/>closeDist)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeDist<sp/>=<sp/>distance;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeTime<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minTime<sp/>=<sp/>Clamp(closeTime<sp/>-<sp/>dt,<sp/>UT,<sp/>UT<sp/>+<sp/>interval);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxTime<sp/>=<sp/>Clamp(closeTime<sp/>+<sp/>dt,<sp/>UT,<sp/>UT<sp/>+<sp/>interval);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closeTime;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Separation(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UT)</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>+<sp/>p.<ref refid="class_orbit_1a707b89ab04b1581cf3241808e499e4be" kindref="member">getRelativePositionAtUT</ref>(UT).xzy)<sp/>-<sp/>(s.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a4901f4a6f4e3d6d77b7b5bcb99ccee58" kindref="member">position</ref><sp/>+<sp/>s.<ref refid="class_orbit_1a707b89ab04b1581cf3241808e499e4be" kindref="member">getRelativePositionAtUT</ref>(UT).xzy)).magnitude;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab83e7d8a23ba4d892dc591acc9359356" kindref="member">AscendingNodeTrueAnomaly</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>patchNormal<sp/>=<sp/>p.GetOrbitNormal();</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>targetNormal<sp/>=<sp/>s.GetOrbitNormal();</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>ascNd<sp/>=<sp/>Vector3d.Cross(targetNormal,<sp/>patchNormal).normalized;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tAAN<sp/>=<sp/>p.GetTrueAnomalyOfZupVector(ascNd);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tAAN;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a03dee5db7592fc5b708570519188a5fe" kindref="member">DescendingNodeTrueAnomaly</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tADN<sp/>=<sp/>((<ref refid="class_orbit_1ab83e7d8a23ba4d892dc591acc9359356" kindref="member">AscendingNodeTrueAnomaly</ref>(p,<sp/>s)<sp/>+<sp/>Math.PI)<sp/>%<sp/>(TwoPI));</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tADN;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a55f1dfd71a9e887509493e18d5958a41" kindref="member">RelativeInclination</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s)</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Math.Abs(Vector3d.Angle(-p.GetOrbitNormal().xzy.normalized,<sp/>-s.<ref refid="class_orbit_1a63364d32f3bcf99789f282306f4f9640" kindref="member">GetOrbitNormal</ref>().xzy.normalized));</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Conic<sp/>Patch<sp/>Stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Sarbian<sp/>:<sp/>This<sp/>should<sp/>be<sp/>moved<sp/>inside<sp/>Trajectory<sp/>to<sp/>make<sp/>a<sp/>clearer<sp/>diff<sp/>between<sp/>Orbit<sp/>and<sp/>Trajectories<sp/>(Orbit<sp/>patch).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conic<sp/>patch<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a635287ba19e81f46382703691c3bc46c" kindref="member">numClosePoints</ref>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ade7707b9a2257e5e7e26c8d1761738b0" kindref="member">FEVp</ref>,<sp/>FEVs,<sp/>SEVp,<sp/>SEVs,<sp/>UTappr,<sp/>UTsoi,<sp/>ClAppr,<sp/>CrAppr,<sp/>ClEctr1,<sp/>ClEctr2;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a3944633fcb850ae8841798ec0652fae3" kindref="member">timeToTransition1</ref>,<sp/>timeToTransition2,<sp/>nearestTT,<sp/>nextTT;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a17edd1d70c66e0840ec82c893ab3066f" kindref="member">secondaryPosAtTransition1</ref>,<sp/>secondaryPosAtTransition2;<sp/></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac7f4667dc18c9713654356a1f98c0b24" kindref="member">closestTgtApprUT</ref>;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a488229aa4687ba8ffcd23dce27353eb6" kindref="member">activePatch</ref>;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a5f05e48da72a07be1af33fc50a4fee67" kindref="member">closestEncounterPatch</ref>;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/><ref refid="class_orbit_1a6e7e502e5355be43f5a24b0faf2ec53b" kindref="member">closestEncounterBody</ref>;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580" kindref="member">EncounterSolutionLevel</ref><sp/><ref refid="class_orbit_1ae51c8d96197de078b6accafdfe7a1629" kindref="member">closestEncounterLevel</ref>;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580" kindref="member">EncounterSolutionLevel</ref></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580ab50339a10e1de285ac99d4c3990b8693" kindref="member">NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580adaaedac409335b869929ea43fa44be5d" kindref="member">ESCAPE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580ac6e4ac3de5686818feb0ed59f9258118" kindref="member">ORBIT_INTERSECT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580a0513be9a6423b8574f34d648167f704c" kindref="member">SOI_INTERSECT_2</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580ad5a45c8eb7fe3f02c0dd38307fde370a" kindref="member">SOI_INTERSECT_1</ref><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712df" kindref="member">PatchTransitionType</ref></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712dfa91d26e4b2b105c74655093c9becd30b7" kindref="member">INITIAL</ref>,</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712dfa6c8361dc2036c0559376fe4957699f69" kindref="member">FINAL</ref>,</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712dfa57c102cdbe7d64441cd90d61d29bcf30" kindref="member">ENCOUNTER</ref>,</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580adaaedac409335b869929ea43fa44be5d" kindref="member">ESCAPE</ref>,</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712dfae30fd3901adfda9dc2260d6370961616" kindref="member">MANEUVER</ref>,</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712dfaa6a0ada307ab4bc89c06a3f57fb1b889" kindref="member">IMPACT</ref></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712df" kindref="member">PatchTransitionType</ref><sp/><ref refid="class_orbit_1a0c6a28f4458081318147943edc2cbe2d" kindref="member">patchStartTransition</ref>;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712df" kindref="member">PatchTransitionType</ref><sp/><ref refid="class_orbit_1afa86ff0e2d192320f397f9507f2a1f37" kindref="member">patchEndTransition</ref>;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a289bbf364e11c48f59c60049eb005f37" kindref="member">nextPatch</ref>,<sp/>previousPatch;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a70cb69eb2b2bb4b98eda368b233d7300" kindref="member">fromE</ref>,<sp/>toE,<sp/>sampleInterval,<sp/>E,<sp/>V,<sp/>fromV,<sp/>toV;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1ac2452179594c0d2625bf85977c28865f" kindref="member">debug_returnFullEllipseTrajectory</ref>;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Random<sp/>Orbit<sp/>Statics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1acc2ff42ec578569f655f3e979fdd25e3" kindref="member">CreateRandomOrbitAround</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.referenceBody<sp/>=<sp/>body;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.eccentricity<sp/>=<sp/>UnityEngine.Random.Range(0.0001f,<sp/>0.01f);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.semiMajorAxis<sp/>=<sp/>UnityEngine.Random.Range(</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)body.<ref refid="class_celestial_body_1ae40cedbbf32545f0ede350d9af745302" kindref="member">atmosphereDepth</ref>,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)body.sphereOfInfluence);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.inclination<sp/>=<sp/>UnityEngine.Random.Range(-0.001f,<sp/>0.001f);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.LAN<sp/>=<sp/>UnityEngine.Random.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.argumentOfPeriapsis<sp/>=<sp/>UnityEngine.Random.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.meanAnomalyAtEpoch<sp/>=<sp/>UnityEngine.Random.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.epoch<sp/>=<sp/>UnityEngine.Random.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.Init();</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orbit;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1acc2ff42ec578569f655f3e979fdd25e3" kindref="member">CreateRandomOrbitAround</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>body,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minAltitude,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAltitude)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.referenceBody<sp/>=<sp/>body;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.eccentricity<sp/>=<sp/>UnityEngine.Random.Range(0.0001f,<sp/>0.01f);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.semiMajorAxis<sp/>=<sp/>UnityEngine.Random.Range((float)minAltitude,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)maxAltitude);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1af1a1cf661f3b6b5690f1797d5a14eff5" kindref="member">inclination</ref><sp/>=<sp/>UnityEngine.<ref refid="_kerbal_e_v_a_8cs_1a832e8f52fca5a678819ec96269dcb532" kindref="member">Random</ref>.Range(-0.001f,<sp/>0.001f);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1a7863ba9163bb190ee831772f37a5dd38" kindref="member">LAN</ref><sp/>=<sp/>UnityEngine.<ref refid="_kerbal_e_v_a_8cs_1a832e8f52fca5a678819ec96269dcb532" kindref="member">Random</ref>.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1a47c12bedc3629c47087fb26d59f08b73" kindref="member">argumentOfPeriapsis</ref><sp/>=<sp/>UnityEngine.<ref refid="_kerbal_e_v_a_8cs_1a832e8f52fca5a678819ec96269dcb532" kindref="member">Random</ref>.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1aefb08c281cc6a7270b83143b4651ecd8" kindref="member">meanAnomalyAtEpoch</ref><sp/>=<sp/>UnityEngine.<ref refid="_kerbal_e_v_a_8cs_1a832e8f52fca5a678819ec96269dcb532" kindref="member">Random</ref>.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1a1856e63f9a84f12a41299bf8073abadb" kindref="member">epoch</ref><sp/>=<sp/>UnityEngine.<ref refid="_kerbal_e_v_a_8cs_1a832e8f52fca5a678819ec96269dcb532" kindref="member">Random</ref>.Range(0.999f,<sp/>1.001f);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.<ref refid="class_orbit_1a6bee77b7c30964ed62a6a51fd3ce350b" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>orbit;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>static<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a55bb7b0ee66465319cb6d15777abc375" kindref="member">CreateRandomOrbitNearby</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>baseOrbit)</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.eccentricity<sp/>=<sp/>baseOrbit.eccentricity<sp/>+<sp/>(UnityEngine.Random.Range(0.0001f,<sp/>0.01f));</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.semiMajorAxis<sp/>=<sp/>baseOrbit.semiMajorAxis<sp/>*<sp/>(UnityEngine.Random.Range(0.999f,<sp/>1.001f));</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.inclination<sp/>=<sp/>baseOrbit.inclination<sp/>+<sp/>(UnityEngine.Random.Range(-0.001f,<sp/>0.001f));</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.LAN<sp/>=<sp/>baseOrbit.LAN<sp/>*<sp/>(UnityEngine.Random.Range(0.999f,<sp/>1.001f));</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.argumentOfPeriapsis<sp/>=<sp/>baseOrbit.argumentOfPeriapsis<sp/>*<sp/>(UnityEngine.Random.Range(0.999f,<sp/>1.001f));</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.meanAnomalyAtEpoch<sp/>=<sp/>baseOrbit.meanAnomalyAtEpoch<sp/>*<sp/>(UnityEngine.Random.Range(0.999f,<sp/>1.001f));</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.epoch<sp/>=<sp/>baseOrbit.epoch;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.referenceBody<sp/>=<sp/>baseOrbit.referenceBody;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.Init();</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orbit;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a43eb22ce15d62d6475a10b15bec9dacd" kindref="member">CreateRandomOrbitFlyBy</ref>(<ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>tgtBody,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>daysToClosestApproach)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>periapsis<sp/>=<sp/>Math.Max(tgtBody.Radius<sp/>*<sp/>3f,<sp/>tgtBody.sphereOfInfluence<sp/>*<sp/>UnityEngine.Random.Range(0f,<sp/>1.1f));</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaV<sp/>=<sp/>UnityEngine.Random.Range(100f,<sp/>500.0f);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a43eb22ce15d62d6475a10b15bec9dacd" kindref="member">CreateRandomOrbitFlyBy</ref>(tgtBody.orbit,<sp/>daysToClosestApproach<sp/>*<sp/>24.0<sp/>*<sp/>60.0<sp/>*<sp/>60.0,<sp/>periapsis,<sp/>deltaV);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_1a43eb22ce15d62d6475a10b15bec9dacd" kindref="member">CreateRandomOrbitFlyBy</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>targetOrbit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeToPeriapsis,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>periapsis,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaVatPeriapsis)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>Planetarium.GetUniversalTime();</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>tgtPosAtPeriapsis<sp/>=<sp/>targetOrbit.getRelativePositionAtUT(now<sp/>+<sp/>timeToPeriapsis);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>tgtVelAtPeriapsis<sp/>=<sp/>targetOrbit.getOrbitalVelocityAtUT(now<sp/>+<sp/>timeToPeriapsis);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>orbit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_1a4b67a7a4ff2add616b3e17fd30b7b5ec" kindref="member">Orbit</ref>();</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rpos<sp/>=<sp/>tgtPosAtPeriapsis<sp/>+<sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>)UnityEngine.Random.onUnitSphere<sp/>*<sp/>periapsis;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rVel<sp/>=<sp/>tgtVelAtPeriapsis<sp/>+<sp/>((tgtVelAtPeriapsis.normalized<sp/>+<sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>)UnityEngine.Random.onUnitSphere)<sp/>*<sp/>deltaVatPeriapsis);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orbit.UpdateFromStateVectors(rpos,<sp/>rVel,<sp/>targetOrbit.referenceBody,<sp/>now<sp/>+<sp/>timeToPeriapsis);</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orbit;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_1a7d8c537e409d2cb88473547a75577715" kindref="member">Swizzle</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>vec)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>vec.y;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.y<sp/>=<sp/>vec.z;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec.z<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/Orbit.cs"/>
  </compounddef>
</doxygen>
