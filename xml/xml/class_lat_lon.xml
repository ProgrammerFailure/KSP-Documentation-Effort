<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_lat_lon" kind="class" prot="public">
    <compoundname>LatLon</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_lat_lon_1a30c9c6f66206a78d62da047d5ba9bad0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double LatLon.GetAltitude</definition>
        <argsstring>(Vector3d bodyPosition, Vector3d worldPos, double Radius)</argsstring>
        <name>GetAltitude</name>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>worldPos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="128" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a45d432a5763d17a4325a9399a971784c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool LatLon.GetImpactLatitudeAndLongitude</definition>
        <argsstring>(double Radius, Vector3d position, Vector3d velocity, out double latitude, out double longitude)</argsstring>
        <name>GetImpactLatitudeAndLongitude</name>
        <param>
          <type>double</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out double</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>out double</type>
          <declname>longitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="106" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="106" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a27c68906d5e9c256f665b3ef8eca675c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double LatLon.GetLatitude</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3d bodyPosition, Vector3d pos, bool isRadial=false)</argsstring>
        <name>GetLatitude</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isRadial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="64" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1aeca170c4ccbd26b48a1d4556f9c4a190" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_unity_engine_1_1_vector2d" kindref="compound">Vector2d</ref></type>
        <definition>static Vector2d LatLon.GetLatitudeAndLongitude</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3d bodyPosition, Vector3d pos, bool isRadial=false)</argsstring>
        <name>GetLatitudeAndLongitude</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isRadial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="88" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="88" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1ab9ed35f3fa144c9f656c71f6841c523a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void LatLon.GetLatLongAlt</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3d bodyPosition, double radius, Vector3d worldPos, out double lat, out double lon, out double alt)</argsstring>
        <name>GetLatLongAlt</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>worldPos</declname>
        </param>
        <param>
          <type>out double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>out double</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>out double</type>
          <declname>alt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="133" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="133" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a75061f4dd900c90f9aa72445cdd669f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double LatLon.GetLongitude</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3d bodyPosition, Vector3d pos, bool isRadial=false)</argsstring>
        <name>GetLongitude</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isRadial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="76" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="76" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1abeaeab8d9ec212f361efc60de268ce5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetRelSurfaceNVector</definition>
        <argsstring>(double lat, double lon)</argsstring>
        <name>GetRelSurfaceNVector</name>
        <param>
          <type>double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lon</declname>
        </param>
        <briefdescription>
<para>Returns a planet-relative normal vector, given latitude and longitude </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A normalized radial vector, relative to planet space</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a6e6f6ce6d5ec117512197d7cbd240bc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetRelSurfacePosition</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, double Radius, double lat, double lon, double alt)</argsstring>
        <name>GetRelSurfacePosition</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alt</declname>
        </param>
        <briefdescription>
<para>Returns a planet-relative position, given the latitude, longitude and altitude. (takes into account planet rotation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a21c7f63076ac0f07a57bac7af3679da7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetRelSurfacePosition</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, double Radius, double lat, double lon, double alt, out Vector3d normal)</argsstring>
        <name>GetRelSurfacePosition</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>out <ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>normal</declname>
        </param>
        <briefdescription>
<para>Returns a planet-relative position, given the latitude, longitude and altitude, and the local normal. (takes into account planet rotation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="42" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a5b97ac0bf826f2df0db225047f5608ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetRelSurfacePosition</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3d bodyPosition, Vector3d worldPosition)</argsstring>
        <name>GetRelSurfacePosition</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>worldPosition</declname>
        </param>
        <briefdescription>
<para>Returns a planet-relative position, given the world space position </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="51" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a28b74e146dda9e977b012b0c52cdcc3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetSurfaceNVector</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, double lat, double lon)</argsstring>
        <name>GetSurfaceNVector</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lon</declname>
        </param>
        <briefdescription>
<para>Returns a normal vector, given the latitude and longitude (takes planet rotation into account) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A normalized vector, pointing to the resulting direction</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="23" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_lat_lon_1a5c5bd37b3bf9a3618afa431b861c7769" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
        <definition>static Vector3d LatLon.GetWorldSurfacePosition</definition>
        <argsstring>(Planetarium.CelestialFrame BodyFrame, Vector3 bodyPosition, double radius, double lat, double lon, double alt)</argsstring>
        <name>GetWorldSurfacePosition</name>
        <param>
          <type><ref refid="struct_planetarium_1_1_celestial_frame" kindref="compound">Planetarium.CelestialFrame</ref></type>
          <declname>BodyFrame</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>bodyPosition</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alt</declname>
        </param>
        <briefdescription>
<para>Returns a worldspace position, given the latitude, longitude and altitude. (takes into account planet rotation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="59" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="59" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" line="6" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/LatLon.cs" bodystart="5" bodyend="149"/>
    <listofallmembers>
      <member refid="class_lat_lon_1a30c9c6f66206a78d62da047d5ba9bad0" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetAltitude</name></member>
      <member refid="class_lat_lon_1a45d432a5763d17a4325a9399a971784c" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetImpactLatitudeAndLongitude</name></member>
      <member refid="class_lat_lon_1a27c68906d5e9c256f665b3ef8eca675c" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetLatitude</name></member>
      <member refid="class_lat_lon_1aeca170c4ccbd26b48a1d4556f9c4a190" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetLatitudeAndLongitude</name></member>
      <member refid="class_lat_lon_1ab9ed35f3fa144c9f656c71f6841c523a" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetLatLongAlt</name></member>
      <member refid="class_lat_lon_1a75061f4dd900c90f9aa72445cdd669f6" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetLongitude</name></member>
      <member refid="class_lat_lon_1abeaeab8d9ec212f361efc60de268ce5c" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetRelSurfaceNVector</name></member>
      <member refid="class_lat_lon_1a6e6f6ce6d5ec117512197d7cbd240bc5" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetRelSurfacePosition</name></member>
      <member refid="class_lat_lon_1a21c7f63076ac0f07a57bac7af3679da7" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetRelSurfacePosition</name></member>
      <member refid="class_lat_lon_1a5b97ac0bf826f2df0db225047f5608ff" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetRelSurfacePosition</name></member>
      <member refid="class_lat_lon_1a28b74e146dda9e977b012b0c52cdcc3a" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetSurfaceNVector</name></member>
      <member refid="class_lat_lon_1a5c5bd37b3bf9a3618afa431b861c7769" prot="public" virt="non-virtual"><scope>LatLon</scope><name>GetWorldSurfacePosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
