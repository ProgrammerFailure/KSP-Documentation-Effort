<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4" kind="struct" prot="public">
    <compoundname>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>K</type>
      </param>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a8dd0a00e8babfb5668200b689af285ba" prot="private" static="no" mutable="no">
        <type><ref refid="struct_smooth_1_1_slinq_1_1_context_1_1_backtrack_detector" kindref="compound">BacktrackDetector</ref></type>
        <definition>BacktrackDetector Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.bd</definition>
        <argsstring></argsstring>
        <name>bd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="36" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1ab737d51a5e566b53fa845f45d0a08f23" prot="private" static="no" mutable="no">
        <type>readonly Lookup&lt; K, T &gt;</type>
        <definition>readonly Lookup&lt;K, T&gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.lookup</definition>
        <argsstring></argsstring>
        <name>lookup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="31" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1adba29ad1006bb47360a4e7cfb51170d9" prot="private" static="no" mutable="no">
        <type>readonly bool</type>
        <definition>readonly bool Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.release</definition>
        <argsstring></argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="32" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a662cc232b46d865e1501813cad0e8f7e" prot="private" static="no" mutable="no">
        <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; K &gt;</type>
        <definition>Linked&lt;K&gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.runner</definition>
        <argsstring></argsstring>
        <name>runner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="33" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a1e1e7d1087ef4f563ab5bd9ab32aa477" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.linkedDispose</definition>
        <argsstring></argsstring>
        <name>linkedDispose</name>
        <initializer>= LinkedDispose</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="55" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a676bb7fa448fdd1dd71e6024d3336115" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.linkedRemove</definition>
        <argsstring></argsstring>
        <name>linkedRemove</name>
        <initializer>= LinkedRemove</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="54" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1aa9e078c72a98ebdc70f296f0b270175c" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.linkedSkip</definition>
        <argsstring></argsstring>
        <name>linkedSkip</name>
        <initializer>= LinkedSkip</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="53" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a02b08be00165870aac0a6262d94afa3f" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.slinqedDispose</definition>
        <argsstring></argsstring>
        <name>slinqedDispose</name>
        <initializer>= SlinqedDispose</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="94" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a2b0797a9b1a5c5acf7617236dc88a573" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.slinqedRemove</definition>
        <argsstring></argsstring>
        <name>slinqedRemove</name>
        <initializer>= SlinqedRemove</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="93" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a7d9d1bb0d1ec3069b33e0924e7442655" prot="private" static="yes" mutable="no">
        <type>readonly Mutator&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>readonly Mutator&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.slinqedSkip</definition>
        <argsstring></argsstring>
        <name>slinqedSkip</name>
        <initializer>= SlinqedSkip</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="92" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a3a50561f7ebfc9b9b7c789053e2e4832" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt; &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>static Slinq&lt;Grouping&lt;K, T, LinkedContext&lt;T&gt; &gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.Slinq</definition>
        <argsstring>(Lookup&lt; K, T &gt; lookup, bool release)</argsstring>
        <name>Slinq</name>
        <param>
          <type>Lookup&lt; K, T &gt;</type>
          <declname>lookup</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="11" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a7b493c628f49a8d08d23808c7d5e7c40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;, GroupByContext&lt; K, T &gt; &gt;</type>
        <definition>static Slinq&lt;Grouping&lt;K, T&gt;, GroupByContext&lt;K, T&gt; &gt; Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.SlinqLinked</definition>
        <argsstring>(Lookup&lt; K, T &gt; lookup, bool release)</argsstring>
        <name>SlinqLinked</name>
        <param>
          <type>Lookup&lt; K, T &gt;</type>
          <declname>lookup</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="19" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a266ad81fd452bc322ca6c063ca229797" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.GroupByContext</definition>
        <argsstring>(Lookup&lt; K, T &gt; lookup, bool release)</argsstring>
        <name>GroupByContext</name>
        <param>
          <type>Lookup&lt; K, T &gt;</type>
          <declname>lookup</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="39" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="39" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1abefffd46ae211dc25ac752271e0cdef6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.LinkedDispose</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T &gt;&gt; next)</argsstring>
        <name>LinkedDispose</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="80" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1accf266b0f6c1816fb4d7c31abbf19ad6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.LinkedRemove</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T &gt;&gt; next)</argsstring>
        <name>LinkedRemove</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="76" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1ab76b213aebfe5a9b8b8d0256db936de9" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.LinkedSkip</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T &gt;&gt; next)</argsstring>
        <name>LinkedSkip</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T &gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="57" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="57" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a0e0437372c3667c987b69e49e4461de7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.SlinqedDispose</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt; next)</argsstring>
        <name>SlinqedDispose</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="119" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1acbcb3a0d1cd76c3a3a8615feaf4dc846" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.SlinqedRemove</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt; next)</argsstring>
        <name>SlinqedRemove</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="115" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a803c1e4f99f9202a7ddcd0dd08004fd0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Slinq.Context.GroupByContext&lt; K, T &gt;.SlinqedSkip</definition>
        <argsstring>(ref GroupByContext&lt; K, T &gt; context, out Option&lt; Grouping&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt; next)</argsstring>
        <name>SlinqedSkip</name>
        <param>
          <type>ref GroupByContext&lt; K, T &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>out <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; <ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_grouping" kindref="compound">Grouping</ref>&lt; K, T, LinkedContext&lt; T &gt;&gt;&gt;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="96" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="96" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" line="7" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Context/ChainedOrPooled/GroupByContext.cs" bodystart="7" bodyend="131"/>
    <listofallmembers>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a8dd0a00e8babfb5668200b689af285ba" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>bd</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a266ad81fd452bc322ca6c063ca229797" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>GroupByContext</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1abefffd46ae211dc25ac752271e0cdef6" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>LinkedDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a1e1e7d1087ef4f563ab5bd9ab32aa477" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>linkedDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a676bb7fa448fdd1dd71e6024d3336115" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>linkedRemove</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1accf266b0f6c1816fb4d7c31abbf19ad6" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>LinkedRemove</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1aa9e078c72a98ebdc70f296f0b270175c" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>linkedSkip</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1ab76b213aebfe5a9b8b8d0256db936de9" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>LinkedSkip</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1ab737d51a5e566b53fa845f45d0a08f23" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>lookup</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1adba29ad1006bb47360a4e7cfb51170d9" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>release</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a662cc232b46d865e1501813cad0e8f7e" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>runner</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a3a50561f7ebfc9b9b7c789053e2e4832" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>Slinq</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a0e0437372c3667c987b69e49e4461de7" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>SlinqedDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a02b08be00165870aac0a6262d94afa3f" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>slinqedDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1acbcb3a0d1cd76c3a3a8615feaf4dc846" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>SlinqedRemove</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a2b0797a9b1a5c5acf7617236dc88a573" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>slinqedRemove</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a803c1e4f99f9202a7ddcd0dd08004fd0" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>SlinqedSkip</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a7d9d1bb0d1ec3069b33e0924e7442655" prot="private" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>slinqedSkip</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_context_1_1_group_by_context_3_01_k_00_01_t_01_4_1a7b493c628f49a8d08d23808c7d5e7c40" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Context::GroupByContext&lt; K, T &gt;</scope><name>SlinqLinked</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
