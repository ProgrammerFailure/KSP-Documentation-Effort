<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking" kind="class" prot="public">
    <compoundname>Expansions::Missions::Tests::TestPartDocking</compoundname>
    <basecompoundref refid="class_expansions_1_1_missions_1_1_test_module" prot="public" virt="non-virtual">Expansions.Missions.TestModule</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2698a5065bb3682c93fa85e97343796d" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Expansions.Missions.Tests.TestPartDocking.dockedUndocked</definition>
        <argsstring></argsstring>
        <name>dockedUndocked</name>
        <briefdescription>
<para>Whether this node is testing docking or undocking </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2979517eb30c5ee85ce1395999bd626d" prot="public" static="no" mutable="no">
        <type><ref refid="class_expansions_1_1_missions_1_1_vessel_part_i_d_pair" kindref="compound">VesselPartIDPair</ref></type>
        <definition>VesselPartIDPair Expansions.Missions.Tests.TestPartDocking.partOnevesselPartIDs</definition>
        <argsstring></argsstring>
        <name>partOnevesselPartIDs</name>
        <briefdescription>
<para>This is the first part to test the dock/undock against </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="22" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a3bec00d3c2207b9860e6b7a7ff030e88" prot="public" static="no" mutable="no">
        <type><ref refid="class_expansions_1_1_missions_1_1_vessel_part_i_d_pair" kindref="compound">VesselPartIDPair</ref></type>
        <definition>VesselPartIDPair Expansions.Missions.Tests.TestPartDocking.partTwovesselPartIDs</definition>
        <argsstring></argsstring>
        <name>partTwovesselPartIDs</name>
        <briefdescription>
<para>This is the second part to test the dock/undock against </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="28" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a8281d31c3512c9a330a46e2bc3c6f81d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Expansions.Missions.Tests.TestPartDocking.firstRunTest</definition>
        <argsstring></argsstring>
        <name>firstRunTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="40" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1aa9774bc0136513d540ed422dd5520921" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Expansions.Missions.Tests.TestPartDocking.testSuccess</definition>
        <argsstring></argsstring>
        <name>testSuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="41" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1af86010c522ed763ed7f74e7b1ecb8a55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.Awake</definition>
        <argsstring>()</argsstring>
        <name>Awake</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a7f1496357d23c9b1ba94259edf92d374">Awake</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="46" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1acbfa4a383aa13e2e30b92696a0f3b5da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.Cleared</definition>
        <argsstring>()</argsstring>
        <name>Cleared</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a215e4dc2e23a0cb3d44d668a9cfbd0fb">Cleared</reimplements>
        <briefdescription>
<para>Method to overide if you want to do stuff when a node is deactivated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="149" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="149" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2f261c3172c706462b8e2672a26ad994" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Expansions.Missions.Tests.TestPartDocking.GetInfo</definition>
        <argsstring>()</argsstring>
        <name>GetInfo</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1ac9856f62e6e0291f7b1beb245f37c381">GetInfo</reimplements>
        <briefdescription>
<para>Get the information to be displayed about the module in the tooltip. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Information to be displayed about the module in the tooltip</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="274" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a9eed488b7f40e06d8753550538370ef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override string</type>
        <definition>override string Expansions.Missions.Tests.TestPartDocking.GetNodeBodyParameterString</definition>
        <argsstring>(BaseAPField field)</argsstring>
        <name>GetNodeBodyParameterString</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a414a7de044d80aa7919fe5acf7a50f1e">GetNodeBodyParameterString</reimplements>
        <param>
          <type><ref refid="class_expansions_1_1_missions_1_1_editor_1_1_base_a_p_field" kindref="compound">BaseAPField</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Returns the string to be displayed when the parameter is displayed in the node body </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="282" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="282" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ae54f4866432b5690ccff4907f7f2b7ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.Initialized</definition>
        <argsstring>()</argsstring>
        <name>Initialized</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a6b2c4f5bce370e72c46076c3f76e4708">Initialized</reimplements>
        <briefdescription>
<para>Method to overide if you want to do stuff when a node is activated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="70" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a1ae55f52ed404f3dca6090871a180d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.Load</definition>
        <argsstring>(ConfigNode node)</argsstring>
        <name>Load</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a7ffc7f4ade1e5ad85bbe7cc6656e585a">Load</reimplements>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="432" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="432" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a9afd4ea1d1a04857c252ad2c9f18aa30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.OnPartPersistentIdChanged</definition>
        <argsstring>(uint vesselID, uint oldId, uint newId)</argsstring>
        <name>OnPartPersistentIdChanged</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a929a1bb741fb6cee3d59cfb928161674">OnPartPersistentIdChanged</reimplements>
        <param>
          <type>uint</type>
          <declname>vesselID</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>oldId</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>newId</declname>
        </param>
        <briefdescription>
<para>Override this function to catch when a parts persistentId is changed, you should use this to update any partID references in your action where the part is in the correct vessel </para>        </briefdescription>
        <detaileddescription>
<para>An example of this occuring is when a vessel is launched from a craft file if there is an existing vessel in the game </para><para>param name=&quot;vesselID&quot;&gt;The persistentID of the vessel</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldId</parametername>
</parameternamelist>
<parameterdescription>
<para>old <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newId</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="228" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="228" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ad1f700093617e65ef4e619ad451d8b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.OnVesselDocking</definition>
        <argsstring>(uint oldId, uint newId)</argsstring>
        <name>OnVesselDocking</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a9690904966d2473f65a84e80d11fac3c">OnVesselDocking</reimplements>
        <param>
          <type>uint</type>
          <declname>oldId</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>newId</declname>
        </param>
        <briefdescription>
<para>Override this function to catch when a vessels persistentId is about to change as a result of a vessel docking event. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldId</parametername>
</parameternamelist>
<parameterdescription>
<para>old <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newId</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="258" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="258" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a88769649fd811668e7d816f64624c23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.OnVesselPersistentIdChanged</definition>
        <argsstring>(uint oldId, uint newId)</argsstring>
        <name>OnVesselPersistentIdChanged</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a8978e0d5378360a1b0485ff2e8f60fa7">OnVesselPersistentIdChanged</reimplements>
        <param>
          <type>uint</type>
          <declname>oldId</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>newId</declname>
        </param>
        <briefdescription>
<para>Override this function to catch when a vessels persistentId is changed, you should use this to update any vesselID references in your action </para>        </briefdescription>
        <detaileddescription>
<para>An example of this occuring is when a vessel is launched from a craft file if there is an existing vessel in the game </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldId</parametername>
</parameternamelist>
<parameterdescription>
<para>old <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newId</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_persistent" kindref="compound">Persistent</ref> ID</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="243" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="243" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a596197aa0b08fa0c7573325a0f24ae83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.RunValidation</definition>
        <argsstring>(MissionEditorValidator validator)</argsstring>
        <name>RunValidation</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a32a4d4b9032553136fadc0cb2a52e2d6">RunValidation</reimplements>
        <param>
          <type><ref refid="class_expansions_1_1_missions_1_1_editor_1_1_mission_editor_validator" kindref="compound">MissionEditorValidator</ref></type>
          <declname>validator</declname>
        </param>
        <briefdescription>
<para>Override this to add custom Validation checks and results to this object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>validator</parametername>
</parameternamelist>
<parameterdescription>
<para>The MissionValidator that the results will be added to</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="379" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="379" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a150c9bd47ba6e858ec5ac195620b2e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Expansions.Missions.Tests.TestPartDocking.Save</definition>
        <argsstring>(ConfigNode node)</argsstring>
        <name>Save</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a5b1e67787ec4a8fb1cad9bb0dad819d3">Save</reimplements>
        <param>
          <type><ref refid="class_config_node" kindref="compound">ConfigNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="420" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="420" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a8eab7fd4d4938016b1753897d2afd4ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_expansions_1_1_missions_1_1_editor_1_1_m_e_g_u_i_drop_down_item" kindref="compound">MEGUIDropDownItem</ref> &gt;</type>
        <definition>List&lt;MEGUIDropDownItem&gt; Expansions.Missions.Tests.TestPartDocking.SetDockedUndockedDropdown</definition>
        <argsstring>()</argsstring>
        <name>SetDockedUndockedDropdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="61" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ad2d6e695c57d2091ae295fc047b2eab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Expansions.Missions.Tests.TestPartDocking.Test</definition>
        <argsstring>()</argsstring>
        <name>Test</name>
        <reimplements refid="class_expansions_1_1_missions_1_1_test_module_1a61bc15b9bf3d61452ba5b7357f62dcbe">Test</reimplements>
        <briefdescription>
<para><ref refid="namespace_expansions_1_1_missions_1_1_tests" kindref="compound">Tests</ref> the parameters needed for this </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Result of test</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="218" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="218" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a1b91df0310b76ac334794527f3addd94" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Expansions.Missions.Tests.TestPartDocking.findPartVesselId</definition>
        <argsstring>(uint partId, out uint vesselId)</argsstring>
        <name>findPartVesselId</name>
        <param>
          <type>uint</type>
          <declname>partId</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>vesselId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="199" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="199" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a90d3c64965b5b4ef80e2b6590c1b8bca" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Expansions.Missions.Tests.TestPartDocking.onPartCouple</definition>
        <argsstring>(GameEvents.FromToAction&lt; Part, Part &gt; partAction)</argsstring>
        <name>onPartCouple</name>
        <param>
          <type>GameEvents.FromToAction&lt; <ref refid="class_part" kindref="compound">Part</ref>, <ref refid="class_part" kindref="compound">Part</ref> &gt;</type>
          <declname>partAction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="157" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a97791c3d1ff7a2a8e67ec2f48c354b79" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Expansions.Missions.Tests.TestPartDocking.onPartUndock</definition>
        <argsstring>(Part part)</argsstring>
        <name>onPartUndock</name>
        <param>
          <type><ref refid="class_part" kindref="compound">Part</ref></type>
          <declname>part</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="162" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1aa06a0534acdaaafa5b348bbcc9130538" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Expansions.Missions.Tests.TestPartDocking.setPlayerCreatedRootParts</definition>
        <argsstring>()</argsstring>
        <name>setPlayerCreatedRootParts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="85" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="85" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a367e7db6f4158e3c080ba39d0c4d388c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Expansions.Missions.Tests.TestPartDocking.testPartVessels</definition>
        <argsstring>()</argsstring>
        <name>testPartVessels</name>
        <briefdescription>
<para>Test the two parts are in the same vessel or not. Find their relevant vessel persistentId and compare. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="170" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="170" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test if two specific parts are docked or undocked (part of the same vessel or not). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="159735">
        <label>TestModule</label>
        <link refid="class_expansions_1_1_missions_1_1_test_module"/>
        <childnode refid="159736" relation="public-inheritance">
        </childnode>
        <childnode refid="159737" relation="public-inheritance">
        </childnode>
        <childnode refid="159738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159734">
        <label>Expansions.Missions.Tests.TestPartDocking</label>
        <link refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking"/>
        <childnode refid="159735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159738">
        <label>ITestModule</label>
        <link refid="interface_expansions_1_1_missions_1_1_i_test_module"/>
        <childnode refid="159737" relation="public-inheritance">
        </childnode>
        <childnode refid="159739" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159736">
        <label>MonoBehaviour</label>
      </node>
      <node id="159737">
        <label>IConfigNode</label>
        <link refid="interface_i_config_node"/>
      </node>
      <node id="159739">
        <label>IMENodeDisplay</label>
        <link refid="interface_expansions_1_1_missions_1_1_i_m_e_node_display"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="159741">
        <label>TestModule</label>
        <link refid="class_expansions_1_1_missions_1_1_test_module"/>
        <childnode refid="159742" relation="public-inheritance">
        </childnode>
        <childnode refid="159743" relation="public-inheritance">
        </childnode>
        <childnode refid="159744" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159740">
        <label>Expansions.Missions.Tests.TestPartDocking</label>
        <link refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking"/>
        <childnode refid="159741" relation="public-inheritance">
        </childnode>
        <childnode refid="159746" relation="usage">
          <edgelabel>partTwovesselPartIDs</edgelabel>
          <edgelabel>partOnevesselPartIDs</edgelabel>
        </childnode>
      </node>
      <node id="159746">
        <label>Expansions.Missions.VesselPartIDPair</label>
        <link refid="class_expansions_1_1_missions_1_1_vessel_part_i_d_pair"/>
        <childnode refid="159743" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159744">
        <label>ITestModule</label>
        <link refid="interface_expansions_1_1_missions_1_1_i_test_module"/>
        <childnode refid="159743" relation="public-inheritance">
        </childnode>
        <childnode refid="159745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="159742">
        <label>MonoBehaviour</label>
      </node>
      <node id="159743">
        <label>IConfigNode</label>
        <link refid="interface_i_config_node"/>
      </node>
      <node id="159745">
        <label>IMENodeDisplay</label>
        <link refid="interface_expansions_1_1_missions_1_1_i_m_e_node_display"/>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" line="15" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/TestModules/TestPartDocking.cs" bodystart="14" bodyend="449"/>
    <listofallmembers>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1ae2e61a18bc56351299ebc5460f36426a" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>AddParameterToNodeBody</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1ae063adc42bc3c589143fa9b30dd4cfd3" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>AddParameterToNodeBodyAndUpdateUI</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a5259628315b3dd282af2712f896984ac" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>AddParameterToSAP</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1af86010c522ed763ed7f74e7b1ecb8a55" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Awake</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1acbfa4a383aa13e2e30b92696a0f3b5da" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Cleared</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1af32001d5d229884712ee65a627214b98" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>ClearTest</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2698a5065bb3682c93fa85e97343796d" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>dockedUndocked</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a1b91df0310b76ac334794527f3addd94" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>findPartVesselId</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a8281d31c3512c9a330a46e2bc3c6f81d" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>firstRunTest</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a13bfdfbe840becfbe4be10cf9fc38744" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetAppObjectiveInfo</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1abf7e6050337e0403f88a6ee9c3904601" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetDisplayName</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2f261c3172c706462b8e2672a26ad994" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetInfo</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a97fd283b63605e89862d28c85b2e9616" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetInternalParametersToDisplay</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a6b068fd6d0b98b818d93634415ae3f84" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetName</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a8deb9f12f97077d6f137f04954724143" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetNode</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a9eed488b7f40e06d8753550538370ef9" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>GetNodeBodyParameterString</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a51f5da19c3972eda679f192e633a0350" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>HasNodeBodyParameter</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1af4255332196c2b29f87f21313c55b100" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>hasOrbit</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1aeb591859f75c5ff550ba115ce4a555c3" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>HasSAPParameter</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a39c2c30034dc6e08feb163bdbf7dac57" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>hasWaypoint</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1abf49c8278b9358e4df70c220e78074b8" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Initialize</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ae54f4866432b5690ccff4907f7f2b7ed" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Initialized</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1af3ab1264a71c24f2a392554494a4022b" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>InitializeTest</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a1ae55f52ed404f3dca6090871a180d79" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Load</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1ad6b5da43b1abe6b5364b7713275f13ce" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>name</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a88ff7e10e5d29046f5a6126ad7647af7" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>node</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a51320fcfbfae8d373c0b1d0d02299766" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>OnDestroy</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a90d3c64965b5b4ef80e2b6590c1b8bca" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>onPartCouple</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a9afd4ea1d1a04857c252ad2c9f18aa30" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>OnPartPersistentIdChanged</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a97791c3d1ff7a2a8e67ec2f48c354b79" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>onPartUndock</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ad1f700093617e65ef4e619ad451d8b23" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>OnVesselDocking</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a88769649fd811668e7d816f64624c23a" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>OnVesselPersistentIdChanged</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1af95c3e2a351e66ce544da6984f3232ea" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>OnVesselsUndocking</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a0273b4d9c9fe72b5ab24a0af031aee65" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>parametersDisplayedInSAP</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a5d3647d94cda37a60d291077f36f3513" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>ParameterSetupComplete</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a2979517eb30c5ee85ce1395999bd626d" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>partOnevesselPartIDs</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a3bec00d3c2207b9860e6b7a7ff030e88" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>partTwovesselPartIDs</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1afdd91abcc27b33e6875df5003017feaf" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RemoveParameterFromNodeBody</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a0e773b20dd4a8ec0d4f9395992f9b201" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RemoveParameterFromNodeBodyAndUpdateUI</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a0d320fa7b142f54dfbe35d2c0e59b7be" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RemoveParameterFromSAP</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a596197aa0b08fa0c7573325a0f24ae83" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RunValidation</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a36ed25d2c2d3ee3722aa5406d00fdcb9" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RunValidationWrapper</name></member>
      <member refid="interface_expansions_1_1_missions_1_1_i_test_module_1aebda48f2bca7e359a5a7e4d4a0479342" prot="public" virt="non-virtual" ambiguityscope="Expansions::Missions::ITestModule."><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>RunValidationWrapper</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a150c9bd47ba6e858ec5ac195620b2e76" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Save</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a8eab7fd4d4938016b1753897d2afd4ce" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>SetDockedUndockedDropdown</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1aa06a0534acdaaafa5b348bbcc9130538" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>setPlayerCreatedRootParts</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a2c06dabd09bd7e53ef74fb0a01afd80d" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>ShouldCreateCheckpoint</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1ad2d6e695c57d2091ae295fc047b2eab0" prot="public" virt="virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>Test</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a28a394fe233cec31b8ba08b5c0b4cfbf" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>testGroup</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1a367e7db6f4158e3c080ba39d0c4d388c" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>testPartVessels</name></member>
      <member refid="class_expansions_1_1_missions_1_1_tests_1_1_test_part_docking_1aa9774bc0136513d540ed422dd5520921" prot="private" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>testSuccess</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a895386143665bd2b8508251f44fd93b1" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>title</name></member>
      <member refid="class_expansions_1_1_missions_1_1_test_module_1a4731419a44659a592aa1f46fe4be563e" prot="public" virt="non-virtual"><scope>Expansions::Missions::Tests::TestPartDocking</scope><name>UpdateNodeBodyUI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
