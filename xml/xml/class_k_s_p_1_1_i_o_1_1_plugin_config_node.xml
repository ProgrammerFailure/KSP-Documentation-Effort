<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kind="class" prot="public">
    <compoundname>KSP::IO::PluginConfigNode</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a2c5c1027e373b55669f242f53ef5b483" prot="private" static="no" mutable="no">
        <type>Dictionary&lt; String, <ref refid="_message_node_dialog_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref> &gt;</type>
        <definition>Dictionary&lt;String, Object&gt; KSP.IO.PluginConfigNode.map</definition>
        <argsstring></argsstring>
        <name>map</name>
        <initializer>= new Dictionary&lt;string, object&gt;()</initializer>
        <briefdescription>
<para>Map of keys and associated objects provided by the user containing configuration data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="27" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a0f41f7f2cd141ef3e85e20967a69566f" prot="private" static="no" mutable="no">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kindref="compound">PluginConfigNode</ref></type>
        <definition>PluginConfigNode KSP.IO.PluginConfigNode.parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
<para>Either null if the root node, or the parent node if a child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="32" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a100c53e59e836ef9860452f90e092531" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="yes">
        <type><ref refid="_message_node_dialog_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref></type>
        <definition>Object KSP.IO.PluginConfigNode.this[string key]</definition>
        <argsstring></argsstring>
        <name>this[string key]</name>
        <briefdescription>
<para>Get or set the value of a configuration key </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the configuration value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value, or null.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="135" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a5593f534cec3db2454ca1d134a32bb38" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KSP.IO.PluginConfigNode.deserializeXML</definition>
        <argsstring>(XmlNode node)</argsstring>
        <name>deserializeXML</name>
        <param>
          <type>XmlNode</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="303" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="303" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1abadc9ca5045a7cea599d3fdb8be6c9c5" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KSP.IO.PluginConfigNode.PluginConfigNode</definition>
        <argsstring>(PluginConfigNode parent, Dictionary&lt; String, Object &gt; _map)</argsstring>
        <name>PluginConfigNode</name>
        <param>
          <type><ref refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kindref="compound">PluginConfigNode</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Dictionary&lt; String, <ref refid="_message_node_dialog_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref> &gt;</type>
          <declname>_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="34" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a63a7ef8595743e5a61e4a96508996e35" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KSP.IO.PluginConfigNode.serializeXML</definition>
        <argsstring>(ref XmlTextWriter xml)</argsstring>
        <name>serializeXML</name>
        <param>
          <type>ref XmlTextWriter</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="158" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="158" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ab44ca1c6f07d51544a9c03ea921e4519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kindref="compound">PluginConfigNode</ref></type>
        <definition>PluginConfigNode KSP.IO.PluginConfigNode.GetParent</definition>
        <argsstring>()</argsstring>
        <name>GetParent</name>
        <briefdescription>
<para>Gets the parent of this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kindref="compound">PluginConfigNode</ref> or null if root node.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="61" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ad0c4245b86d7aad4e482b705eab58d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T KSP.IO.PluginConfigNode.GetValue&lt; T &gt;</definition>
        <argsstring>(string key)</argsstring>
        <name>GetValue&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the value of a configuration key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type you want returned</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key which you want to fetch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Either null (or equivalent) for an inexistent key, or the value you wanted</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="72" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="72" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a6ce3550ff8f314e3916db585b5b90c01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T KSP.IO.PluginConfigNode.GetValue&lt; T &gt;</definition>
        <argsstring>(string key, T _default)</argsstring>
        <name>GetValue&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>_default</declname>
        </param>
        <briefdescription>
<para>Get the value of a configuration key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type you want returned</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration key which you want to fetch</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_default</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value returned when the key cannot be found.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Either default for an inexistent key, or the value you wanted</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="96" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="96" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ae0a80095aa61d1b488b73f1a2050c174" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KSP.IO.PluginConfigNode.PluginConfigNode</definition>
        <argsstring>(PluginConfigNode parent)</argsstring>
        <name>PluginConfigNode</name>
        <param>
          <type><ref refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node" kindref="compound">PluginConfigNode</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Specify the parent object when creating a node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="44" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a2c55daaff4956b4c5891e9c3ac1eacfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KSP.IO.PluginConfigNode.PluginConfigNode</definition>
        <argsstring>()</argsstring>
        <name>PluginConfigNode</name>
        <briefdescription>
<para>Create a new node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="52" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1afc7d679d74b3374678de95010e4bc179" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KSP.IO.PluginConfigNode.SetValue</definition>
        <argsstring>(string key, object value)</argsstring>
        <name>SetValue</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>object</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value of a configuration key </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the configuration key</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value you wish to set it to</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="118" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="118" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ac853b5db8ae869c3305350f0ef850aa0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KSP.IO.PluginConfigNode.handleElement</definition>
        <argsstring>(XmlNode node)</argsstring>
        <name>handleElement</name>
        <param>
          <type>XmlNode</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="322" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="322" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a718ce0b46f5801a276776242e49541c5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KSP.IO.PluginConfigNode.StartNamedElement</definition>
        <argsstring>(ref XmlTextWriter xml, string name, string typeID)</argsstring>
        <name>StartNamedElement</name>
        <param>
          <type>ref XmlTextWriter</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>typeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="441" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="441" bodyend="445"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A node containing configuration information </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" line="23" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/IO/PluginConfigNode.cs" bodystart="22" bodyend="446"/>
    <listofallmembers>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a5593f534cec3db2454ca1d134a32bb38" prot="package" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>deserializeXML</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ab44ca1c6f07d51544a9c03ea921e4519" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>GetParent</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ad0c4245b86d7aad4e482b705eab58d93" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>GetValue&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a6ce3550ff8f314e3916db585b5b90c01" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>GetValue&lt; T &gt;</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ac853b5db8ae869c3305350f0ef850aa0" prot="private" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>handleElement</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a2c5c1027e373b55669f242f53ef5b483" prot="private" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>map</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a0f41f7f2cd141ef3e85e20967a69566f" prot="private" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>parent</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1abadc9ca5045a7cea599d3fdb8be6c9c5" prot="package" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>PluginConfigNode</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1ae0a80095aa61d1b488b73f1a2050c174" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>PluginConfigNode</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a2c55daaff4956b4c5891e9c3ac1eacfe" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>PluginConfigNode</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a63a7ef8595743e5a61e4a96508996e35" prot="package" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>serializeXML</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1afc7d679d74b3374678de95010e4bc179" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>SetValue</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a718ce0b46f5801a276776242e49541c5" prot="private" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>StartNamedElement</name></member>
      <member refid="class_k_s_p_1_1_i_o_1_1_plugin_config_node_1a100c53e59e836ef9860452f90e092531" prot="public" virt="non-virtual"><scope>KSP::IO::PluginConfigNode</scope><name>this[string key]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
