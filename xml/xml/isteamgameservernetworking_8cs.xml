<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="isteamgameservernetworking_8cs" kind="file">
    <compoundname>isteamgameservernetworking.cs</compoundname>
    <innerclass refid="class_steamworks_1_1_steam_game_server_networking" prot="public">Steamworks::SteamGameServerNetworking</innerclass>
    <innernamespace refid="namespace_steamworks">Steamworks</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="isteamgameservernetworking_8cs_1acb03f660b5fb2d8f0d9349b3586ac20e" prot="public" static="no">
        <type>System.IntPtr</type>
        <definition>using IntPtr =  System.IntPtr</definition>
        <argsstring></argsstring>
        <name>IntPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamgameservernetworking.cs" line="11" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamgameservernetworking.cs" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>provided<sp/>under<sp/>The<sp/>MIT<sp/>License<sp/>as<sp/>part<sp/>of<sp/>Steamworks.NET.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2013-2017<sp/>Riley<sp/>Labrecque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>see<sp/>the<sp/>included<sp/>LICENSE.txt<sp/>for<sp/>additional<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>automatically<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changes<sp/>to<sp/>this<sp/>file<sp/>will<sp/>be<sp/>reverted<sp/>when<sp/>you<sp/>update<sp/>Steamworks.NET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!DISABLESTEAMWORKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Runtime.InteropServices;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="isteamapplist_8cs_1acb03f660b5fb2d8f0d9349b3586ac20e" kindref="member">IntPtr</ref><sp/>=<sp/><ref refid="isteamgameservernetworking_8cs_1acb03f660b5fb2d8f0d9349b3586ac20e" kindref="member">System.IntPtr</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Steamworks<sp/>{</highlight></codeline>
<codeline lineno="14" refid="class_steamworks_1_1_steam_game_server_networking" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_steamworks_1_1_steam_game_server_networking" kindref="compound">SteamGameServerNetworking</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1ad26065546f6f916a3ba3114301e0fbd8" kindref="member">SendP2PPacket</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDRemote,<sp/>byte[]<sp/>pubData,<sp/>uint<sp/>cubData,<sp/><ref refid="namespace_steamworks_1a9d14557b2cea8d63500e7b65a4af20c2" kindref="member">EP2PSend</ref><sp/>eP2PSendType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannel<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_SendP2PPacket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDRemote,<sp/>pubData,<sp/>cubData,<sp/>eP2PSendType,<sp/>nChannel);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1ab2d66804858b7a266dcf2be4b715742f" kindref="member">IsP2PPacketAvailable</ref>(out<sp/>uint<sp/>pcubMsgSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannel<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_IsP2PPacketAvailable(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>out<sp/>pcubMsgSize,<sp/>nChannel);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a19153e782a9273990d057c5f76e33d7a" kindref="member">ReadP2PPacket</ref>(byte[]<sp/>pubDest,<sp/>uint<sp/>cubDest,<sp/>out<sp/>uint<sp/>pcubMsgSize,<sp/>out<sp/><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>psteamIDRemote,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannel<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_ReadP2PPacket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>pubDest,<sp/>cubDest,<sp/>out<sp/>pcubMsgSize,<sp/>out<sp/>psteamIDRemote,<sp/>nChannel);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1aa6f1b5c53472141a7b892070eb981cdf" kindref="member">AcceptP2PSessionWithUser</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDRemote)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_AcceptP2PSessionWithUser(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDRemote);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a009a2713b4af64df3c890bc138d1d44b" kindref="member">CloseP2PSessionWithUser</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDRemote)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_CloseP2PSessionWithUser(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDRemote);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a6bdfd28622b0381a29fe3226a94cbf39" kindref="member">CloseP2PChannelWithUser</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDRemote,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannel)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_CloseP2PChannelWithUser(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDRemote,<sp/>nChannel);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a097977a454492222d492045916d9b15d" kindref="member">GetP2PSessionState</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDRemote,<sp/>out<sp/><ref refid="struct_steamworks_1_1_p2_p_session_state__t" kindref="compound">P2PSessionState_t</ref><sp/>pConnectionState)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_GetP2PSessionState(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDRemote,<sp/>out<sp/>pConnectionState);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a502611a1c7f7e110275c313c87d8c58b" kindref="member">AllowP2PPacketRelay</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllow)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_AllowP2PPacketRelay(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>bAllow);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a41eb82d590c020681c3849d14219c9b8" kindref="member">CreateListenSocket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVirtualP2PPort,<sp/>uint<sp/>nIP,<sp/>ushort<sp/>nPort,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowUseOfPacketRelay)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref>)NativeMethods.ISteamNetworking_CreateListenSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>nVirtualP2PPort,<sp/>nIP,<sp/>nPort,<sp/>bAllowUseOfPacketRelay);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a769128d047c0fb985be32ac5d815e3ec" kindref="member">CreateP2PConnectionSocket</ref>(<ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>steamIDTarget,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nVirtualPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeoutSec,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowUseOfPacketRelay)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref>)NativeMethods.ISteamNetworking_CreateP2PConnectionSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>steamIDTarget,<sp/>nVirtualPort,<sp/>nTimeoutSec,<sp/>bAllowUseOfPacketRelay);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a3ee8f01dfcba6f683a3bb3110a94ae91" kindref="member">CreateConnectionSocket</ref>(uint<sp/>nIP,<sp/>ushort<sp/>nPort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTimeoutSec)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref>)NativeMethods.ISteamNetworking_CreateConnectionSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>nIP,<sp/>nPort,<sp/>nTimeoutSec);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a91885f0c58f249bc7201a16bb53b0d49" kindref="member">DestroySocket</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bNotifyRemoteEnd)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_DestroySocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>bNotifyRemoteEnd);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a58f943dc253d96af299174e21f4355e4" kindref="member">DestroyListenSocket</ref>(<ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref><sp/>hSocket,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bNotifyRemoteEnd)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_DestroyListenSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>bNotifyRemoteEnd);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a455c46c43f90ac611d26606cf386a095" kindref="member">SendDataOnSocket</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket,<sp/>byte[]<sp/>pubData,<sp/>uint<sp/>cubData,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bReliable)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_SendDataOnSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>pubData,<sp/>cubData,<sp/>bReliable);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1af1ee0831e66f1e1ffda4bc93a2a1bb32" kindref="member">IsDataAvailableOnSocket</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket,<sp/>out<sp/>uint<sp/>pcubMsgSize)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_IsDataAvailableOnSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>out<sp/>pcubMsgSize);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1ab642aec83c32b762f5ffdf9c9d318a7a" kindref="member">RetrieveDataFromSocket</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket,<sp/>byte[]<sp/>pubDest,<sp/>uint<sp/>cubDest,<sp/>out<sp/>uint<sp/>pcubMsgSize)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_RetrieveDataFromSocket(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>pubDest,<sp/>cubDest,<sp/>out<sp/>pcubMsgSize);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a9e4fe3e177074392f06f410db33a3a5f" kindref="member">IsDataAvailable</ref>(<ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref><sp/>hListenSocket,<sp/>out<sp/>uint<sp/>pcubMsgSize,<sp/>out<sp/><ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>phSocket)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_IsDataAvailable(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hListenSocket,<sp/>out<sp/>pcubMsgSize,<sp/>out<sp/>phSocket);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a4e9746ef35f8fca22356f934f4a36e3e" kindref="member">RetrieveData</ref>(<ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref><sp/>hListenSocket,<sp/>byte[]<sp/>pubDest,<sp/>uint<sp/>cubDest,<sp/>out<sp/>uint<sp/>pcubMsgSize,<sp/>out<sp/><ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>phSocket)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_RetrieveData(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hListenSocket,<sp/>pubDest,<sp/>cubDest,<sp/>out<sp/>pcubMsgSize,<sp/>out<sp/>phSocket);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a7de4b7ad5a7856df522e9066dcceefc2" kindref="member">GetSocketInfo</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket,<sp/>out<sp/><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref><sp/>pSteamIDRemote,<sp/>out<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peSocketStatus,<sp/>out<sp/>uint<sp/>punIPRemote,<sp/>out<sp/>ushort<sp/>punPortRemote)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_GetSocketInfo(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket,<sp/>out<sp/>pSteamIDRemote,<sp/>out<sp/>peSocketStatus,<sp/>out<sp/>punIPRemote,<sp/>out<sp/>punPortRemote);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a01e814a9cb971cb4c85222f80eb5f16b" kindref="member">GetListenSocketInfo</ref>(<ref refid="struct_steamworks_1_1_s_net_listen_socket__t" kindref="compound">SNetListenSocket_t</ref><sp/>hListenSocket,<sp/>out<sp/>uint<sp/>pnIP,<sp/>out<sp/>ushort<sp/>pnPort)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_GetListenSocketInfo(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hListenSocket,<sp/>out<sp/>pnIP,<sp/>out<sp/>pnPort);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespace_steamworks_1ae737bd5e0e9eb42b2b99ba017acb2b15" kindref="member">ESNetSocketConnectionType</ref><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a9ce085fd091d501eb7e4992fc17c8700" kindref="member">GetSocketConnectionType</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_GetSocketConnectionType(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_steamworks_1_1_steam_game_server_networking_1a59ecb26824dc712fd4539993b0a35fcc" kindref="member">GetMaxPacketSize</ref>(<ref refid="struct_steamworks_1_1_s_net_socket__t" kindref="compound">SNetSocket_t</ref><sp/>hSocket)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InteropHelp.TestIfAvailableGameServer();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NativeMethods.ISteamNetworking_GetMaxPacketSize(CSteamGameServerAPIContext.GetSteamNetworking(),<sp/>hSocket);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!DISABLESTEAMWORKS</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamgameservernetworking.cs"/>
  </compounddef>
</doxygen>
