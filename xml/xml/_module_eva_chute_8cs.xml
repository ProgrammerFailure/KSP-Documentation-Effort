<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_module_eva_chute_8cs" kind="file">
    <compoundname>ModuleEvaChute.cs</compoundname>
    <innerclass refid="class_module_eva_chute" prot="public">ModuleEvaChute</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.Localization;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_module_eva_chute" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_module_eva_chute" kindref="compound">ModuleEvaChute</ref><sp/>:<sp/><ref refid="class_module_parachute" kindref="compound">ModuleParachute</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Member<sp/>Variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteYawRateAtMaxSpeed&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.1f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a5273e5cdb97d0a19012b09fed5354fe7" kindref="member">chuteYawRateAtMaxSpeed</ref><sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteMaxSpeedForYawRate&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>1f,<sp/>maxValue<sp/>=<sp/>100f,<sp/>stepIncrement<sp/>=<sp/>1f)]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a58192389403e9b6ff6587df3abd51828" kindref="member">chuteMaxSpeedForYawRate</ref><sp/>=<sp/>50.0f;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteYawRateAtMinSpeed&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.0f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1ae45c9238e3127fc343af054bf42ac73a" kindref="member">chuteYawRateAtMinSpeed</ref><sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteMinSpeedForYawRate&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>1f,<sp/>maxValue<sp/>=<sp/>100f,<sp/>stepIncrement<sp/>=<sp/>1f)]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a6693b8fdabeef99e8561fa3b1762edc8" kindref="member">chuteMinSpeedForYawRate</ref><sp/>=<sp/>10.0f;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteRollRate&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.0f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a81c708ac85482182e1b8dac59b4688bc" kindref="member">chuteRollRate</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chutePitchRate&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.1f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a9ff90b1f4821c3b7317ccff01fce84e0" kindref="member">chutePitchRate</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteDefaultForwardPitch&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>5f,<sp/>maxValue<sp/>=<sp/>50f,<sp/>stepIncrement<sp/>=<sp/>1f)]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a1ef225ef561262b77eb71e0b45e073c1" kindref="member">chuteDefaultForwardPitch</ref><sp/>=<sp/>15.0f;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;semiDeployedChuteForwardPitch&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>5f,<sp/>maxValue<sp/>=<sp/>50f,<sp/>stepIncrement<sp/>=<sp/>1f)]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1ac905eb01554c45fefcbba462c388d652" kindref="member">semiDeployedChuteForwardPitch</ref><sp/>=<sp/>25.0f;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chutePitchRateDivisorWhenTurning&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.1f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a93c798d25f9787b60b7d48e2d81d8f86" kindref="member">chutePitchRateDivisorWhenTurning</ref><sp/>=<sp/>3.0f;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteRollRateDivisorWhenPitching&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.1f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a0be37cb0e67f2f971ae2c42d69e9b728" kindref="member">chuteRollRateDivisorWhenPitching</ref><sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>(isPersistant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;chuteYawRateDivisorWhenPitching&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_u_i___float_range" kindref="compound">UI_FloatRange</ref>(minValue<sp/>=<sp/>0.1f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a95029513c7da1f4e50debf1f1862e75d" kindref="member">chuteYawRateDivisorWhenPitching</ref><sp/>=<sp/>1.5f;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[KSPField(isPersistant<sp/>=<sp/>true,<sp/>guiActive<sp/>=<sp/>false,<sp/>guiName<sp/>=<sp/>&quot;chuteModelMaximumDisplacement&quot;)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[UI_FloatRange(minValue<sp/>=<sp/>-10f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>float<sp/>chuteModelMaximumDisplacement<sp/>=<sp/>-1.5f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[KSPField(isPersistant<sp/>=<sp/>true,<sp/>guiActive<sp/>=<sp/>false,<sp/>guiName<sp/>=<sp/>&quot;chuteModelDisplacementRaycastMultiplier&quot;)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[UI_FloatRange(minValue<sp/>=<sp/>0f,<sp/>maxValue<sp/>=<sp/>10f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>float<sp/>chuteModelDisplacementRaycastMultiplier<sp/>=<sp/>10f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[KSPField(isPersistant<sp/>=<sp/>true,<sp/>guiActive<sp/>=<sp/>false,<sp/>guiName<sp/>=<sp/>&quot;chuteModelDisplacementSpeed&quot;)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//[UI_FloatRange(minValue<sp/>=<sp/>-10f,<sp/>maxValue<sp/>=<sp/>30f,<sp/>stepIncrement<sp/>=<sp/>0.1f)]</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>float<sp/>chuteModelDisplacementSpeed<sp/>=<sp/>0.3f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showEVAChuteParams<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_kerbal_e_v_a" kindref="compound">KerbalEVA</ref><sp/>kerbalEVA;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_module_inventory_part" kindref="compound">ModuleInventoryPart</ref><sp/>inventory;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_field" kindref="compound">KSPField</ref>]</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a7e29048c5ae8e61bb5dcaa0a03c90b4e" kindref="member">baseName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>flagDecalsTagName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FlagDecal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1ab1115e30614956d0eb4911a8c624fc5d" kindref="member">OnStart</ref>(<ref refid="class_part_module" kindref="compound">PartModule</ref>.<ref refid="class_part_module_1ac6597127392e002b92f7427cf50244d3" kindref="member">StartState</ref><sp/>state)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>protoModuleCrew<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>up<sp/>in<sp/>OnAwake()<sp/>yet,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>load<sp/>the<sp/>parachute<sp/>data<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1afa777e799836541a1b1427885bffa8c2" kindref="member">protoModuleCrew</ref>[0].ChuteNode<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1afe5f5e035d43bdf82d226b83248aa2da" kindref="member">Load</ref>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1afa777e799836541a1b1427885bffa8c2" kindref="member">protoModuleCrew</ref>[0].ChuteNode);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normal<sp/>parachutes<sp/>can<sp/>only<sp/>be<sp/>repacked<sp/>by<sp/>exiting<sp/>the<sp/>vessel<sp/>to<sp/>repack<sp/>the<sp/>chute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Kerbals<sp/>aren&apos;t<sp/>able<sp/>to<sp/>exit<sp/>themselves,<sp/>so<sp/>allow<sp/>them<sp/>to<sp/>do<sp/>it<sp/>in<sp/>vessel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Repack&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnStart(state);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kerbalEVA<sp/>=<sp/>GetComponent&lt;KerbalEVA&gt;();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inventory<sp/>=<sp/>part.FindModuleImplementing&lt;<ref refid="class_module_inventory_part" kindref="compound">ModuleInventoryPart</ref>&gt;();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Undo<sp/>the<sp/>call<sp/>to<sp/>Part.SetShader()<sp/>from<sp/>Part.Start()<sp/>which<sp/>sets<sp/>all<sp/>the<sp/>shaders<sp/>on<sp/>the<sp/>parachute<sp/>to<sp/>be<sp/>&quot;KSP/Scenery/Decal/Multiply&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>great<sp/>for<sp/>the<sp/>flag<sp/>decal.<sp/>Not<sp/>cool<sp/>for<sp/>everything<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shader<sp/>stencilShader<sp/>=<sp/>Shader.Find(</highlight><highlight class="stringliteral">&quot;KSP/Bumped<sp/>Specular<sp/>(Stencil)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform[]<sp/>chuteParts<sp/>=<sp/>part.FindModelTransforms(<ref refid="class_module_parachute_1ac2bac132e5494f03cdb93835c4895f02" kindref="member">canopyName</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshRenderer[]<sp/>baseParts;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshRenderer<sp/>mr;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>chuteParts.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr<sp/>=<sp/>chuteParts[i].GetComponent&lt;MeshRenderer&gt;();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mr<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr.material.shader<sp/>=<sp/>stencilShader;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shader<sp/>baseShader<sp/>=<sp/>Shader.Find(</highlight><highlight class="stringliteral">&quot;KSP/Bumped<sp/>Specular&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chuteParts<sp/>=<sp/>part.FindModelTransforms(<ref refid="class_module_eva_chute_1a7e29048c5ae8e61bb5dcaa0a03c90b4e" kindref="member">baseName</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>chuteParts.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseParts<sp/>=<sp/>chuteParts[i].GetComponentsInChildren&lt;MeshRenderer&gt;();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>baseParts.Length;<sp/>j++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr<sp/>=<sp/>baseParts[j];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mr<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr.material.shader<sp/>=<sp/>baseShader;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>shouldn&apos;t<sp/>have<sp/>to<sp/>do<sp/>this,<sp/>but<sp/>it<sp/>turns<sp/>out<sp/>that<sp/>loading<sp/>in<sp/>a<sp/>kerbal<sp/>strapped<sp/>into<sp/>a<sp/>command<sp/>seat<sp/>will<sp/>seat<sp/>the<sp/>shader<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>ship&apos;s<sp/>shader.<sp/>This<sp/>doesn&apos;t<sp/>look<sp/>too<sp/>good,<sp/>so<sp/>we<sp/>undo<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shader<sp/>flagShader<sp/>=<sp/>Shader.Find(</highlight><highlight class="stringliteral">&quot;KSP/Scenery/Decal/Multiply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chuteParts<sp/>=<sp/>part.FindModelTransformsWithTag(flagDecalsTagName);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>chuteParts.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr<sp/>=<sp/>chuteParts[i].GetComponent&lt;MeshRenderer&gt;();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mr<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mr.material.shader<sp/>=<sp/>flagShader;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>that<sp/>ModuleParachute<sp/>doesn&apos;t<sp/>rotate<sp/>the<sp/>parachute,<sp/>so<sp/>that<sp/>we<sp/>can<sp/>handle<sp/>the<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1a623218d72f765516e073703a4bfda497" kindref="member">dontRotateParachute</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>need<sp/>to<sp/>repack<sp/>the<sp/>chute<sp/>if<sp/>the<sp/>kerbal<sp/>dies<sp/>with<sp/>the<sp/>chute<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>disable<sp/>the<sp/>deactivate()<sp/>call<sp/>because<sp/>it<sp/>causes<sp/>an<sp/>infinite<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1a79724322932cf94bceb21667c41c9285" kindref="member">deactivateOnRepack</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Spread<sp/>angle<sp/>only<sp/>matters<sp/>if<sp/>you<sp/>have<sp/>multiple<sp/>parachutes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We&apos;re<sp/>not<sp/>letting<sp/>kerbals<sp/>use<sp/>more<sp/>than<sp/>one!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;spreadAngle&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.PartValues.Update();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Not<sp/>high<sp/>enough<sp/>level<sp/>to<sp/>use<sp/>a<sp/>parachute,<sp/>so<sp/>disable<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_module_eva_chute_1a140fac81a5a86e3651b8ffd0f62a2edd" kindref="member">CanCrewMemberUseParachute</ref>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1afa777e799836541a1b1427885bffa8c2" kindref="member">protoModuleCrew</ref>[0]))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_eva_chute_1adc01ea77c2ed3a445467f37ecc61ec5d" kindref="member">SetEVAChuteActive</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We&apos;ve<sp/>loaded<sp/>into<sp/>a<sp/>save<sp/>file<sp/>where<sp/>the<sp/>parachute<sp/>is<sp/>already<sp/>deployed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>appropriate<sp/>rotation<sp/>to<sp/>avoid<sp/>the<sp/>parachute<sp/>rotating<sp/>in<sp/>a<sp/>strange<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>==<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.DEPLOYED)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>GetFullyDeployedCanopyRotation();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1aa4126dd7567ad8bdf47dd92401d4490c" kindref="member">lastRot</ref><sp/>=<sp/>canopy.rotation;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>==<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.SEMIDEPLOYED)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>GetSemiDeployedCanopyRotation();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1aa4126dd7567ad8bdf47dd92401d4490c" kindref="member">lastRot</ref><sp/>=<sp/>canopy.rotation;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1abc19097de7f9e38f02c688183af124e8" kindref="member">SetCanopy</ref>(Transform<sp/>chuteTransform)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1aa68c7362c95e52c5e706ddcbcce75ea6" kindref="member">canopy</ref><sp/>=<sp/>Part.FindHeirarchyTransform(chuteTransform.transform,<sp/><ref refid="class_module_parachute_1ac2bac132e5494f03cdb93835c4895f02" kindref="member">canopyName</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1aad997106a74c533db7feccd506b15067" kindref="member">Anim</ref><sp/>=<sp/>chuteTransform.transform.GetComponentInChildren&lt;Animation&gt;();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.gameObject.SetActive(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a44e5ab22a283824234444ad985fad40f" kindref="member">OnDestroy</ref>()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnDestroy();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1ae74a86495777e19d4831525450ba455c" kindref="member">IsStageable</ref>()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1af9ec1c7f5699c0845cbeee03f39f08af" kindref="member">OnActive</ref>()</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We&apos;re<sp/>overriding<sp/>ModuleParachute.OnActive()<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>kerbals<sp/>attached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>external<sp/>command<sp/>seats<sp/>don&apos;t<sp/>open<sp/>their<sp/>parachutes<sp/>when<sp/>the<sp/>part<sp/>that<sp/>the<sp/>command<sp/>seat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>attached<sp/>to<sp/>is<sp/>staged<sp/>when<sp/>you<sp/>hit<sp/>space<sp/>on<sp/>the<sp/>keyboard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Movement<sp/>and<sp/>Update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a5a8a82587d3f39a6db68b9530671db89" kindref="member">FixedUpdate</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Handle<sp/>the<sp/>parachute<sp/>rotation<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Perlin<sp/>noise<sp/>for<sp/>wind<sp/>will<sp/>be<sp/>added<sp/>in<sp/>the<sp/>parent<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>==<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.DEPLOYED)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>GetFullyDeployedCanopyRotation();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>==<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.SEMIDEPLOYED)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>GetSemiDeployedCanopyRotation();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.FixedUpdate();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1af374192eebe0f90a595772caf8274c08" kindref="member">UpdateFullyDeployedParachuteMovement</ref>(Vector3<sp/>parachuteInput,<sp/>Rigidbody<sp/>kerbalRB)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>parachute<sp/>to<sp/>be<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>gravity<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>returnAxis<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>returnAngle<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>upVector<sp/>=<sp/>-vessel.graviticAcceleration.normalized;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upVector<sp/>=<sp/>Quaternion.AngleAxis(<ref refid="class_module_eva_chute_1a1ef225ef561262b77eb71e0b45e073c1" kindref="member">chuteDefaultForwardPitch</ref>,<sp/>transform.right)<sp/>*<sp/>upVector;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion.FromToRotation(transform.up,<sp/>upVector).ToAngleAxis(out<sp/>returnAngle,<sp/>out<sp/>returnAxis);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allow<sp/>designers<sp/>to<sp/>tune<sp/>parachute<sp/>turning<sp/>characteristics<sp/>depending<sp/>on<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawRate<sp/>=<sp/>(((Mathf.Clamp((float)<ref refid="class_part_module_1a3bf2e168e521ad9de4e14de27bd3324f" kindref="member">vessel</ref>.speed,<sp/><ref refid="class_module_eva_chute_1a6693b8fdabeef99e8561fa3b1762edc8" kindref="member">chuteMinSpeedForYawRate</ref>,<sp/><ref refid="class_module_eva_chute_1a58192389403e9b6ff6587df3abd51828" kindref="member">chuteMaxSpeedForYawRate</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="class_module_eva_chute_1a6693b8fdabeef99e8561fa3b1762edc8" kindref="member">chuteMinSpeedForYawRate</ref>)<sp/>/<sp/>(<ref refid="class_module_eva_chute_1a58192389403e9b6ff6587df3abd51828" kindref="member">chuteMaxSpeedForYawRate</ref><sp/>-<sp/><ref refid="class_module_eva_chute_1a6693b8fdabeef99e8561fa3b1762edc8" kindref="member">chuteMinSpeedForYawRate</ref>))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<ref refid="class_module_eva_chute_1a5273e5cdb97d0a19012b09fed5354fe7" kindref="member">chuteYawRateAtMaxSpeed</ref><sp/>-<sp/><ref refid="class_module_eva_chute_1ae45c9238e3127fc343af054bf42ac73a" kindref="member">chuteYawRateAtMinSpeed</ref>))<sp/>+<sp/><ref refid="class_module_eva_chute_1ae45c9238e3127fc343af054bf42ac73a" kindref="member">chuteYawRateAtMinSpeed</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rolling<sp/>=<sp/>(parachuteInput.y<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pitching<sp/>=<sp/>(parachuteInput.x<sp/>!=<sp/>0.0f);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blendedRollRate<sp/>=<sp/>pitching<sp/>?<sp/>(<ref refid="class_module_eva_chute_1a81c708ac85482182e1b8dac59b4688bc" kindref="member">chuteRollRate</ref><sp/>/<sp/><ref refid="class_module_eva_chute_1a0be37cb0e67f2f971ae2c42d69e9b728" kindref="member">chuteRollRateDivisorWhenPitching</ref>)<sp/>:<sp/><ref refid="class_module_eva_chute_1a81c708ac85482182e1b8dac59b4688bc" kindref="member">chuteRollRate</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blendedPitchRate<sp/>=<sp/>rolling<sp/>?<sp/>(<ref refid="class_module_eva_chute_1a9ff90b1f4821c3b7317ccff01fce84e0" kindref="member">chutePitchRate</ref><sp/>/<sp/><ref refid="class_module_eva_chute_1a93c798d25f9787b60b7d48e2d81d8f86" kindref="member">chutePitchRateDivisorWhenTurning</ref>)<sp/>:<sp/><ref refid="class_module_eva_chute_1a9ff90b1f4821c3b7317ccff01fce84e0" kindref="member">chutePitchRate</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blendedYawRate<sp/>=<sp/>pitching<sp/>?<sp/>(yawRate<sp/>/<sp/><ref refid="class_module_eva_chute_1a95029513c7da1f4e50debf1f1862e75d" kindref="member">chuteYawRateDivisorWhenPitching</ref>)<sp/>:<sp/>yawRate;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>turn<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>+=<sp/>transform.right<sp/>*<sp/>parachuteInput.x<sp/>*<sp/>blendedPitchRate;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>+=<sp/>transform.up<sp/>*<sp/>parachuteInput.y<sp/>*<sp/>blendedYawRate;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>+=<sp/>transform.forward<sp/>*<sp/>-1.0f<sp/>*<sp/>parachuteInput.y<sp/>*<sp/>blendedRollRate;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Commented<sp/>out<sp/>code<sp/>is<sp/>for<sp/>another<sp/>way<sp/>of<sp/>doing<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>might<sp/>be<sp/>used<sp/>to<sp/>get<sp/>a<sp/>better<sp/>way<sp/>of<sp/>doing<sp/>the<sp/>offset<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//part.AddForceAtPosition(-<sp/>Mathf.Abs(<sp/>simpleInput.y)<sp/>*<sp/>blendedYawRate<sp/>*<sp/>Time.fixedDeltaTime<sp/>*<sp/>transform.forward,<sp/>part.partTransform.TransformPoint(Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.right));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(part.partTransform.TransformPoint(Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.right),<sp/>part.partTransform.TransformPoint(Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.right)<sp/>+<sp/>(-Mathf.Abs(simpleInput.y)<sp/>*<sp/>blendedYawRate<sp/>*<sp/>transform.forward<sp/>*<sp/>10.0f),<sp/>Color.yellow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//part.AddForceAtPosition(-Mathf.Abs(simpleInput.x)<sp/>*<sp/>blendedPitchRate<sp/>*<sp/>Time.fixedDeltaTime<sp/>*<sp/>transform.up,<sp/>part.partTransform.TransformPoint(Mathf.Sign(simpleInput.x)<sp/>*<sp/>Vector3.forward));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(part.partTransform.TransformPoint(Mathf.Sign(simpleInput.x)<sp/>*<sp/>Vector3.forward),<sp/>part.partTransform.TransformPoint(Mathf.Sign(simpleInput.x)<sp/>*<sp/>Vector3.forward)<sp/>+<sp/>(-Mathf.Abs(simpleInput.x)<sp/>*<sp/>blendedYawRate<sp/>*<sp/>transform.up<sp/>*<sp/>10.0f),<sp/>Color.yellow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//part.AddForceAtPosition(-Mathf.Abs(simpleInput.y)<sp/>*<sp/>blendedRollRate<sp/>*<sp/>Time.fixedDeltaTime<sp/>*<sp/>transform.right,<sp/>part.partTransform.TransformPoint(-Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.up));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(part.partTransform.TransformPoint(-Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.up),<sp/>part.partTransform.TransformPoint(-Mathf.Sign(simpleInput.y)<sp/>*<sp/>Vector3.up)<sp/>+<sp/>(-Mathf.Abs(simpleInput.y)<sp/>*<sp/>blendedYawRate<sp/>*<sp/>transform.right<sp/>*<sp/>10.0f),<sp/>Color.yellow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!returnAxis.IsInvalid())</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kerbalRB.angularVelocity<sp/>=<sp/>(returnAxis<sp/>*<sp/>returnAngle<sp/>*<sp/>Mathf.Deg2Rad)<sp/>+<sp/>turn;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Commented<sp/>out<sp/>this<sp/>one<sp/>so<sp/>not<sp/>exposed<sp/>to<sp/>players<sp/>and<sp/>we<sp/>dont<sp/>have<sp/>to<sp/>hanlde<sp/>any<sp/>bugs<sp/>from<sp/>chellenging<sp/>functionality<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(chuteModelMaximumDisplacement<sp/>!=<sp/>0.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//Shift<sp/>the<sp/>centre<sp/>of<sp/>the<sp/>model<sp/>up<sp/>a<sp/>little<sp/>to<sp/>make<sp/>the<sp/>parachute<sp/>rotation<sp/>seem<sp/>more<sp/>realistic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//We<sp/>raycast<sp/>down<sp/>and<sp/>pull<sp/>it<sp/>back<sp/>to<sp/>the<sp/>original<sp/>displacement<sp/>when<sp/>close<sp/>to<sp/>the<sp/>ground.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>RaycastHit<sp/>hitInfo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>bool<sp/>hit<sp/>=<sp/>Physics.Raycast(transform.position,<sp/>vessel.graviticAcceleration.normalized,<sp/>out<sp/>hitInfo,<sp/>Mathf.Abs(chuteModelMaximumDisplacement)<sp/>*<sp/>chuteModelDisplacementRaycastMultiplier,<sp/>chuteRaycastLayerMask);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//Set<sp/>the<sp/>maximum<sp/>displacement<sp/>if<sp/>we&apos;re<sp/>high<sp/>in<sp/>the<sp/>air</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(!hit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.distance<sp/>=<sp/>chuteModelMaximumDisplacement<sp/>*<sp/>chuteModelDisplacementRaycastMultiplier;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//Otherwise,<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>distance<sp/>has<sp/>the<sp/>same<sp/>sign<sp/>as<sp/>the<sp/>maximum<sp/>displacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.distance<sp/>=<sp/>hitInfo.distance<sp/>*<sp/>Mathf.Sign(chuteModelMaximumDisplacement);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Vector3<sp/>newLocalPosition<sp/>=<sp/>globalMoveTransform.localPosition;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//We<sp/>have<sp/>to<sp/>deal<sp/>with<sp/>negative<sp/>and<sp/>positive<sp/>displacements,<sp/>so<sp/>work<sp/>out<sp/>the<sp/>actual<sp/>maximums<sp/>and<sp/>minimums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>float<sp/>desiredDisplacement<sp/>=<sp/>Mathf.Lerp(globalMoveTransform.localPosition.y,<sp/>hitInfo.distance<sp/>/<sp/>chuteModelDisplacementRaycastMultiplier,<sp/>chuteModelDisplacementSpeed);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>float<sp/>min<sp/>=<sp/>Mathf.Min(chuteModelMaximumDisplacement,<sp/>originalGlobalMoveLocalPosition.y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>float<sp/>max<sp/>=<sp/>Mathf.Max(chuteModelMaximumDisplacement,<sp/>originalGlobalMoveLocalPosition.y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>newLocalPosition.y<sp/>=<sp/>Mathf.Clamp(desiredDisplacement,<sp/>min,<sp/>max);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>globalMoveTransform.localPosition<sp/>=<sp/>newLocalPosition;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1aadce89d0aa29d1da63b842b266f7b8b2" kindref="member">UpdateSemiDeployedParachuteMovement</ref>(Vector3<sp/>parachuteInput,<sp/>Rigidbody<sp/>kerbalRB)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>parachute<sp/>to<sp/>be<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>drag,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//then<sp/>rotate<sp/>kerbal<sp/>to<sp/>be<sp/>slightly<sp/>offset<sp/>from<sp/>that<sp/>so<sp/>that<sp/>parachute<sp/>doesn&apos;t<sp/>clip<sp/>through<sp/>her<sp/>helmet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>returnAxis;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>returnAngle;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>upVector<sp/>=<sp/>Quaternion.AngleAxis(<ref refid="class_module_eva_chute_1ac905eb01554c45fefcbba462c388d652" kindref="member">semiDeployedChuteForwardPitch</ref>,<sp/>transform.right)<sp/>*<sp/>-<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1ace9fd0d9c380774501af6646288ba3d8" kindref="member">dragVectorDir</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion.FromToRotation(transform.up,<sp/>upVector).ToAngleAxis(out<sp/>returnAngle,<sp/>out<sp/>returnAxis);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!returnAxis.IsInvalid())</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GetComponentCached(ref<sp/>kerbalRB).angularVelocity<sp/>=<sp/>(returnAxis<sp/>*<sp/>returnAngle<sp/>*<sp/>Mathf.Deg2Rad);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a140fac81a5a86e3651b8ffd0f62a2edd" kindref="member">CanCrewMemberUseParachute</ref>(<ref refid="class_proto_crew_member" kindref="compound">ProtoCrewMember</ref><sp/>crewMember)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inventory<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>inventory.<ref refid="class_module_inventory_part_1a96c712803f3f32011d161b38db7b6184" kindref="member">InventoryItemCount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crewMember.experienceLevel<sp/>&gt;=<sp/>this.vessel.VesselValues.EVAChuteSkill.value;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a140fac81a5a86e3651b8ffd0f62a2edd" kindref="member">CanCrewMemberUseParachute</ref>()</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1afa777e799836541a1b1427885bffa8c2" kindref="member">protoModuleCrew</ref>.Count<sp/>&lt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>might<sp/>come<sp/>from<sp/>proto<sp/>crew<sp/>member<sp/>initialization<sp/>(Kerbal<sp/>is<sp/>not<sp/>in<sp/>EVA),<sp/>in<sp/>which<sp/>case<sp/>part<sp/>will<sp/>be<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a140fac81a5a86e3651b8ffd0f62a2edd" kindref="member">CanCrewMemberUseParachute</ref>(this.<ref refid="class_part_module_1a6020ba0d98699d09c96931bae237973d" kindref="member">part</ref>.<ref refid="class_part_1afa777e799836541a1b1427885bffa8c2" kindref="member">protoModuleCrew</ref>[0]);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Quaternion<sp/>GetSemiDeployedCanopyRotation()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.AngleAxis(-<ref refid="class_module_eva_chute_1ac905eb01554c45fefcbba462c388d652" kindref="member">semiDeployedChuteForwardPitch</ref>,<sp/>kerbalEVA.transform.right)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Quaternion.LookRotation(kerbalEVA.transform.up,<sp/>-kerbalEVA.transform.forward);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Quaternion<sp/>GetFullyDeployedCanopyRotation()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.LookRotation(kerbalEVA.transform.up,<sp/>-kerbalEVA.transform.forward);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Events<sp/>and<sp/>Actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_k_s_p_event" kindref="compound">KSPEvent</ref>(guiName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ToggleEVAChuteParams&quot;</highlight><highlight class="normal">,<sp/>guiActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1afdba3f93ebc51e148e52f093d28b3d67" kindref="member">ShowEVAChuteParamsChanged</ref>()</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showEVAChuteParams<sp/>=<sp/>!showEVAChuteParams;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToggleEVAChuteParams(showEVAChuteParams);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToggleEVAChuteParams(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteYawRateAtMaxSpeed&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteMaxSpeedForYawRate&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteYawRateAtMinSpeed&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteMinSpeedForYawRate&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteRollRate&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chutePitchRate&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteDefaultForwardPitch&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;semiDeployedChuteForwardPitch&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chutePitchRateDivisorWhenTurning&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteRollRateDivisorWhenPitching&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;chuteYawRateDivisorWhenPitching&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fields[&quot;chuteModelMaximumDisplacement&quot;].guiActive<sp/>=<sp/>show;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fields[&quot;chuteModelDisplacementSpeed&quot;].guiActive<sp/>=<sp/>show;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;rotationSpeedDPS&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1adc01ea77c2ed3a445467f37ecc61ec5d" kindref="member">SetEVAChuteActive</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a6f575ad4f89eb0630fa575a1014e8121" kindref="member">moduleIsEnabled</ref><sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;minAirPressureToOpen&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;deployAltitude&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;spreadAngle&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a18ef1ffbbfed4cb1a7aeb9bf6b9bec7a" kindref="member">Fields</ref>[</highlight><highlight class="stringliteral">&quot;automateSafeDeploy&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;ShowEVAChuteParamsChanged&quot;</highlight><highlight class="normal">].active<sp/>=<sp/>active;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1a4656b992e42160201ce7a0379a8297ce" kindref="member">SetUIEVents</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Deploy&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;CutParachute&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Repack&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Disarm&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a961e7a142134cb2a348d9764c18e2926" kindref="member">OnParachuteSemiDeployed</ref>()</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>that<sp/>we<sp/>notify<sp/>the<sp/>kerbal<sp/>that<sp/>the<sp/>parachute<sp/>has<sp/>been<sp/>deployed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>can<sp/>get<sp/>here<sp/>through<sp/>a<sp/>call<sp/>from<sp/>KerbalEVA<sp/>or<sp/>from<sp/>a<sp/>PAW<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kerbalEVA.<ref refid="class_kerbal_e_v_a_1a293fde0d3c332934117a3f282b2c3694" kindref="member">IsChuteState</ref>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kerbalEVA.OnParachuteSemiDeployed();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>initial<sp/>rotation<sp/>of<sp/>the<sp/>canopy<sp/>because<sp/>otherwise<sp/>it<sp/>can<sp/>start<sp/>out<sp/>in<sp/>some<sp/>pretty<sp/>whacky<sp/>orientations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fully<sp/>deployed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a78d645f6d3deecf18ac6692841793bb6" kindref="member">ShouldDeploy</ref>())</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>Quaternion.LookRotation(kerbalEVA.transform.up,<sp/>-kerbalEVA.transform.forward);<sp/>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Semi-deployed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canopy.rotation<sp/>=<sp/>Quaternion.AngleAxis(-<ref refid="class_module_eva_chute_1ac905eb01554c45fefcbba462c388d652" kindref="member">semiDeployedChuteForwardPitch</ref>,<sp/>kerbalEVA.transform.right)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Quaternion.LookRotation(kerbalEVA.transform.up,<sp/>-kerbalEVA.transform.forward);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_parachute_1aa4126dd7567ad8bdf47dd92401d4490c" kindref="member">lastRot</ref><sp/>=<sp/>canopy.rotation;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnParachuteSemiDeployed();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a5b5f30d6a0702f24796a15cc928edff9" kindref="member">OnParachuteFullyDeployed</ref>()</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kerbalEVA.OnParachuteFullyDeployed();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.OnParachuteFullyDeployed();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1a827e67b68e44b46b1562be0230ac0be8" kindref="member">PassedAdditionalDeploymentChecks</ref>()</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>that<sp/>kerbal<sp/>can<sp/>deploy<sp/>parachute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!kerbalEVA.IsKerbalInStateAbleToDeployParachute()</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>jetpack<sp/>+<sp/>parachute<sp/>because<sp/>they<sp/>use<sp/>the<sp/>same<sp/>controls<sp/>and<sp/>things<sp/>would<sp/>get<sp/>confusing!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>kerbalEVA.JetpackDeployed</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>can&apos;t<sp/>open<sp/>the<sp/>parachute<sp/>if<sp/>we&apos;re<sp/>in<sp/>the<sp/>water<sp/>unless<sp/>we&apos;re<sp/>seated<sp/>on<sp/>a<sp/>command<sp/>seat<sp/>in<sp/>a<sp/>vessel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>we&apos;re<sp/>out<sp/>of<sp/>the<sp/>water</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(vessel.Splashed<sp/>&amp;&amp;<sp/>(!kerbalEVA.IsSeated()<sp/>||<sp/>(kerbalEVA.<ref refid="class_kerbal_e_v_a_1a0885ae89737e288214cc85792a20c423" kindref="member">IsSeated</ref>()<sp/>&amp;&amp;<sp/>(part.submergedPortion<sp/>&gt;<sp/>0.0f))))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Or<sp/>on<sp/>land,<sp/>but<sp/>throw<sp/>in<sp/>an<sp/>exception<sp/>if<sp/>we&apos;re<sp/>in<sp/>a<sp/>command<sp/>seat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(vessel.Landed<sp/>&amp;&amp;<sp/>!kerbalEVA.IsSeated()))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base.PassedAdditionalDeploymentChecks();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1aea72c0ad4fac190f4f89c71d09b61512" kindref="member">CutParachute</ref>()</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>that<sp/>we<sp/>notify<sp/>the<sp/>kerbal<sp/>that<sp/>the<sp/>parachute<sp/>has<sp/>been<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>can<sp/>get<sp/>here<sp/>through<sp/>a<sp/>call<sp/>from<sp/>KerbalEVA<sp/>or<sp/>from<sp/>a<sp/>PAW<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>!=<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.CUT<sp/>&amp;&amp;<sp/><ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>!=<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.ACTIVE)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.CutParachute();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Call<sp/>this<sp/>after<sp/>the<sp/>call<sp/>to<sp/>the<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>don&apos;t,<sp/>then<sp/>kerbalEVA<sp/>will<sp/>call<sp/>this<sp/>function<sp/>again<sp/>before<sp/>the<sp/>deploymentState<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>we<sp/>get<sp/>stuck<sp/>in<sp/>an<sp/>infinite<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kerbalEVA.<ref refid="class_kerbal_e_v_a_1a293fde0d3c332934117a3f282b2c3694" kindref="member">IsChuteState</ref><sp/>||<sp/>kerbalEVA.<ref refid="class_kerbal_e_v_a_1a0885ae89737e288214cc85792a20c423" kindref="member">IsSeated</ref>())</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kerbalEVA.OnParachuteCut();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_eva_chute_1afee85aaeb54076b23914ec682dffb473" kindref="member">AllowRepack</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowRepack)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowRepack<sp/>&amp;&amp;<sp/>(<ref refid="class_module_parachute_1a567fc99442f2be8aa49939d1c41a1320" kindref="member">deploymentState</ref><sp/>==<sp/><ref refid="class_module_parachute_1a14e390f88499b53ae7575f477df777da" kindref="member">deploymentStates</ref>.CUT))</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Repack&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Repack&quot;</highlight><highlight class="normal">].guiActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_part_module_1a7bf7c266e1fb22d770e3981dc320f245" kindref="member">Events</ref>[</highlight><highlight class="stringliteral">&quot;Repack&quot;</highlight><highlight class="normal">].active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Expansions/Missions/Scripts/Part Scripts/PartModules/Aero/ModuleEvaChute.cs"/>
  </compounddef>
</doxygen>
