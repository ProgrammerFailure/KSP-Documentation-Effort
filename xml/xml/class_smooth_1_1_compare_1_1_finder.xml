<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_compare_1_1_finder" kind="class" prot="public">
    <compoundname>Smooth::Compare::Finder</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1a380d240ca1b4e1651bb04e43bbc7095b" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string Smooth.Compare.Finder.customConfigurationClassName</definition>
        <argsstring></argsstring>
        <name>customConfigurationClassName</name>
        <initializer>= &quot;Smooth.Compare.CustomConfiguration&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="15" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1a530dc6102bbebea87b9fe58857988632" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_smooth_1_1_events_1_1_generic_event" kindref="compound">GenericEvent</ref>&lt; <ref refid="namespace_smooth_1_1_compare_1aea2095b1709ee7519db783edebfff0ec" kindref="member">ComparerType</ref>, <ref refid="namespace_smooth_1_1_compare_1a038dbbd84c1d9094547c7d46c12e593a" kindref="member">EventType</ref>, Type &gt;</type>
        <definition>GenericEvent&lt;ComparerType, EventType, Type&gt; Smooth.Compare.Finder.OnEvent</definition>
        <argsstring></argsstring>
        <name>OnEvent</name>
        <briefdescription>
<para>Wrapped caller / delegate for finder events. To subscribe, add a delegate to the enclosed Handle event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="20" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1ac39bea35bb6297d32469eaacef42c90c" prot="private" static="yes" mutable="no">
        <type>readonly <ref refid="class_smooth_1_1_collections_1_1_dictionary" kindref="compound">Dictionary</ref>&lt; Type, object &gt;</type>
        <definition>readonly Dictionary&lt;Type, object&gt; Smooth.Compare.Finder.comparers</definition>
        <argsstring></argsstring>
        <name>comparers</name>
        <initializer>= new <ref refid="class_smooth_1_1_collections_1_1_dictionary" kindref="compound">Dictionary</ref>&lt;Type, object&gt;(typeComparer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="24" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1a50dbd36c09f4538679abcd1853253df3" prot="private" static="yes" mutable="no">
        <type>readonly <ref refid="class_smooth_1_1_compare_1_1_configuration" kindref="compound">Configuration</ref></type>
        <definition>readonly Configuration Smooth.Compare.Finder.config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="27" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1a1a851a25e4f1e0ad7a24120262b414cd" prot="private" static="yes" mutable="no">
        <type>readonly <ref refid="class_smooth_1_1_collections_1_1_dictionary" kindref="compound">Dictionary</ref>&lt; Type, object &gt;</type>
        <definition>readonly Dictionary&lt;Type, object&gt; Smooth.Compare.Finder.equalityComparers</definition>
        <argsstring></argsstring>
        <name>equalityComparers</name>
        <initializer>= new <ref refid="class_smooth_1_1_collections_1_1_dictionary" kindref="compound">Dictionary</ref>&lt;Type, object&gt;(typeComparer) { { typeof(Type), typeComparer } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="25" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_smooth_1_1_compare_1_1_finder_1afb512b862af3cc966d313d97b184b33b" prot="private" static="yes" mutable="no">
        <type>readonly IEqualityComparer&lt; Type &gt;</type>
        <definition>readonly IEqualityComparer&lt;Type&gt; Smooth.Compare.Finder.typeComparer</definition>
        <argsstring></argsstring>
        <name>typeComparer</name>
        <initializer>= new FuncEqualityComparer&lt;Type&gt;((a, b) =&gt; a == b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="22" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1ac0ff01dcede5e193974c0b57a09e178a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IComparer&lt; T &gt;</type>
        <definition>static IComparer&lt;T&gt; Smooth.Compare.Finder.Comparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>Comparer&lt; T &gt;</name>
        <briefdescription>
<para>Finds or creates a sort order comparer for type T. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Do not call this method directly as it is part of the internal API and a new comparers may be created on every call. Use <ref refid="class_smooth_1_1_collections_1_1_comparer_3_01_t_01_4_1ac0c2cbec5b37ca1363227a4ccedf5c59" kindref="member">Smooth.Collections.Comparer&lt;T&gt;.Default</ref> to get the default sort order comparer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="167" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="167" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a63e80eac3bab277d54b6ad13eea6b155" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEqualityComparer&lt; T &gt;</type>
        <definition>static IEqualityComparer&lt;T&gt; Smooth.Compare.Finder.EqualityComparer&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>EqualityComparer&lt; T &gt;</name>
        <briefdescription>
<para>Finds or creates an equality comparer for type T. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Do not call this method directly as it is part of the internal API and a new comparers may be created on every call. Use <ref refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1ac2e221d0b303435f1f3f8489e4bf778a" kindref="member">Smooth.Collections.EqualityComparer&lt;T&gt;.Default</ref> to get the default equality comparer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="249" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="249" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a8bcd054dd10b5bc2bcba25eee787252b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(Comparison&lt; T &gt; comparison, DelegateFunc&lt; T, T, bool &gt; equals)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>Comparison&lt; T &gt;</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, T, bool &gt;</type>
          <declname>equals</declname>
        </param>
        <briefdescription>
<para>Registers a sort order comparer with the specified comparison and an equality comparer with the specified equals function for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="105" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a0bba18c86faac19b75b47a7001fed795" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(Comparison&lt; T &gt; comparison, DelegateFunc&lt; T, T, bool &gt; equals, DelegateFunc&lt; T, int &gt; hashCode)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>Comparison&lt; T &gt;</type>
          <declname>comparison</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, T, bool &gt;</type>
          <declname>equals</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, int &gt;</type>
          <declname>hashCode</declname>
        </param>
        <briefdescription>
<para>Registers a sort order comparer with the specified comparison and an equality comparer with the specified equals and hashCode functions for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="113" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a6703d1260d31239d8ea3fa9702447013" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(IComparer&lt; T &gt; comparer, IEqualityComparer&lt; T &gt; equalityComparer)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>IComparer&lt; T &gt;</type>
          <declname>comparer</declname>
        </param>
        <param>
          <type>IEqualityComparer&lt; T &gt;</type>
          <declname>equalityComparer</declname>
        </param>
        <briefdescription>
<para>Registers the specified sort order comparer and equality comparer for type T. </para>        </briefdescription>
        <detaileddescription>
<para>Note: On platforms without JIT compilation, the supplied comparers should respectively inherit from <ref refid="class_smooth_1_1_collections_1_1_comparer_3_01_t_01_4" kindref="compound">Smooth.Collections.Comparer&lt;T&gt;</ref> and <ref refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4" kindref="compound">Smooth.Collections.EqualityComparer&lt;T&gt;</ref> in order to force the AOT compiler to create the proper generic types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="123" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1aced1242d0fc7c50514f42f2614fa0d08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(Comparison&lt; T &gt; comparison)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>Comparison&lt; T &gt;</type>
          <declname>comparison</declname>
        </param>
        <briefdescription>
<para>Registers a sort order comparer with the specified comparison for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="135" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a9d9bd4a27b53ccb762a2b3ebc4c7907e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(IComparer&lt; T &gt; comparer)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>IComparer&lt; T &gt;</type>
          <declname>comparer</declname>
        </param>
        <briefdescription>
<para>Registers the specified sort order comparer for type T. </para>        </briefdescription>
        <detaileddescription>
<para>Note: On platforms without JIT compilation, the supplied comparer should inherit from <ref refid="class_smooth_1_1_collections_1_1_comparer_3_01_t_01_4" kindref="compound">Smooth.Collections.Comparer&lt;T&gt;</ref> in order to force the AOT compiler to create the proper generic types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="144" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="144" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a789ff6b4a200e005bf21ad3c7145b387" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, T, bool &gt; equals)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, T, bool &gt;</type>
          <declname>equals</declname>
        </param>
        <briefdescription>
<para>Registers an equality comparer with the specified equals function for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="210" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a998950817e9c0f50af7d960a1b26a9ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(DelegateFunc&lt; T, T, bool &gt; equals, DelegateFunc&lt; T, int &gt; hashCode)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>DelegateFunc&lt; T, T, bool &gt;</type>
          <declname>equals</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, int &gt;</type>
          <declname>hashCode</declname>
        </param>
        <briefdescription>
<para>Registers an equality comparer with the specified equals and hashCode functions for type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="217" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a8c3c83b64623aa521c355f9ebf02f251" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.Register&lt; T &gt;</definition>
        <argsstring>(IEqualityComparer&lt; T &gt; equalityComparer)</argsstring>
        <name>Register&lt; T &gt;</name>
        <param>
          <type>IEqualityComparer&lt; T &gt;</type>
          <declname>equalityComparer</declname>
        </param>
        <briefdescription>
<para>Registers the specified equality comparer for type T. </para>        </briefdescription>
        <detaileddescription>
<para>Note: On platforms without JIT compilation, the supplied comparer should inherit from <ref refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4" kindref="compound">Smooth.Collections.EqualityComparer&lt;T&gt;</ref> in order to force the AOT compiler to create the proper generic types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="226" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="226" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1ab2f7761669c1f4bfb6ace81ff4ed0163" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.RegisterIComparable&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterIComparable&lt; T &gt;</name>
        <briefdescription>
<para>Registers a sort order comparer for type T where T implements IComparable&lt;T&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>Used to circumvent potential JIT exceptions on platforms without JIT compilation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="75" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1acb12bf550758f23dd7a20b7535fae136" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.RegisterIComparableIEquatable&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterIComparableIEquatable&lt; T &gt;</name>
        <briefdescription>
<para>Registers sort order and equality comparers for type T where T implements IComparable&lt;T&gt; and IEquatable&lt;T&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>Used to circumvent potential JIT exceptions on platforms without JIT compilation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="93" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a92b739e875d25b6812fa3fc70caf610a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.RegisterIEquatable&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterIEquatable&lt; T &gt;</name>
        <briefdescription>
<para>Registers an equality comparer for type T where T implements IEquatable&lt;T&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>Used to circumvent potential JIT exceptions on platforms without JIT compilation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="84" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1ae310f32302f0aa36faa0df65905c7b57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Smooth.Compare.Finder.RegisterKeyValuePair&lt; K, V &gt;</definition>
        <argsstring>()</argsstring>
        <name>RegisterKeyValuePair&lt; K, V &gt;</name>
        <briefdescription>
<para>Registers an equality comparer for type T where T is an enumeration. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Enumerations are handled automatically and do not need to be registered when JIT is enabled. </para><para>Registers sort order and equality comparers for KeyValuePair&lt;K, V&gt;s.</para><para>Note: The comparison operations will rely on the comparers for K and V.</para><para>Note: KeyValuePair&lt;,&gt;s are handled automatically and do not need to be registered when JIT is enabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="61" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_finder_1a969d0a73f8a1860ea2edc92765aa6549" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Smooth.Compare.Finder.Finder</definition>
        <argsstring>()</argsstring>
        <name>Finder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="284" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="284" bodyend="310"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages comparer registration and lookup for <ref refid="namespace_smooth_1_1_compare" kindref="compound">Smooth.Compare</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="58274">
        <label>Smooth.Compare.Finder</label>
        <link refid="class_smooth_1_1_compare_1_1_finder"/>
        <childnode refid="58275" relation="usage">
          <edgelabel>OnEvent</edgelabel>
        </childnode>
      </node>
      <node id="58275">
        <label>static</label>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" line="14" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Finder.cs" bodystart="14" bodyend="313"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_compare_1_1_finder_1ac0ff01dcede5e193974c0b57a09e178a" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Comparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1ac39bea35bb6297d32469eaacef42c90c" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>comparers</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a50dbd36c09f4538679abcd1853253df3" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>config</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a380d240ca1b4e1651bb04e43bbc7095b" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>customConfigurationClassName</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a63e80eac3bab277d54b6ad13eea6b155" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>EqualityComparer&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a1a851a25e4f1e0ad7a24120262b414cd" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>equalityComparers</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a969d0a73f8a1860ea2edc92765aa6549" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Finder</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a530dc6102bbebea87b9fe58857988632" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>OnEvent</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a8bcd054dd10b5bc2bcba25eee787252b" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a0bba18c86faac19b75b47a7001fed795" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a6703d1260d31239d8ea3fa9702447013" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1aced1242d0fc7c50514f42f2614fa0d08" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a9d9bd4a27b53ccb762a2b3ebc4c7907e" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a789ff6b4a200e005bf21ad3c7145b387" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a998950817e9c0f50af7d960a1b26a9ca" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a8c3c83b64623aa521c355f9ebf02f251" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>Register&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1ab2f7761669c1f4bfb6ace81ff4ed0163" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>RegisterIComparable&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1acb12bf550758f23dd7a20b7535fae136" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>RegisterIComparableIEquatable&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1a92b739e875d25b6812fa3fc70caf610a" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>RegisterIEquatable&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1ae310f32302f0aa36faa0df65905c7b57" prot="public" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>RegisterKeyValuePair&lt; K, V &gt;</name></member>
      <member refid="class_smooth_1_1_compare_1_1_finder_1afb512b862af3cc966d313d97b184b33b" prot="private" virt="non-virtual"><scope>Smooth::Compare::Finder</scope><name>typeComparer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
