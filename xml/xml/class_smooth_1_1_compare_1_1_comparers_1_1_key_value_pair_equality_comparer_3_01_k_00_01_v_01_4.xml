<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4" kind="class" prot="public">
    <compoundname>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</compoundname>
    <basecompoundref refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4" prot="public" virt="non-virtual">Smooth.Collections.EqualityComparer&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>K</type>
      </param>
      <param>
        <type>V</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4_1a8ee9a24696ba2819a8289d1fe95e5f49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Compare.Comparers.KeyValuePairEqualityComparer&lt; K, V &gt;.Equals</definition>
        <argsstring>(KeyValuePair&lt; K, V &gt; l, KeyValuePair&lt; K, V &gt; r)</argsstring>
        <name>Equals</name>
        <param>
          <type>KeyValuePair&lt; K, V &gt;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>KeyValuePair&lt; K, V &gt;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" line="20" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4_1a4dda914daeebf429b2950d88022b49c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Smooth.Compare.Comparers.KeyValuePairEqualityComparer&lt; K, V &gt;.GetHashCode</definition>
        <argsstring>(KeyValuePair&lt; K, V &gt; kvp)</argsstring>
        <name>GetHashCode</name>
        <param>
          <type>KeyValuePair&lt; K, V &gt;</type>
          <declname>kvp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" line="25" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" bodystart="25" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allocation free equality comparer for KeyValuePair&lt;K,V&gt;s. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="77217">
        <label>Smooth::Collections::EqualityComparer&lt; KeyValuePair&lt; K, V &gt;&gt;</label>
        <link refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4"/>
        <childnode refid="77218" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77218">
        <label>IEqualityComparer&lt; T &gt;</label>
      </node>
      <node id="77216">
        <label>Smooth.Compare.Comparers.KeyValuePairEqualityComparer&lt; K, V &gt;</label>
        <link refid="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4"/>
        <childnode refid="77217" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="77220">
        <label>Smooth::Collections::EqualityComparer&lt; KeyValuePair&lt; K, V &gt;&gt;</label>
        <link refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4"/>
        <childnode refid="77221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77221">
        <label>IEqualityComparer&lt; T &gt;</label>
      </node>
      <node id="77219">
        <label>Smooth.Compare.Comparers.KeyValuePairEqualityComparer&lt; K, V &gt;</label>
        <link refid="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4"/>
        <childnode refid="77220" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Compare/Comparers/KeyValuePairComparers.cs" bodystart="19" bodyend="33"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1ac2e221d0b303435f1f3f8489e4bf778a" prot="public" virt="non-virtual"><scope>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</scope><name>Default</name></member>
      <member refid="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4_1a8ee9a24696ba2819a8289d1fe95e5f49" prot="public" virt="non-virtual"><scope>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</scope><name>Equals</name></member>
      <member refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1a884d6aa3c9e968b24ec3e449e29359e9" prot="public" virt="pure-virtual" ambiguityscope="Smooth::Collections::EqualityComparer&lt; T &gt;."><scope>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</scope><name>Equals</name></member>
      <member refid="class_smooth_1_1_compare_1_1_comparers_1_1_key_value_pair_equality_comparer_3_01_k_00_01_v_01_4_1a4dda914daeebf429b2950d88022b49c3" prot="public" virt="non-virtual"><scope>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</scope><name>GetHashCode</name></member>
      <member refid="class_smooth_1_1_collections_1_1_equality_comparer_3_01_t_01_4_1a12b2f2e253569c2d62b4a5874a04fa5e" prot="public" virt="pure-virtual" ambiguityscope="Smooth::Collections::EqualityComparer&lt; T &gt;."><scope>Smooth::Compare::Comparers::KeyValuePairEqualityComparer&lt; K, V &gt;</scope><name>GetHashCode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
