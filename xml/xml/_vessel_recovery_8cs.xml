<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_vessel_recovery_8cs" kind="file">
    <compoundname>VesselRecovery.cs</compoundname>
    <innerclass refid="class_vessel_recovery" prot="public">VesselRecovery</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_vessel_recovery_8cs_1a5ba9f8ef658a59b50c4117e56b253a97" prot="public" static="no">
        <type>KSP.UI.Screens.SpaceCenter.MissionSummaryDialog</type>
        <definition>using MissionSummary =  KSP.UI.Screens.SpaceCenter.MissionSummaryDialog</definition>
        <argsstring></argsstring>
        <name>MissionSummary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Recovery/VesselRecovery.cs" line="5" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Recovery/VesselRecovery.cs" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.UI.Screens;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_funding_8cs_1a5ba9f8ef658a59b50c4117e56b253a97" kindref="member">MissionSummary</ref><sp/>=<sp/>KSP.UI.Screens.SpaceCenter.MissionSummaryDialog;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.Localization;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">[<ref refid="class_k_s_p_scenario" kindref="compound">KSPScenario</ref>(<ref refid="_scenario_attribute_8cs_1aef569c179851754ae041daaaf66454e7" kindref="member">ScenarioCreationOptions</ref>.AddToAllGames<sp/>|<sp/><ref refid="_scenario_attribute_8cs_1aef569c179851754ae041daaaf66454e7" kindref="member">ScenarioCreationOptions</ref>.AddToExistingMissionGames<sp/>|<sp/><ref refid="_scenario_attribute_8cs_1aef569c179851754ae041daaaf66454e7" kindref="member">ScenarioCreationOptions</ref>.AddToNewMissionGames,<sp/><ref refid="_high_logic_8cs_1a0687e907db3af3681f90377d69f32090" kindref="member">GameScenes</ref>.SPACECENTER,<sp/><ref refid="_high_logic_8cs_1a0687e907db3af3681f90377d69f32090" kindref="member">GameScenes</ref>.FLIGHT,<sp/><ref refid="_high_logic_8cs_1a0687e907db3af3681f90377d69f32090" kindref="member">GameScenes</ref>.TRACKSTATION,<sp/><ref refid="_high_logic_8cs_1a0687e907db3af3681f90377d69f32090" kindref="member">GameScenes</ref>.EDITOR)]</highlight></codeline>
<codeline lineno="10" refid="class_vessel_recovery" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vessel_recovery" kindref="compound">VesselRecovery</ref><sp/>:<sp/><ref refid="class_scenario_module" kindref="compound">ScenarioModule</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vessel_recovery_1ad8c27a5fcb556b596fd0d7883b289594" kindref="member">OnAwake</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecovered.Add(OnVesselRecovered);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vessel_recovery_1a4304e0fdca76130f4d3afd0b17199f36" kindref="member">OnDestroy</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecovered.Remove(OnVesselRecovered);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnVesselRecovered(<ref refid="class_proto_vessel" kindref="compound">ProtoVessel</ref><sp/>pv,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>quick)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pv<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>home<sp/>=<sp/>SpaceCenter.Instance.cb;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceFromKSC<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxDist<sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(home<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceFromKSC<sp/>=<sp/>SpaceCenter.Instance.GreatCircleDistance(home.GetRelSurfaceNVector(pv.latitude,<sp/>pv.longitude));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDist<sp/>=<sp/>home.Radius<sp/>*<sp/>Math.PI;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!quick)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;[VesselRecovery]:<sp/>No<sp/>&apos;home&apos;<sp/>found.<sp/>This<sp/>should<sp/>never<sp/>happen<sp/>in<sp/>a<sp/>build!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_modifier_query" kindref="compound">ValueModifierQuery</ref><sp/>minQuery<sp/>=<sp/>ValueModifierQuery.RunQuery(</highlight><highlight class="stringliteral">&quot;RecoveryMinimumDelta&quot;</highlight><highlight class="normal">,<sp/>1.0f);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_modifier_query" kindref="compound">ValueModifierQuery</ref><sp/>maxQuery<sp/>=<sp/>ValueModifierQuery.RunQuery(</highlight><highlight class="stringliteral">&quot;RecoveryMaximumDelta&quot;</highlight><highlight class="normal">,<sp/>1.0f);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minRecovery<sp/>=<sp/>Math.Max(0.0f,<sp/>Math.Min(1.0f,<sp/>0.10f<sp/>+<sp/>minQuery.GetEffectDelta()));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxRecovery<sp/>=<sp/>Math.Max(0.0f,<sp/>Math.Min(1.0f,<sp/>0.98f<sp/>+<sp/>maxQuery.GetEffectDelta()));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>recoveryFactor<sp/>=<sp/>Mathf.Lerp(maxRecovery,<sp/>minRecovery,<sp/>(float)(distanceFromKSC<sp/>/<sp/>maxDist));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vanillaFactor<sp/>=<sp/>Mathf.Lerp(0.98f,<sp/>0.1f,<sp/>(float)(distanceFromKSC<sp/>/<sp/>maxDist));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pv.<ref refid="class_proto_vessel_1a2b403ac1f9b8afef6c027ef448950092" kindref="member">landedAt</ref>.Contains(</highlight><highlight class="stringliteral">&quot;KSC&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryFactor<sp/>=<sp/>0.98f;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vanillaFactor<sp/>=<sp/>0.98f;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pv.<ref refid="class_proto_vessel_1a2b403ac1f9b8afef6c027ef448950092" kindref="member">landedAt</ref>.Contains(</highlight><highlight class="stringliteral">&quot;Runway&quot;</highlight><highlight class="normal">)<sp/>||<sp/>pv.landedAt.Contains(</highlight><highlight class="stringliteral">&quot;LaunchPad&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryFactor<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vanillaFactor<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>launchsiteRecoveryFactor<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>launchsiteVanillaFactor<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkLaunchSites(pv,<sp/>out<sp/>launchsiteRecoveryFactor,<sp/>out<sp/>launchsiteVanillaFactor))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryFactor<sp/>=<sp/>launchsiteRecoveryFactor;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vanillaFactor<sp/>=<sp/>launchsiteVanillaFactor;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>consistently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>(recoveryFactor<sp/>/<sp/>vanillaFactor)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>deltaString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>!=<sp/>0f)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaString<sp/>=<sp/>(delta<sp/>&gt;<sp/>0.0f<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&lt;color=#caff00&gt;(+&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&lt;color=#feb200&gt;(&quot;</highlight><highlight class="normal">)<sp/>+<sp/>(delta<sp/>*<sp/>100f).ToString(</highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%)&lt;/color&gt;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_funding" kindref="compound">Funding</ref>.<ref refid="class_funding_1ad755c38d8ba0f9ae479698aa49b9b9c8" kindref="member">Instance</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_reputation" kindref="compound">Reputation</ref>.<ref refid="class_reputation_1aae2cd2e84846567e3a69b5b41070f711" kindref="member">Instance</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_research_and_development" kindref="compound">ResearchAndDevelopment</ref>.<ref refid="class_research_and_development_1ae418d96a1797a9a90bc2bf66619bc1a6" kindref="member">Instance</ref><sp/>==<sp/>null<sp/>&amp;&amp;<sp/>pv.<ref refid="class_proto_vessel_1a1263505ad9613922c0887fc129e2b021" kindref="member">vesselRef</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>pv.<ref refid="class_proto_vessel_1a1263505ad9613922c0887fc129e2b021" kindref="member">vesselRef</ref>.<ref refid="class_vessel_1a10ea8bfa73ddc9f6de860a0fdb4613d8" kindref="member">GetCrewCount</ref>()<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecoveryProcessingComplete.Fire(pv,<sp/>null,<sp/>recoveryFactor);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mission_recovery_dialog" kindref="compound">MissionRecoveryDialog</ref><sp/>mrd<sp/>=<sp/>quick<sp/>?<sp/>null<sp/>:<sp/>MissionRecoveryDialog.CreateFullDialog(pv);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!quick)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>initial<sp/>values<sp/>here<sp/>since<sp/>strategies<sp/>can<sp/>affect<sp/>the<sp/>earnings<sp/>at<sp/>any<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_funding" kindref="compound">Funding</ref>.<ref refid="class_funding_1ad755c38d8ba0f9ae479698aa49b9b9c8" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.beforeMissionFunds<sp/>=<sp/><ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021cad42b2bb7ac17fc34a099909c0a2f1de9" kindref="member">Funding.Instance.Funds</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_reputation" kindref="compound">Reputation</ref>.<ref refid="class_reputation_1aae2cd2e84846567e3a69b5b41070f711" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.beforeMissionReputation<sp/>=<sp/>Reputation.Instance.reputation;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_research_and_development" kindref="compound">ResearchAndDevelopment</ref>.<ref refid="class_research_and_development_1ae418d96a1797a9a90bc2bf66619bc1a6" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.beforeMissionScience<sp/>=<sp/><ref refid="_editor_part_list_8cs_1aedc8b3ce34bf78683b574e3d1ad5b19ba35bf1210e6727959a7a88a00462db959" kindref="member">ResearchAndDevelopment.Instance.Science</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(pv.<ref refid="class_proto_vessel_1a2b403ac1f9b8afef6c027ef448950092" kindref="member">landedAt</ref>))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tmplandedAt<sp/>=<sp/>string.Empty;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pv.<ref refid="class_proto_vessel_1a5d114ea6b028091ea2df90801319e885" kindref="member">displaylandedAt</ref><sp/>==<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Empty)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmplandedAt<sp/>=<sp/>ResearchAndDevelopment.GetMiniBiomedisplayNameByScienceID(Vessel.GetLandedAtString(pv.landedAt),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmplandedAt<sp/>=<sp/>Localizer.Format(pv.displaylandedAt);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.recoveryLocation<sp/>=<sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_303271&quot;</highlight><highlight class="normal">,<sp/>tmplandedAt);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_303271<sp/>=<sp/>At<sp/>&lt;&lt;1&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.recoveryFactor<sp/>=<sp/>KSPUtil.LocalizeNumber(recoveryFactor<sp/>*<sp/>100f,<sp/></highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deltaString;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.recoveryLocation<sp/>=<sp/>Localizer.Format(</highlight><highlight class="stringliteral">&quot;#autoLOC_303276&quot;</highlight><highlight class="normal">,<sp/>(distanceFromKSC*0.001f).ToString(</highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#autoLOC_303276<sp/>=<sp/>&lt;&lt;1&gt;&gt;Km<sp/>from<sp/>KSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.recoveryFactor<sp/>=<sp/>KSPUtil.LocalizeNumber(recoveryFactor<sp/>*<sp/>100f,<sp/></highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deltaString;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;[VesselRecovery]:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pv.GetDisplayName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>recovered<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrd.<ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mission_recovery_dialog_1ac49803efa5189739c0ca5be613094662" kindref="member">recoveryLocation</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>Recovery<sp/>Value:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>mrd.<ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mission_recovery_dialog_1ae0026c9a2e204ec03177159ca5ed7f57" kindref="member">recoveryFactor</ref>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>quick<sp/>recoveries,<sp/>this<sp/>will<sp/>fire<sp/>null<sp/>to<sp/>all<sp/>the<sp/>currency<sp/>scenarios,<sp/>which<sp/>will<sp/>cause<sp/>them<sp/>to<sp/>skip<sp/>building<sp/>a<sp/>results<sp/>dialog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoverVesselCrew(pv,<sp/>mrd);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecoveryProcessing.Fire(pv,<sp/>mrd,<sp/>recoveryFactor);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quick)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecoveryProcessingComplete.Fire(pv,<sp/>null,<sp/>recoveryFactor);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_funding" kindref="compound">Funding</ref>.<ref refid="class_funding_1ad755c38d8ba0f9ae479698aa49b9b9c8" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.totalFunds<sp/>=<sp/><ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021cad42b2bb7ac17fc34a099909c0a2f1de9" kindref="member">Funding.Instance.Funds</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_reputation" kindref="compound">Reputation</ref>.<ref refid="class_reputation_1aae2cd2e84846567e3a69b5b41070f711" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.totalReputation<sp/>=<sp/><ref refid="class_reputation_1ad013f6e9e070456d1e1e7b5e087bc07d" kindref="member">Reputation.CurrentRep</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_research_and_development" kindref="compound">ResearchAndDevelopment</ref>.<ref refid="class_research_and_development_1ae418d96a1797a9a90bc2bf66619bc1a6" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.totalScience<sp/>=<sp/><ref refid="_editor_part_list_8cs_1aedc8b3ce34bf78683b574e3d1ad5b19ba35bf1210e6727959a7a88a00462db959" kindref="member">ResearchAndDevelopment.Instance.Science</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_currency_modifier_query" kindref="compound">CurrencyModifierQuery</ref><sp/>query<sp/>=<sp/>CurrencyModifierQuery.RunQuery(<ref refid="_currency_util_8cs_1a5e7da8007c5a53c936acdce93de26b74a1c101fe0562417dd5a58d80e82297384" kindref="member">TransactionReasons.VesselRecovery</ref>,<sp/>(float)mrd.fundsEarned,<sp/>mrd.scienceEarned,<sp/>mrd.reputationEarned);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.fundsEarned<sp/>+=<sp/>query.GetEffectDelta(<ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021cad42b2bb7ac17fc34a099909c0a2f1de9" kindref="member">Currency.Funds</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.FundsModifier<sp/>=<sp/>query.GetEffectDeltaText(<ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021cad42b2bb7ac17fc34a099909c0a2f1de9" kindref="member">Currency.Funds</ref>,<sp/></highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">,<sp/>CurrencyModifierQuery.TextStyling.OnGUI);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.reputationEarned<sp/>+=<sp/>query.GetEffectDelta(<ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021ca8d9bec4f224970e231041639de877092" kindref="member">Currency.Reputation</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.RepModifier<sp/>=<sp/>query.GetEffectDeltaText(<ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021ca8d9bec4f224970e231041639de877092" kindref="member">Currency.Reputation</ref>,<sp/></highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">,<sp/>CurrencyModifierQuery.TextStyling.OnGUI);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.scienceEarned<sp/>+=<sp/>query.GetEffectDelta(<ref refid="_editor_part_list_8cs_1aedc8b3ce34bf78683b574e3d1ad5b19ba35bf1210e6727959a7a88a00462db959" kindref="member">Currency.Science</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrd.ScienceModifier<sp/>=<sp/>query.GetEffectDeltaText(<ref refid="_editor_part_list_8cs_1aedc8b3ce34bf78683b574e3d1ad5b19ba35bf1210e6727959a7a88a00462db959" kindref="member">Currency.Science</ref>,<sp/></highlight><highlight class="stringliteral">&quot;N1&quot;</highlight><highlight class="normal">,<sp/>CurrencyModifierQuery.TextStyling.OnGUI);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onVesselRecoveryProcessingComplete.Fire(pv,<sp/>mrd,<sp/>recoveryFactor);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkLaunchSites(<ref refid="class_proto_vessel" kindref="compound">ProtoVessel</ref><sp/>pv,<sp/>out<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>recoveryFactor,<sp/>out<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vanillaFactor)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundLaunchsite<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryFactor<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vanillaFactor<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>landedAt<sp/>=<sp/>MiniBiome.ConvertTagtoLandedAt(pv.landedAt);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_launch_site" kindref="compound">LaunchSite</ref><sp/>launchSite;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lsI<sp/>=<sp/>0;<sp/>lsI<sp/>&lt;<sp/>PSystemSetup.Instance.LaunchSites.Count;<sp/>lsI++)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>launchSite<sp/>=<sp/>PSystemSetup.Instance.LaunchSites[lsI];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(landedAt.Contains(<ref refid="class_mini_biome" kindref="compound">MiniBiome</ref>.<ref refid="class_mini_biome_1ab8a73bff3b64d034fcbf4e9d3ae7e132" kindref="member">ConvertTagtoLandedAt</ref>(launchSite.name)))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryFactor<sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vanillaFactor<sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundLaunchsite<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundLaunchsite;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recoverVesselCrew(<ref refid="class_proto_vessel" kindref="compound">ProtoVessel</ref><sp/>pv,<sp/><ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mission_recovery_dialog" kindref="compound">MissionRecoveryDialog</ref><sp/>mrDialog)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;ProtoCrewMember&gt;<sp/>vesselCrew<sp/>=<sp/>pv.GetVesselCrew();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0,<sp/>cC<sp/>=<sp/>vesselCrew.Count;<sp/>c<sp/>&lt;<sp/>cC;<sp/>++c)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_proto_crew_member" kindref="compound">ProtoCrewMember</ref><sp/>crew<sp/>=<sp/>vesselCrew[c];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crew.rosterStatus<sp/>=<sp/>ProtoCrewMember.RosterStatus.Available;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crew.flightLog.AddEntryUnique(FlightLog.EntryType.Recover);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>kerbals<sp/>used<sp/>their<sp/>parachutes<sp/>during<sp/>flight,<sp/>we<sp/>need<sp/>to<sp/>reset<sp/>their<sp/>state<sp/>to<sp/>stowed<sp/>in<sp/>order<sp/>to<sp/>repack<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Chute<sp/>node<sp/>can<sp/>be<sp/>null<sp/>if<sp/>you<sp/>have<sp/>never<sp/>eva&apos;d<sp/>with<sp/>this<sp/>kerbal<sp/>before<sp/>and<sp/>you<sp/>recover<sp/>the<sp/>vessel<sp/>that<sp/>the<sp/>kerbal<sp/>is<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>they<sp/>haven&apos;t<sp/>eva&apos;d,<sp/>then<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>reset<sp/>the<sp/>parachute<sp/>state,<sp/>so<sp/>it&apos;s<sp/>not<sp/>a<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crew.<ref refid="class_proto_crew_member_1af059ca486b3e38fb02eddf52dea3fbda" kindref="member">ChuteNode</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crew.ChuteNode.SetValue(</highlight><highlight class="stringliteral">&quot;persistentState&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;STOWED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mrDialog<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Crewmember<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>crew.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>available<sp/>again&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mrDialog.AddCrewWidget(MissionSummary.CrewWidget.Create(crew,<sp/>mrDialog));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crew.ArchiveFlightLog();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Recovery/VesselRecovery.cs"/>
  </compounddef>
</doxygen>
