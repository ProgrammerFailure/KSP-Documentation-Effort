<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_option_8cs" kind="file">
    <compoundname>Option.cs</compoundname>
    <innerclass refid="class_smooth_1_1_algebraics_1_1_option" prot="public">Smooth::Algebraics::Option</innerclass>
    <innerclass refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" prot="public">Smooth::Algebraics::Option&lt; T &gt;</innerclass>
    <innernamespace refid="namespace_smooth_1_1_algebraics">Smooth::Algebraics</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Smooth.Collections;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Smooth.Delegates;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_t_m_pro_1_1_editor_utilities_1ac956f92fd288b0b627522e75a9c5b9adae510cdf33cd497134b47b9316314d4b4" kindref="member">Smooth</ref>.Algebraics<sp/>{</highlight></codeline>
<codeline lineno="11" refid="class_smooth_1_1_algebraics_1_1_option" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Create&lt;T&gt;(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>==<sp/>null<sp/>?<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>(value);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Some&lt;T&gt;(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>(value);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>None&lt;T&gt;(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>ToOption&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>==<sp/>null<sp/>?<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>(value);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>ToSome&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>(value);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>ToNone&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Flatten&lt;T&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;Option&lt;T&gt;</ref>&gt;<sp/>option)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>option.value;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[System.Serializable]</highlight></codeline>
<codeline lineno="74" refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt;T&gt;<sp/>:<sp/>IComparable&lt;Option&lt;T&gt;&gt;,<sp/>IEquatable&lt;Option&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/><ref refid="_editor_enums_8cs_1abbc581f6e4489b4bf5f750d61f26230ca6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSome;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>readonly<sp/>T<sp/>value;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNone<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!isSome;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.isSome<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>U<sp/>Cata&lt;U&gt;(DelegateFunc&lt;T,<sp/>U&gt;<sp/>someFunc,<sp/>U<sp/>noneValue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>someFunc(value)<sp/>:<sp/>noneValue;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>U<sp/>Cata&lt;U,<sp/>P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>U&gt;<sp/>someFunc,<sp/>P<sp/>p,<sp/>U<sp/>noneValue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>someFunc(value,<sp/>p)<sp/>:<sp/>noneValue;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>U<sp/>Cata&lt;U&gt;(DelegateFunc&lt;T,<sp/>U&gt;<sp/>someFunc,<sp/>DelegateFunc&lt;U&gt;<sp/>noneFunc)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>someFunc(value)<sp/>:<sp/>noneFunc();<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>U<sp/>Cata&lt;U,<sp/>P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>U&gt;<sp/>someFunc,<sp/>P<sp/>p,<sp/>DelegateFunc&lt;U&gt;<sp/>noneFunc)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>someFunc(value,<sp/>p)<sp/>:<sp/>noneFunc();<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>U<sp/>Cata&lt;U,<sp/>P,<sp/>P2&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>U&gt;<sp/>someFunc,<sp/>P<sp/>p,<sp/>DelegateFunc&lt;P2,<sp/>U&gt;<sp/>noneFunc,<sp/>P2<sp/>p2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>someFunc(value,<sp/>p)<sp/>:<sp/>noneFunc(p2);<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Contains(T<sp/>t)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>Smooth.Collections.EqualityComparer&lt;T&gt;.Default.Equals(value,<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Contains(T<sp/>t,<sp/>IEqualityComparer&lt;T&gt;<sp/>comparer)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>comparer.Equals(value,<sp/>t);<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IfEmpty(<ref refid="namespace_smooth_1_1_delegates_1aa01c3fed57060c493c53e9cd1da5cf1d" kindref="member">DelegateAction</ref><sp/>action)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSome)<sp/>action();<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IfEmpty&lt;P&gt;(DelegateAction&lt;P&gt;<sp/>action,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSome)<sp/>action(p);<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEach(DelegateAction&lt;T&gt;<sp/>action)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>action(value);<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEach&lt;P&gt;(DelegateAction&lt;T,<sp/>P&gt;<sp/>action,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>action(value,<sp/>p);<sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEachOr(DelegateAction&lt;T&gt;<sp/>someAction,<sp/><ref refid="namespace_smooth_1_1_delegates_1aa01c3fed57060c493c53e9cd1da5cf1d" kindref="member">DelegateAction</ref><sp/>noneAction)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>someAction(value);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>noneAction();<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEachOr&lt;P&gt;(DelegateAction&lt;T,<sp/>P&gt;<sp/>someAction,<sp/>P<sp/>p,<sp/><ref refid="namespace_smooth_1_1_delegates_1aa01c3fed57060c493c53e9cd1da5cf1d" kindref="member">DelegateAction</ref><sp/>noneAction)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>someAction(value,<sp/>p);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>noneAction();<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEachOr&lt;P2&gt;(DelegateAction&lt;T&gt;<sp/>someAction,<sp/>DelegateAction&lt;P2&gt;<sp/>noneAction,<sp/>P2<sp/>p2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>someAction(value);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>noneAction(p2);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEachOr&lt;P,<sp/>P2&gt;(DelegateAction&lt;T,<sp/>P&gt;<sp/>someAction,<sp/>P<sp/>p,<sp/>DelegateAction&lt;P2&gt;<sp/>noneAction,<sp/>P2<sp/>p2)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSome)<sp/>someAction(value,<sp/>p);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>noneAction(p2);<sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Or(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>noneOption)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/>noneOption;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Or(DelegateFunc&lt;<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>&gt;<sp/>noneFunc)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/>noneFunc();<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Or&lt;P&gt;(DelegateFunc&lt;P,<sp/>Option&lt;T&gt;&gt;<sp/>noneFunc,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/>noneFunc(p);<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref><sp/>Select&lt;U&gt;(DelegateFunc&lt;T,<sp/>U&gt;<sp/>selector)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>(selector(value))<sp/>:<sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>.<ref refid="_editor_enums_8cs_1abbc581f6e4489b4bf5f750d61f26230ca6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref>;<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref><sp/>Select&lt;U,<sp/>P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>U&gt;<sp/>selector,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>(selector(value,<sp/>p))<sp/>:<sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>.<ref refid="_editor_enums_8cs_1abbc581f6e4489b4bf5f750d61f26230ca6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref>;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref><sp/>SelectMany&lt;U&gt;(DelegateFunc&lt;T,<sp/>Option&lt;U&gt;&gt;<sp/>selector)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>selector(value)<sp/>:<sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref><sp/>SelectMany&lt;U,<sp/>P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>Option&lt;U&gt;&gt;<sp/>selector,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>selector(value,<sp/>p)<sp/>:<sp/><ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option&lt;U&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>T<sp/>ValueOr(T<sp/>noneValue)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>value<sp/>:<sp/>noneValue;<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>T<sp/>ValueOr(DelegateFunc&lt;T&gt;<sp/>noneFunc)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>value<sp/>:<sp/>noneFunc();<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>T<sp/>ValueOr&lt;P&gt;(DelegateFunc&lt;P,<sp/>T&gt;<sp/>noneFunc,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>value<sp/>:<sp/>noneFunc(p);<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Where(DelegateFunc&lt;T,<sp/>bool&gt;<sp/>predicate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>predicate(value)<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>Where&lt;P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>bool&gt;<sp/>predicate,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>predicate(value,<sp/>p)<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>WhereNot(DelegateFunc&lt;T,<sp/>bool&gt;<sp/>predicate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>!predicate(value)<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>WhereNot&lt;P&gt;(DelegateFunc&lt;T,<sp/>P,<sp/>bool&gt;<sp/>predicate,<sp/>P<sp/>p)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>&amp;&amp;<sp/>!predicate(value,<sp/>p)<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>.None;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o<sp/>is<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>&amp;&amp;<sp/>this.Equals((<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref>)<sp/>o);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equals(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>other.Contains(value)<sp/>:<sp/>other.<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4_1a083a1fed8e10ee6b7d6275b228d37446" kindref="member">isNone</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetHashCode()<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Smooth.Collections.EqualityComparer&lt;T&gt;.Default.GetHashCode(value);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CompareTo(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/>(other.isSome<sp/>?<sp/>Smooth.Collections.Comparer&lt;T&gt;.Default.Compare(value,<sp/>other.value)<sp/>:<sp/>1)<sp/>:<sp/>other.isSome<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>==<sp/>(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.Equals(rhs);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>!=<sp/>(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!lhs.Equals(rhs);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>&gt;<sp/>(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.CompareTo(rhs)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>&lt;<sp/>(Option&lt;T&gt;<sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.CompareTo(rhs)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>&gt;=<sp/>(<ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.CompareTo(rhs)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>&lt;=<sp/>(Option&lt;T&gt;<sp/>lhs,<sp/><ref refid="struct_smooth_1_1_algebraics_1_1_option_3_01_t_01_4" kindref="compound">Option&lt;T&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.CompareTo(rhs)<sp/>&lt;=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ToString()<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSome<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Some(&quot;</highlight><highlight class="normal"><sp/>+<sp/>value<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Algebraics/Option.cs"/>
  </compounddef>
</doxygen>
