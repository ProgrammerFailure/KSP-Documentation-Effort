<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_smooth_1_1_slinq_1_1_slinqable" kind="class" prot="public">
    <compoundname>Smooth::Slinq::Slinqable</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a1f8305cfbd63098d4a8a19faef666ea7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, <ref refid="struct_smooth_1_1_algebraics_1_1_unit" kindref="compound">Unit</ref> &gt;</type>
        <definition>static Slinq&lt;T, Unit&gt; Smooth.Slinq.Slinqable.Empty&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>Empty&lt; T &gt;</name>
        <briefdescription>
<para>Returns an empty <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> of the specified type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="21" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ada97cb9037d0c765f33532675509a4e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; int, FuncOptionContext&lt; int, int &gt; &gt;</type>
        <definition>static Slinq&lt;int, FuncOptionContext&lt;int, int&gt; &gt; Smooth.Slinq.Slinqable.Range</definition>
        <argsstring>(int start, int count)</argsstring>
        <name>Range</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the integers within a specified range. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="254" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="254" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1aed8b7f186bb2f7bec81ada6960bf4204" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, OptionContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, OptionContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Repeat&lt; T &gt;</definition>
        <argsstring>(T value)</argsstring>
        <name>Repeat&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that repeats the specified value. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="278" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ab4e4f24c37e77cfa2202e3eaf3ab363f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IntContext&lt; T, OptionContext&lt; T &gt; &gt; &gt;</type>
        <definition>static Slinq&lt;T, IntContext&lt;T, OptionContext&lt;T&gt; &gt; &gt; Smooth.Slinq.Slinqable.Repeat&lt; T &gt;</definition>
        <argsstring>(T value, int count)</argsstring>
        <name>Repeat&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that repeats the specified value the specified number of times. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="287" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a7cfd3da6e29b2f6b5451b6d28c0e539f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Byte, FuncContext&lt; Byte, Byte &gt; &gt;</type>
        <definition>static Slinq&lt;Byte, FuncContext&lt;Byte, Byte&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Byte start, Byte step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Byte</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Byte</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="352" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1acdf5831b9fd0bae744b216787aadeabc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; SByte, FuncContext&lt; SByte, SByte &gt; &gt;</type>
        <definition>static Slinq&lt;SByte, FuncContext&lt;SByte, SByte&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(SByte start, SByte step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>SByte</type>
          <declname>start</declname>
        </param>
        <param>
          <type>SByte</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="361" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ab827f3fae68865bd918299febb410a3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Int16, FuncContext&lt; Int16, Int16 &gt; &gt;</type>
        <definition>static Slinq&lt;Int16, FuncContext&lt;Int16, Int16&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Int16 start, Int16 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Int16</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Int16</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="370" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a1e44d033c31953f5594d4ae7900ef1a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; UInt16, FuncContext&lt; UInt16, UInt16 &gt; &gt;</type>
        <definition>static Slinq&lt;UInt16, FuncContext&lt;UInt16, UInt16&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(UInt16 start, UInt16 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>UInt16</type>
          <declname>start</declname>
        </param>
        <param>
          <type>UInt16</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="379" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a1b1247aab060d1c65d901fa0e144e3ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Int32, FuncContext&lt; Int32, Int32 &gt; &gt;</type>
        <definition>static Slinq&lt;Int32, FuncContext&lt;Int32, Int32&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Int32 start, Int32 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Int32</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Int32</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="388" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a661847ae1b89bc3792fb10ca2be22c0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; UInt32, FuncContext&lt; UInt32, UInt32 &gt; &gt;</type>
        <definition>static Slinq&lt;UInt32, FuncContext&lt;UInt32, UInt32&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(UInt32 start, UInt32 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>UInt32</type>
          <declname>start</declname>
        </param>
        <param>
          <type>UInt32</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="397" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a46f73fd43ea273da85afb882c929985b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Int64, FuncContext&lt; Int64, Int64 &gt; &gt;</type>
        <definition>static Slinq&lt;Int64, FuncContext&lt;Int64, Int64&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Int64 start, Int64 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Int64</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Int64</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="406" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ac01cc0f75ebf1df8f027f122475f9813" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; UInt64, FuncContext&lt; UInt64, UInt64 &gt; &gt;</type>
        <definition>static Slinq&lt;UInt64, FuncContext&lt;UInt64, UInt64&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(UInt64 start, UInt64 step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>UInt64</type>
          <declname>start</declname>
        </param>
        <param>
          <type>UInt64</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="415" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="415" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a45a7c5852979c59e218accba2d012f47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Single, FuncContext&lt; Single, Single &gt; &gt;</type>
        <definition>static Slinq&lt;Single, FuncContext&lt;Single, Single&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Single start, Single step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Single</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Single</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="424" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="424" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a58c2d49da565656df0394e897f83621b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Double, FuncContext&lt; Double, Double &gt; &gt;</type>
        <definition>static Slinq&lt;Double, FuncContext&lt;Double, Double&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Double start, Double step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Double</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Double</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="433" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="433" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a6c2897d019ad9121cfc00820d5e6e66e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; Decimal, FuncContext&lt; Decimal, Decimal &gt; &gt;</type>
        <definition>static Slinq&lt;Decimal, FuncContext&lt;Decimal, Decimal&gt; &gt; Smooth.Slinq.Slinqable.Sequence</definition>
        <argsstring>(Decimal start, Decimal step)</argsstring>
        <name>Sequence</name>
        <param>
          <type>Decimal</type>
          <declname>start</declname>
        </param>
        <param>
          <type>Decimal</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the arithmetic sequence generated by the specified start and step values. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="442" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="442" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a98482fb610572ba3b4b15f60460e7050" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, FuncContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, FuncContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Sequence&lt; T &gt;</definition>
        <argsstring>(T seed, DelegateFunc&lt; T, T &gt; selector)</argsstring>
        <name>Sequence&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, T &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the sequence generated by specified seed value and selector function. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="308" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ab94afdf68d8f20be485c66f919444f8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, FuncOptionContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, FuncOptionContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Sequence&lt; T &gt;</definition>
        <argsstring>(T seed, DelegateFunc&lt; T, Option&lt; T &gt;&gt; selector)</argsstring>
        <name>Sequence&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the sequence generated by specified seed value and selector function. </para>        </briefdescription>
        <detaileddescription>
<para>The enumeration will end when the selector returns a None option.</para><para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="328" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a5b58e251c8ddf16b7252490276cb53f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, FuncContext&lt; T, P &gt; &gt;</type>
        <definition>static Slinq&lt;T, FuncContext&lt;T, P&gt; &gt; Smooth.Slinq.Slinqable.Sequence&lt; T, P &gt;</definition>
        <argsstring>(T seed, DelegateFunc&lt; T, P, T &gt; selector, P parameter)</argsstring>
        <name>Sequence&lt; T, P &gt;</name>
        <param>
          <type>T</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, P, T &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the sequence generated by specified seed value and selector function. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="317" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a9cda0669daf7c3337310f6441f628577" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, FuncOptionContext&lt; T, P &gt; &gt;</type>
        <definition>static Slinq&lt;T, FuncOptionContext&lt;T, P&gt; &gt; Smooth.Slinq.Slinqable.Sequence&lt; T, P &gt;</definition>
        <argsstring>(T seed, DelegateFunc&lt; T, P, Option&lt; T &gt;&gt; selector, P parameter)</argsstring>
        <name>Sequence&lt; T, P &gt;</name>
        <param>
          <type>T</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>DelegateFunc&lt; T, P, <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>P</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the sequence generated by specified seed value and selector function. </para>        </briefdescription>
        <detaileddescription>
<para>The enumeration will end when the selector returns a None option.</para><para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="339" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a547096fd95817f75d6d2037166791ee8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IEnumerableContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IEnumerableContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this IEnumerable&lt; T &gt; enumerable)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this IEnumerable&lt; T &gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the specified enumerable. </para>        </briefdescription>
        <detaileddescription>
<para>The returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be backed by an IEnumerator&lt;T&gt;, and thus will allocate an object or box.</para><para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="36" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ae5c1a044763bc4b2179f87db32451891" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex, int step)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the elements of the specified list using the specified start index and step. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="53" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a2806f946a715416dedfb20f5b23cab5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the elements of the specified list in ascending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="77" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a47113ae659608e85b18efab3edb20d28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the elements of the specified list in ascending order starting with the specified index. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="97" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1ac119ecf615d58b369421dcbe0c57cb63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this LinkedListNode&lt; T &gt; node, int step)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this LinkedListNode&lt; T &gt;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that starts with the value of the specified node and proceeds along node links. </para>        </briefdescription>
        <detaileddescription>
<para>If step is positive, the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will move along Next links, if step is negative the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will move along Previous links. If step is zero the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will stay in place.</para><para>If the specified node is null, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="173" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a5c3abb5703bc810e3aa89742733d5c21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this LinkedList&lt; T &gt; list)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this LinkedList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the values of the specified linked list in ascending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="199" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a5bb0589c34221e0447ba3ed9b147dac1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, OptionContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, OptionContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.Slinq&lt; T &gt;</definition>
        <argsstring>(this Option&lt; T &gt; option)</argsstring>
        <name>Slinq&lt; T &gt;</name>
        <param>
          <type>this <ref refid="class_smooth_1_1_algebraics_1_1_option" kindref="compound">Option</ref>&lt; T &gt;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the specified option. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method do not support element removal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="241" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1aa380d95c95ff5c7ce819dd3324fc2f5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqDescending&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>SlinqDescending&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the elements of the specified list in descending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="121" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a5a6f8ecdfb14860e84c5bc43a4efc5ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqDescending&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex)</argsstring>
        <name>SlinqDescending&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the elements of the specified list in decending order starting with the specified index. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="141" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a2e0c5d468602cdc4e86e771ff9788b1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;T, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqDescending&lt; T &gt;</definition>
        <argsstring>(this LinkedList&lt; T &gt; list)</argsstring>
        <name>SlinqDescending&lt; T &gt;</name>
        <param>
          <type>this LinkedList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the values of the specified linked list in decending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="208" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a1d509e8c49e5cad2d261610ad8612e55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; LinkedListNode&lt; T &gt;, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;LinkedListNode&lt;T&gt;, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqNodes&lt; T &gt;</definition>
        <argsstring>(this LinkedListNode&lt; T &gt; node, int step)</argsstring>
        <name>SlinqNodes&lt; T &gt;</name>
        <param>
          <type>this LinkedListNode&lt; T &gt;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that starts with the specified node and proceeds along node links. </para>        </briefdescription>
        <detaileddescription>
<para>If step is positive, the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will move along Next links, if step is negative the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will move along Previous links. If step is zero the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will stay in place.</para><para>If the specified node is null, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="186" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1aa6f65c109e76fb790c6866cb47c2a25f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; LinkedListNode&lt; T &gt;, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;LinkedListNode&lt;T&gt;, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqNodes&lt; T &gt;</definition>
        <argsstring>(this LinkedList&lt; T &gt; list)</argsstring>
        <name>SlinqNodes&lt; T &gt;</name>
        <param>
          <type>this LinkedList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the nodes of the specified linked list in ascending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="217" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a3c014d9d57ef82ac941996ace9a41614" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; LinkedListNode&lt; T &gt;, LinkedListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;LinkedListNode&lt;T&gt;, LinkedListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqNodesDescending&lt; T &gt;</definition>
        <argsstring>(this LinkedList&lt; T &gt; list)</argsstring>
        <name>SlinqNodesDescending&lt; T &gt;</name>
        <param>
          <type>this LinkedList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the nodes of the specified linked list in decending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="226" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a8e4fc58bc2aa45548ea6211ca91635b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; T, int &gt;, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;Smooth.Algebraics.Tuple&lt;T, int&gt;, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqWithIndex&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex, int step)</argsstring>
        <name>SlinqWithIndex&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the element, index pairs of the specified list using the specified start index and step. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="64" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1adda151268e9c6d6a8e058aec5c53d833" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; T, int &gt;, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;Smooth.Algebraics.Tuple&lt;T, int&gt;, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqWithIndex&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>SlinqWithIndex&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the element, index pairs of the specified list in ascending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="86" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a6d13b2ca15bb5efb990d923a8ca2a50f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; T, int &gt;, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;Smooth.Algebraics.Tuple&lt;T, int&gt;, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqWithIndex&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex)</argsstring>
        <name>SlinqWithIndex&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the element, index pairs of the specified list in ascending order starting with the specified index. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="108" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a68d437ee05125dfb9e2decb38a848fba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; T, int &gt;, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;Smooth.Algebraics.Tuple&lt;T, int&gt;, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqWithIndexDescending&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>SlinqWithIndexDescending&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the element, index pairs of the specified list in descending order. </para>        </briefdescription>
        <detaileddescription>
<para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="130" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_smooth_1_1_slinq_1_1_slinqable_1a7473c347fd203c8242753362b7a959ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; <ref refid="class_smooth_1_1_algebraics_1_1_tuple" kindref="compound">Smooth.Algebraics.Tuple</ref>&lt; T, int &gt;, IListContext&lt; T &gt; &gt;</type>
        <definition>static Slinq&lt;Smooth.Algebraics.Tuple&lt;T, int&gt;, IListContext&lt;T&gt; &gt; Smooth.Slinq.Slinqable.SlinqWithIndexDescending&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int startIndex)</argsstring>
        <name>SlinqWithIndexDescending&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startIndex</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates over the element, index pairs of the specified list in decending order starting with the specified index. </para>        </briefdescription>
        <detaileddescription>
<para>If startIndex is outside the element range of the list, the resulting <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> will be empty.</para><para>Slinqs created by this method will chain removal operations to the underlying list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="152" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="152" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides methods for creating basic Slinqs from various underlying collections or delegates. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" line="14" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Slinqable.cs" bodystart="14" bodyend="450"/>
    <listofallmembers>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a1f8305cfbd63098d4a8a19faef666ea7" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Empty&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ada97cb9037d0c765f33532675509a4e4" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Range</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1aed8b7f186bb2f7bec81ada6960bf4204" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Repeat&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ab4e4f24c37e77cfa2202e3eaf3ab363f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Repeat&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a7cfd3da6e29b2f6b5451b6d28c0e539f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1acdf5831b9fd0bae744b216787aadeabc" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ab827f3fae68865bd918299febb410a3d" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a1e44d033c31953f5594d4ae7900ef1a7" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a1b1247aab060d1c65d901fa0e144e3ef" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a661847ae1b89bc3792fb10ca2be22c0b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a46f73fd43ea273da85afb882c929985b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ac01cc0f75ebf1df8f027f122475f9813" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a45a7c5852979c59e218accba2d012f47" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a58c2d49da565656df0394e897f83621b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a6c2897d019ad9121cfc00820d5e6e66e" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a98482fb610572ba3b4b15f60460e7050" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ab94afdf68d8f20be485c66f919444f8c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a5b58e251c8ddf16b7252490276cb53f1" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence&lt; T, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a9cda0669daf7c3337310f6441f628577" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Sequence&lt; T, P &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a547096fd95817f75d6d2037166791ee8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ae5c1a044763bc4b2179f87db32451891" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a2806f946a715416dedfb20f5b23cab5b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a47113ae659608e85b18efab3edb20d28" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1ac119ecf615d58b369421dcbe0c57cb63" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a5c3abb5703bc810e3aa89742733d5c21" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a5bb0589c34221e0447ba3ed9b147dac1" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>Slinq&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1aa380d95c95ff5c7ce819dd3324fc2f5e" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqDescending&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a5a6f8ecdfb14860e84c5bc43a4efc5ed" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqDescending&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a2e0c5d468602cdc4e86e771ff9788b1b" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqDescending&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a1d509e8c49e5cad2d261610ad8612e55" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqNodes&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1aa6f65c109e76fb790c6866cb47c2a25f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqNodes&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a3c014d9d57ef82ac941996ace9a41614" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqNodesDescending&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a8e4fc58bc2aa45548ea6211ca91635b8" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqWithIndex&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1adda151268e9c6d6a8e058aec5c53d833" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqWithIndex&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a6d13b2ca15bb5efb990d923a8ca2a50f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqWithIndex&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a68d437ee05125dfb9e2decb38a848fba" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqWithIndexDescending&lt; T &gt;</name></member>
      <member refid="class_smooth_1_1_slinq_1_1_slinqable_1a7473c347fd203c8242753362b7a959ab" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Slinqable</scope><name>SlinqWithIndexDescending&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
