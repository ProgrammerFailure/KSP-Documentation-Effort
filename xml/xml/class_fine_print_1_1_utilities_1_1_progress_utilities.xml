<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_fine_print_1_1_utilities_1_1_progress_utilities" kind="class" prot="public">
    <compoundname>FinePrint::Utilities::ProgressUtilities</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ade9301291c543aca93b474bb93da2276" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float FinePrint.Utilities.ProgressUtilities.AverageFacilityLevel</definition>
        <argsstring>()</argsstring>
        <name>AverageFacilityLevel</name>
        <briefdescription>
<para>Average facility level. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The average level of all facilities.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="704" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="704" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1acdcf1df18f197a5526a7c039cc5f56f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dictionary&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, int &gt;</type>
        <definition>static Dictionary&lt;CelestialBody,int&gt; FinePrint.Utilities.ProgressUtilities.CelestialCrewCounts</definition>
        <argsstring>(List&lt; Vessel.Situations &gt; situations)</argsstring>
        <name>CelestialCrewCounts</name>
        <param>
          <type>List&lt; <ref refid="class_vessel_1acea90b73d9b4523383503ec82f2f63bb" kindref="member">Vessel.Situations</ref> &gt;</type>
          <declname>situations</declname>
        </param>
        <briefdescription>
<para>Attempts to get a list of kerbals, where they are, and what they are doing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>situations</parametername>
</parameternamelist>
<parameterdescription>
<para>The situations to match.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A dictionary of celestialbody crew counts.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="630" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="630" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a4ddfd30caeaec4a6716e296841bdcf96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.ProgressUtilities.CurrentTrackRecord</definition>
        <argsstring>(RecordTrackType type)</argsstring>
        <name>CurrentTrackRecord</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a4e8dd217bfb2eedf0606525b0609f3ba" kindref="member">RecordTrackType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Gets the current track record of a given record type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of record track.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current record on that track.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="663" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="663" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a664fad6caa47dddce65715a2f298d5fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.ExperimentPossibleAt</definition>
        <argsstring>(string experimentID, CelestialBody body, double latitude, double longitude, double altitude, double terrainHeight)</argsstring>
        <name>ExperimentPossibleAt</name>
        <param>
          <type>string</type>
          <declname>experimentID</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type>double</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>longitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>terrainHeight</declname>
        </param>
        <briefdescription>
<para>Determines whether a science experiment is possible to deploy at an arbitrary location. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>experimentID</parametername>
</parameternamelist>
<parameterdescription>
<para>The experiment ID.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The latitude.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The longitude.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The altitude.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terrainHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>The terrain height.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the experiment is possible there. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="995" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="995" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ab1e6d0bff1f0870a05fcb6519b6f45b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.ProgressUtilities.FindNextRecord</definition>
        <argsstring>(double currentRecord, double maximumRecord, double roundValue)</argsstring>
        <name>FindNextRecord</name>
        <param>
          <type>double</type>
          <declname>currentRecord</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maximumRecord</declname>
        </param>
        <param>
          <type>double</type>
          <declname>roundValue</declname>
        </param>
        <briefdescription>
<para>Used in record track progress nodes to interpolate from small records to larger ones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>The current record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximumRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum desired record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roundValue</parametername>
</parameternamelist>
<parameterdescription>
<para>What to round the record limits to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next record to break.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="1050" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="1050" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a3aa86bc6a076bb281150505d72fdecc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double FinePrint.Utilities.ProgressUtilities.FindNextRecord</definition>
        <argsstring>(double currentRecord, double maximumRecord, double roundValue, ref int interval)</argsstring>
        <name>FindNextRecord</name>
        <param>
          <type>double</type>
          <declname>currentRecord</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maximumRecord</declname>
        </param>
        <param>
          <type>double</type>
          <declname>roundValue</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Used in record track progress nodes to interpolate from small records to larger ones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>The current record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximumRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum desired record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>roundValue</parametername>
</parameternamelist>
<parameterdescription>
<para>What to round the record limits to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer to store the chosen interval in, for rewards.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The next record to break.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="1075" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="1075" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1aaa277db00b093317e0663f7cf80abe60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.GetAnyBodyProgress</definition>
        <argsstring>(CelestialBody body, MannedStatus manned=MannedStatus.ANY)</argsstring>
        <name>GetAnyBodyProgress</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
          <defval>MannedStatus.ANY</defval>
        </param>
        <briefdescription>
<para>Efficiently checks for any manned/unmanned progression on a specific body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>The manned status.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If there has been any progress of that type on that body.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; We&apos;re looking for body progress, so we want to filter out things that aren&apos;t in celestial body subtrees.</para><para>&lt; We filter crew sensitive if checking manned or unmanned, as non crew sensitive nodes will return true for these either way when complete. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="391" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="391" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a6079f8fa472834f4f081dec7ac54581e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(ProgressType type, bool bodyReached, bool progressComplete, MannedStatus manned, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bodyReached</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>progressComplete</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done or not done something at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>What the player did or did not do.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodyReached</parametername>
</parameternamelist>
<parameterdescription>
<para>If the body has any manned or unmanned progress at all.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progressComplete</parametername>
</parameternamelist>
<parameterdescription>
<para>If the progress type was completed or not.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether he did it manned or unmanned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="424" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="424" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a596fbbc4de7dce3732b936c8d5c7a3d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(ProgressType type, bool bodyReached, bool progressComplete, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bodyReached</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>progressComplete</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done or not done something at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>What the player did or did not do.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodyReached</parametername>
</parameternamelist>
<parameterdescription>
<para>If the body has any manned or unmanned progress at all.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progressComplete</parametername>
</parameternamelist>
<parameterdescription>
<para>If the progress type was completed or not.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="462" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1aa9426a7a9db9a435059287681e1ae6ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(ProgressType type, bool progressComplete, MannedStatus manned, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>progressComplete</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done or not done something at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>What the player did or did not do.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progressComplete</parametername>
</parameternamelist>
<parameterdescription>
<para>If the progress type was completed or not.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether he did it manned or unmanned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="476" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="476" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9b8a0cb436c05afa777c314c49c29211" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(ProgressType type, bool progressComplete, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>progressComplete</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done or not done something at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>What the player did or did not do.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progressComplete</parametername>
</parameternamelist>
<parameterdescription>
<para>If the progress type was completed or not.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="510" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ab6c8ca9f5589198af9f0cb87dedf4585" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(bool bodyReached, MannedStatus manned, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type>bool</type>
          <declname>bodyReached</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done any manned or unmanned progression at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyReached</parametername>
</parameternamelist>
<parameterdescription>
<para>If the body has any manned or unmanned progress at all.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether he did it manned or unmanned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="523" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="523" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9c8aece159cbac90c19703c951eab517" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetBodiesProgress</definition>
        <argsstring>(bool bodyReached, Func&lt; CelestialBody, bool &gt; where=null, List&lt; CelestialBody &gt; bodies=null)</argsstring>
        <name>GetBodiesProgress</name>
        <param>
          <type>bool</type>
          <declname>bodyReached</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
          <declname>bodies</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gathers a list of bodies that the player has done any manned or unmanned progression at. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bodyReached</parametername>
</parameternamelist>
<parameterdescription>
<para>If the body has any manned or unmanned progress at all.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bodies</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional list of bodies to start with, as opposed to every body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies matching the parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="556" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9dc59fc3edd397dbadf85218c857d88c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.GetBodyProgress</definition>
        <argsstring>(ProgressType progress, CelestialBody body, MannedStatus manned=MannedStatus.ANY)</argsstring>
        <name>GetBodyProgress</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>progress</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
          <defval>MannedStatus.ANY</defval>
        </param>
        <briefdescription>
<para>Determines if the player has done something on a particular celestial body. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progress</parametername>
</parameternamelist>
<parameterdescription>
<para>What the player did.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the player did it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the player did it there.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="379" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="379" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ac47595f5df100382aa05eefb241f465b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetNextUnreached</definition>
        <argsstring>(int count, MannedStatus manned, Func&lt; CelestialBody, bool &gt; where=null)</argsstring>
        <name>GetNextUnreached</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets the next few bodies with an unreached manned status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of bodies.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>The manned status.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies that have not been reached.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Before we start recursing, we need to seed the stack with the sun and all of its planets.</para><para>&lt; We already started with the sun&apos;s orbiting bodies.</para><para>&lt; Once again, we want to push these in reverse order, so the harder children are further back. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="568" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="568" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a7ff5527aeecd5dd2e7b87b90d20f1ac7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref> &gt;</type>
        <definition>static List&lt;CelestialBody&gt; FinePrint.Utilities.ProgressUtilities.GetNextUnreached</definition>
        <argsstring>(int count, Func&lt; CelestialBody, bool &gt; where=null)</argsstring>
        <name>GetNextUnreached</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>, bool &gt;</type>
          <declname>where</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Gets the next few bodies with an unreached manned status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount of bodies.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional delegate further describing the desired <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of bodies that have not been reached.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="620" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a094912a99203ede91e5935fe49fc547d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int FinePrint.Utilities.ProgressUtilities.GetProgressLevel</definition>
        <argsstring>()</argsstring>
        <name>GetProgressLevel</name>
        <briefdescription>
<para>An integral representation of the player&apos;s progress in the game. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer representing progress.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; Some players just don&apos;t want to leave Kerbin. Support them by bumping up every three building upgrades or so. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="721" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="721" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1acb1fd284511b0e89127931f5f3a50334" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.HaveAnyTech</definition>
        <argsstring>(IList&lt; string &gt; partNames, IList&lt; string &gt; moduleNames, bool logging=true)</argsstring>
        <name>HaveAnyTech</name>
        <param>
          <type>IList&lt; string &gt;</type>
          <declname>partNames</declname>
        </param>
        <param>
          <type>IList&lt; string &gt;</type>
          <declname>moduleNames</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logging</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Helper function that determines if <emphasis>any</emphasis> assorted part or module names are unlocked in the tech tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partNames</parametername>
</parameternamelist>
<parameterdescription>
<para>The part names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moduleNames</parametername>
</parameternamelist>
<parameterdescription>
<para>The module names.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logging</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow logging.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If any of the techs are researched.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="350" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="350" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1adbfe9a3f4327bd67df9b38ab5f000ced" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.HaveModuleTech</definition>
        <argsstring>(string moduleName, string excludeModule=null)</argsstring>
        <name>HaveModuleTech</name>
        <param>
          <type>string</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>excludeModule</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Determines if the player has researched any parts containing a particular module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moduleName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module to include parts with.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excludeModule</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional name of module to exclude parts with.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the module tech is researched.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="310" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="310" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a25ca03b359ae61434a11442ed37b6a75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.HavePartTech</definition>
        <argsstring>(string partName, bool logging=true)</argsstring>
        <name>HavePartTech</name>
        <param>
          <type>string</type>
          <declname>partName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logging</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Determines if the player has researched a particular part technology. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partName</parametername>
</parameternamelist>
<parameterdescription>
<para>The part&apos;s name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logging</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional flag to temporarily disable logging.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the part tech exists and is researched.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="285" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="285" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ac5f76b5d05211c32f911c1530ee5a664" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.IntroWorldFirstContract</definition>
        <argsstring>(ProgressMilestone milestone)</argsstring>
        <name>IntroWorldFirstContract</name>
        <param>
          <type><ref refid="class_fine_print_1_1_utilities_1_1_progress_milestone" kindref="compound">ProgressMilestone</ref></type>
          <declname>milestone</declname>
        </param>
        <briefdescription>
<para>Checks to see if a progress milestone is part of the initial lineup of World Firsts leaving Kerbin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>milestone</parametername>
</parameternamelist>
<parameterdescription>
<para>The milestone.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If it is in the introduction.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="753" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="753" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1aa63b5e92e5ea59e4f43d88706ef48439" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.OutlierWorldFirstContract</definition>
        <argsstring>(ProgressType type, CelestialBody body)</argsstring>
        <name>OutlierWorldFirstContract</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Checks to see if a progress milestone is part of the outlier contracts reserved for end game. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If it is part of the end game.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="773" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="773" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a553aea2f69f3059456c678db8a87a81a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.OutlierWorldFirstContract</definition>
        <argsstring>(ProgressMilestone milestone)</argsstring>
        <name>OutlierWorldFirstContract</name>
        <param>
          <type><ref refid="class_fine_print_1_1_utilities_1_1_progress_milestone" kindref="compound">ProgressMilestone</ref></type>
          <declname>milestone</declname>
        </param>
        <briefdescription>
<para>Checks to see if a progress milestone is part of the outlier contracts reserved for end game. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>milestone</parametername>
</parameternamelist>
<parameterdescription>
<para>The milestone.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If it is part of the end game.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="792" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ad13c8075e95944eae893dff723a6976f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_contracts_1_1_contract_1aa3d6ae01b25cb7380d112c8be4fd9305" kindref="member">Contract.ContractPrestige</ref></type>
        <definition>static Contract.ContractPrestige FinePrint.Utilities.ProgressUtilities.ProgressTypePrestige</definition>
        <argsstring>(ProgressType type, CelestialBody body=null)</argsstring>
        <name>ProgressTypePrestige</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Assigns an arbitrary contract prestige to each progress type. Useful for post processing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A prestige level associated with it.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="859" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="859" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1af563d3082e857a85fe95cd988ff3127d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_contracts_1_1_contract_1aa3d6ae01b25cb7380d112c8be4fd9305" kindref="member">Contract.ContractPrestige</ref></type>
        <definition>static Contract.ContractPrestige FinePrint.Utilities.ProgressUtilities.ProgressTypePrestige</definition>
        <argsstring>(ProgressMilestone milestone)</argsstring>
        <name>ProgressTypePrestige</name>
        <param>
          <type><ref refid="class_fine_print_1_1_utilities_1_1_progress_milestone" kindref="compound">ProgressMilestone</ref></type>
          <declname>milestone</declname>
        </param>
        <briefdescription>
<para>Assigns an arbitrary contract prestige to each progress type. Useful for post processing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>milestone</parametername>
</parameternamelist>
<parameterdescription>
<para>The milestone.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A prestige level associated with it.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="891" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="891" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1af314ece69add78d2734b43c5297d5b93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.ReachedHomeBodies</definition>
        <argsstring>()</argsstring>
        <name>ReachedHomeBodies</name>
        <briefdescription>
<para>Checks if the player has visited all of the bodies in his home system. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If he&apos;s visited all of his home bodies.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="1022" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="1022" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1ad33ab4d89b52b2018bc0eeff99758b8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float FinePrint.Utilities.ProgressUtilities.ScoreProgressType</definition>
        <argsstring>(ProgressType type, CelestialBody body)</argsstring>
        <name>ScoreProgressType</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Provides a score multiplier for a progress type much like a vessel situation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A score multiplier.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="803" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="803" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a05b391861c623136b3129f63ea37505d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool FinePrint.Utilities.ProgressUtilities.VisitedSurfaceOf</definition>
        <argsstring>(CelestialBody body, MannedStatus manned=MannedStatus.ANY)</argsstring>
        <name>VisitedSurfaceOf</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a5f421edb9a5665cbb63ed1233f32d237" kindref="member">MannedStatus</ref></type>
          <declname>manned</declname>
          <defval>MannedStatus.ANY</defval>
        </param>
        <briefdescription>
<para>Determines whether the player has been on the surface of a planet. Automatically passes on homeworld. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The celestial body.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>manned</parametername>
</parameternamelist>
<parameterdescription>
<para>If it was visited manned or unmanned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the player has been there.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="1102" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="1102" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a532c1d9a6833589b5201db82d43a7bf8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float FinePrint.Utilities.ProgressUtilities.WorldFirstIntervalReward</definition>
        <argsstring>(ProgressRewardType reward, Currency currency, ProgressType progress, CelestialBody body=null, int currentInterval=1, int totalIntervals=10)</argsstring>
        <name>WorldFirstIntervalReward</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1aac56f241f22f89031f423ab8476c8086" kindref="member">ProgressRewardType</ref></type>
          <declname>reward</declname>
        </param>
        <param>
          <type><ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021c" kindref="member">Currency</ref></type>
          <declname>currency</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>progress</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>int</type>
          <declname>currentInterval</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>totalIntervals</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Assigns rewards to World First progress nodes and contracts that are split up at an interval. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reward</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is for a contract, or a progress node.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currency</parametername>
</parameternamelist>
<parameterdescription>
<para>The currency type for the reward.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progress</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional body for a body multiplier.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentInterval</parametername>
</parameternamelist>
<parameterdescription>
<para>What interval we are on currently.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>totalIntervals</parametername>
</parameternamelist>
<parameterdescription>
<para>How many intervals there are total.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The reward of the given currency type for the current interval.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; If the interval reward is less than one, we have to keep track of when it builds up to one. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="959" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="959" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="class_fine_print_1_1_utilities_1_1_progress_utilities_1a2164c62e5c7f35f83721011bd538d486" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float FinePrint.Utilities.ProgressUtilities.WorldFirstStandardReward</definition>
        <argsstring>(ProgressRewardType reward, Currency currency, ProgressType progress, CelestialBody body=null)</argsstring>
        <name>WorldFirstStandardReward</name>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1aac56f241f22f89031f423ab8476c8086" kindref="member">ProgressRewardType</ref></type>
          <declname>reward</declname>
        </param>
        <param>
          <type><ref refid="_currency_util_8cs_1a59f74bf9ae55ffd390b8806b2559021c" kindref="member">Currency</ref></type>
          <declname>currency</declname>
        </param>
        <param>
          <type><ref refid="namespace_fine_print_1_1_utilities_1a8b9abb719598be3ab3e6dd5b6725cb14" kindref="member">ProgressType</ref></type>
          <declname>progress</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>body</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Assigns standard rewards to World First progress nodes and contracts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reward</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is for a contract, or a progress node.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currency</parametername>
</parameternamelist>
<parameterdescription>
<para>The currency type for the reward.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>progress</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress type.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional body for a body multiplier.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The reward of the given currency type.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; <ref refid="namespace_fine_print_1_1_contracts" kindref="compound">Contracts</ref> are already going to post process this with proceeds from <ref refid="class_game_variables" kindref="compound">GameVariables</ref> and prestige, so we&apos;ll pop out here.</para><para>&lt; Progress proceeds will need to be post processed a bit to keep them in line with contract proceeds. </para>        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="904" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="904" bodyend="947"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" line="278" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Scenarios/Career Modules/Contracts/FinePrint/Utilities/ProgressUtilities.cs" bodystart="277" bodyend="1128"/>
    <listofallmembers>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ade9301291c543aca93b474bb93da2276" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>AverageFacilityLevel</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1acdcf1df18f197a5526a7c039cc5f56f8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>CelestialCrewCounts</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a4ddfd30caeaec4a6716e296841bdcf96" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>CurrentTrackRecord</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a664fad6caa47dddce65715a2f298d5fe" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>ExperimentPossibleAt</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ab1e6d0bff1f0870a05fcb6519b6f45b8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>FindNextRecord</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a3aa86bc6a076bb281150505d72fdecc6" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>FindNextRecord</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1aaa277db00b093317e0663f7cf80abe60" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetAnyBodyProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a6079f8fa472834f4f081dec7ac54581e" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a596fbbc4de7dce3732b936c8d5c7a3d4" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1aa9426a7a9db9a435059287681e1ae6ac" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9b8a0cb436c05afa777c314c49c29211" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ab6c8ca9f5589198af9f0cb87dedf4585" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9c8aece159cbac90c19703c951eab517" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodiesProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a9dc59fc3edd397dbadf85218c857d88c" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetBodyProgress</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ac47595f5df100382aa05eefb241f465b" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetNextUnreached</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a7ff5527aeecd5dd2e7b87b90d20f1ac7" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetNextUnreached</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a094912a99203ede91e5935fe49fc547d" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>GetProgressLevel</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1acb1fd284511b0e89127931f5f3a50334" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>HaveAnyTech</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1adbfe9a3f4327bd67df9b38ab5f000ced" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>HaveModuleTech</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a25ca03b359ae61434a11442ed37b6a75" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>HavePartTech</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ac5f76b5d05211c32f911c1530ee5a664" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>IntroWorldFirstContract</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1aa63b5e92e5ea59e4f43d88706ef48439" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>OutlierWorldFirstContract</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a553aea2f69f3059456c678db8a87a81a" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>OutlierWorldFirstContract</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ad13c8075e95944eae893dff723a6976f" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>ProgressTypePrestige</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1af563d3082e857a85fe95cd988ff3127d" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>ProgressTypePrestige</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1af314ece69add78d2734b43c5297d5b93" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>ReachedHomeBodies</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1ad33ab4d89b52b2018bc0eeff99758b8c" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>ScoreProgressType</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a05b391861c623136b3129f63ea37505d" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>VisitedSurfaceOf</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a532c1d9a6833589b5201db82d43a7bf8" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>WorldFirstIntervalReward</name></member>
      <member refid="class_fine_print_1_1_utilities_1_1_progress_utilities_1a2164c62e5c7f35f83721011bd538d486" prot="public" virt="non-virtual"><scope>FinePrint::Utilities::ProgressUtilities</scope><name>WorldFirstStandardReward</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
