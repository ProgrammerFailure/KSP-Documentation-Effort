<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_steamworks_1_1_steam_screenshots" kind="class" prot="public">
    <compoundname>Steamworks::SteamScreenshots</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a666f4930939c6d3c36bb82fbb0c332d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
        <definition>static ScreenshotHandle Steamworks.SteamScreenshots.AddScreenshotToLibrary</definition>
        <argsstring>(string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight)</argsstring>
        <name>AddScreenshotToLibrary</name>
        <param>
          <type>string</type>
          <declname>pchFilename</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchThumbnailFilename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a screenshot to the user&apos;s screenshot library from disk. If a thumbnail is provided, it must be 200 pixels wide and the same aspect ratio</para><para>as the screenshot, otherwise a thumbnail will be generated if the user uploads the screenshot. The screenshots must be in either JPEG or TGA format.</para><para>The return value is a handle that is valid for the duration of the game process and can be used to apply tags.</para><para>JPEG, TGA, and PNG formats are supported.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="30" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a1f2aa55e9b09a54547ab6de6333a1745" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
        <definition>static ScreenshotHandle Steamworks.SteamScreenshots.AddVRScreenshotToLibrary</definition>
        <argsstring>(EVRScreenshotType eType, string pchFilename, string pchVRFilename)</argsstring>
        <name>AddVRScreenshotToLibrary</name>
        <param>
          <type><ref refid="namespace_steamworks_1af44262eb17e2cf628718c3683b58f606" kindref="member">EVRScreenshotType</ref></type>
          <declname>eType</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchFilename</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchVRFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a VR screenshot to the user&apos;s screenshot library from disk in the supported type.</para><para>pchFilename should be the normal 2D image used in the library view</para><para>pchVRFilename should contain the image that matches the correct type</para><para>The return value is a handle that is valid for the duration of the game process and can be used to apply tags.</para><para>JPEG, TGA, and PNG formats are supported.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="97" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a9389869fa32e4640d6f3f7dae23aa480" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamScreenshots.HookScreenshots</definition>
        <argsstring>(bool bHook)</argsstring>
        <name>HookScreenshots</name>
        <param>
          <type>bool</type>
          <declname>bHook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Toggles whether the overlay handles screenshots when the user presses the screenshot hotkey, or the game handles them. If the game is hooking screenshots,</para><para>then the <ref refid="struct_steamworks_1_1_screenshot_requested__t" kindref="compound">ScreenshotRequested_t</ref> callback will be sent if the user presses the hotkey, and the game is expected to call WriteScreenshot or AddScreenshotToLibrary</para><para>in response.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="51" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1adce5cf0d971baf53152f4a75e23c3770" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamScreenshots.IsScreenshotsHooked</definition>
        <argsstring>()</argsstring>
        <name>IsScreenshotsHooked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the app has hooked the screenshot</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="85" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a95c91fdda4e593524c5752fcdca7db56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamScreenshots.SetLocation</definition>
        <argsstring>(ScreenshotHandle hScreenshot, string pchLocation)</argsstring>
        <name>SetLocation</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
          <declname>hScreenshot</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets metadata about a screenshot&apos;s location (for example, the name of the map)</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="59" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a70d2ad3431c888e5923338ee9f644e0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamScreenshots.TagPublishedFile</definition>
        <argsstring>(ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID)</argsstring>
        <name>TagPublishedFile</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
          <declname>hScreenshot</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_published_file_id__t" kindref="compound">PublishedFileId_t</ref></type>
          <declname>unPublishedFileID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tags a published file as being visible in the screenshot</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="77" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1a5fa9359c218aca11ecc85175f13039ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Steamworks.SteamScreenshots.TagUser</definition>
        <argsstring>(ScreenshotHandle hScreenshot, CSteamID steamID)</argsstring>
        <name>TagUser</name>
        <param>
          <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
          <declname>hScreenshot</declname>
        </param>
        <param>
          <type><ref refid="struct_steamworks_1_1_c_steam_i_d" kindref="compound">CSteamID</ref></type>
          <declname>steamID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tags a user as being visible in the screenshot</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="69" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1acccd8f2c74d4757c6d711b40b6cbe456" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Steamworks.SteamScreenshots.TriggerScreenshot</definition>
        <argsstring>()</argsstring>
        <name>TriggerScreenshot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Causes the Steam overlay to take a screenshot. If screenshots are being hooked by the game then a <ref refid="struct_steamworks_1_1_screenshot_requested__t" kindref="compound">ScreenshotRequested_t</ref> callback is sent back to the game instead.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="41" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_steamworks_1_1_steam_screenshots_1ac995ed097e6bff27964c0c7f40daa4b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_steamworks_1_1_screenshot_handle" kindref="compound">ScreenshotHandle</ref></type>
        <definition>static ScreenshotHandle Steamworks.SteamScreenshots.WriteScreenshot</definition>
        <argsstring>(byte[] pubRGB, uint cubRGB, int nWidth, int nHeight)</argsstring>
        <name>WriteScreenshot</name>
        <param>
          <type>byte[]</type>
          <declname>pubRGB</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>cubRGB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a screenshot to the user&apos;s screenshot library given the raw image data, which must be in RGB format.</para><para>The return value is a handle that is valid for the duration of the game process and can be used to apply tags.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="19" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="19" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" line="14" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Plugins/Steamworks.NET/autogen/isteamscreenshots.cs" bodystart="14" bodyend="104"/>
    <listofallmembers>
      <member refid="class_steamworks_1_1_steam_screenshots_1a666f4930939c6d3c36bb82fbb0c332d7" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>AddScreenshotToLibrary</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1a1f2aa55e9b09a54547ab6de6333a1745" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>AddVRScreenshotToLibrary</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1a9389869fa32e4640d6f3f7dae23aa480" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>HookScreenshots</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1adce5cf0d971baf53152f4a75e23c3770" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>IsScreenshotsHooked</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1a95c91fdda4e593524c5752fcdca7db56" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>SetLocation</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1a70d2ad3431c888e5923338ee9f644e0f" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>TagPublishedFile</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1a5fa9359c218aca11ecc85175f13039ae" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>TagUser</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1acccd8f2c74d4757c6d711b40b6cbe456" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>TriggerScreenshot</name></member>
      <member refid="class_steamworks_1_1_steam_screenshots_1ac995ed097e6bff27964c0c7f40daa4b9" prot="public" virt="non-virtual"><scope>Steamworks::SteamScreenshots</scope><name>WriteScreenshot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
