<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_maneuver_node_8cs" kind="file">
    <compoundname>ManeuverNode.cs</compoundname>
    <innerclass refid="class_maneuver_node" prot="public">ManeuverNode</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">[System.Serializable]</highlight></codeline>
<codeline lineno="5" refid="class_maneuver_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_maneuver_node" kindref="compound">ManeuverNode</ref><sp/>:<sp/><ref refid="interface_i_config_node" kindref="compound">IConfigNode</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a439b760f08ef76e68b986d78b8c1fd3a" kindref="member">startBurnIn</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>set;<sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_maneuver_node_1a70adc8f91de9bbbe6b2c232656c35263" kindref="member">nodeRotation</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_gizmo" kindref="compound">ManeuverGizmo</ref><sp/><ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_patched_conic_solver" kindref="compound">PatchedConicSolver</ref><sp/><ref refid="class_maneuver_node_1a4f3b19cae438664b35aba42ce51e91a6" kindref="member">solver</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_map_object" kindref="compound">MapObject</ref><sp/><ref refid="class_maneuver_node_1adf6c75186f80325ba5b549ed55e65d54" kindref="member">scaledSpaceTarget</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>,<sp/>nextPatch;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1af0d4282baca46acff25f83a7a8add1e7" kindref="member">refocusCamera</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a999fa738a4b94938c5df8c7f3b5f4f2e" kindref="member">AttachGizmo</ref>(GameObject<sp/>gizmoPrefab,<sp/><ref refid="class_patched_conic_renderer" kindref="compound">PatchedConicRenderer</ref><sp/>renderer)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref><sp/>=<sp/>((GameObject)GameObject.Instantiate(gizmoPrefab)).GetComponent&lt;ManeuverGizmo&gt;();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.gameObject.SetActive(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Maneuver<sp/>Node&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.DeltaV<sp/>=<sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.UT<sp/>=<sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.OnGizmoUpdated<sp/>=<sp/><ref refid="class_maneuver_node_1aa2de27a0f72c56d3da24ba1384963d3a" kindref="member">OnGizmoUpdated</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//attachedGizmo.OnGizmoDraggedOff<sp/>=<sp/>RemoveSelf;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.OnMinimize<sp/>=<sp/><ref refid="class_maneuver_node_1a7e573640c39f897725e4500588ce80f7" kindref="member">DetachGizmo</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.OnDelete<sp/>=<sp/><ref refid="class_maneuver_node_1adb4b328f93be9e78f0f391be4a60fbac" kindref="member">RemoveSelf</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.Setup(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>renderer);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1aa2de27a0f72c56d3da24ba1384963d3a" kindref="member">OnGizmoUpdated</ref>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>dV,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ut)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>currentdV<sp/>=<sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentUT<sp/>=<sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref><sp/>=<sp/>dV;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref><sp/>=<sp/>ut;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.UpdateFlightPlan();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref><sp/>==<sp/>null)<sp/><sp/></highlight><highlight class="comment">//Guard<sp/>clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref><sp/>=<sp/>currentdV;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref><sp/>=<sp/>currentUT;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.UpdateFlightPlan();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1af0d4282baca46acff25f83a7a8add1e7" kindref="member">refocusCamera</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref>.<ref refid="class_maneuver_gizmo_1a80016ec4940e3a93fa8e3524a5b4a537" kindref="member">patchBefore</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1ab216ca4db0abbc116767a280558f0415" kindref="member">name</ref><sp/>!=<sp/><ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1ab216ca4db0abbc116767a280558f0415" kindref="member">name</ref><sp/>||<sp/>Math.Abs(<ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref>.<ref refid="class_maneuver_gizmo_1a80016ec4940e3a93fa8e3524a5b4a537" kindref="member">patchBefore</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref><sp/>-<sp/><ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>)<sp/>&gt;<sp/>100))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Refocus<sp/>Camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planetarium_camera" kindref="compound">PlanetariumCamera</ref>.<ref refid="class_planetarium_camera_1af0088e9f46ab27029044470a12e1374f" kindref="member">fetch</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1a40aef75f07844da56a527c19bcd845ea" kindref="member">MapObject</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlanetariumCamera.fetch.SetTarget(patch.referenceBody.MapObject);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.SetPatches(<ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>,<sp/>nextPatch,<sp/>reset);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a7e573640c39f897725e4500588ce80f7" kindref="member">DetachGizmo</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachedGizmo.Terminate();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1aa655a3a2daf32c91a19c6119f34bc4bb" kindref="member">attachedGizmo</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameEvents.onManeuverNodeDeselected.Fire();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1adb4b328f93be9e78f0f391be4a60fbac" kindref="member">RemoveSelf</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maneuver_node_1a7e573640c39f897725e4500588ce80f7" kindref="member">DetachGizmo</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1adf6c75186f80325ba5b549ed55e65d54" kindref="member">scaledSpaceTarget</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapView.MapCamera.RemoveTarget(<ref refid="class_maneuver_node_1adf6c75186f80325ba5b549ed55e65d54" kindref="member">scaledSpaceTarget</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledSpaceTarget.Terminate();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.RemoveManeuverNode(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_maneuver_node_1adc7137d3bfbaee729a7c17b7b58bdbca" kindref="member">GetBurnVector</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>currentOrbit)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>issue<sp/>with<sp/>null<sp/>orbits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentOrbit<sp/>==<sp/>null<sp/>||<sp/>nextPatch<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentOrbit.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>!=<sp/>nextPatch.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nextPatch.<ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>)<sp/>-<sp/>patch.getOrbitalVelocityAtUT(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>)).xzy;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nextPatch.<ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>)<sp/>-<sp/>currentOrbit.getOrbitalVelocityAtUT(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>)).xzy;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a6927d130f941553de0ff69a949261602" kindref="member">Load</ref>(<ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a8a27f108c86e91206d6dda1a690eaaab" kindref="member">HasValue</ref>(</highlight><highlight class="stringliteral">&quot;UT&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref><sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.Parse(node.<ref refid="class_config_node_1acb516a6d2dfa778053929e68b7e1fa16" kindref="member">GetValue</ref>(</highlight><highlight class="stringliteral">&quot;UT&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.<ref refid="class_config_node_1a8a27f108c86e91206d6dda1a690eaaab" kindref="member">HasValue</ref>(</highlight><highlight class="stringliteral">&quot;dV&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref><sp/>=<sp/><ref refid="class_k_s_p_util" kindref="compound">KSPUtil</ref>.<ref refid="class_k_s_p_util_1a1960763b67594aa8a72b24b552d3343d" kindref="member">ParseVector3d</ref>(node.<ref refid="class_config_node_1acb516a6d2dfa778053929e68b7e1fa16" kindref="member">GetValue</ref>(</highlight><highlight class="stringliteral">&quot;dV&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_maneuver_node_1a2baa8c2b4895b9ebe3dcdd8feb0744c9" kindref="member">Save</ref>(<ref refid="class_config_node" kindref="compound">ConfigNode</ref><sp/>node)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.AddValue(</highlight><highlight class="stringliteral">&quot;UT&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.AddValue(</highlight><highlight class="stringliteral">&quot;dV&quot;</highlight><highlight class="normal">,<sp/>KSPUtil.WriteVector(<ref refid="class_maneuver_node_1a75a0905cb441d1e37698a82776b190ae" kindref="member">DeltaV</ref>));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_maneuver_node_1a7a1466e5cfb149300b48570c5491efc8" kindref="member">GetPartialDv</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>issue<sp/>with<sp/>null<sp/>orbits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref><sp/>==<sp/>null<sp/>||<sp/>nextPatch<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>WorldDV<sp/>=<sp/>nextPatch.getOrbitalVelocityAtUT(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>)<sp/>-<sp/><ref refid="class_maneuver_node_1ac415714af9ecfcd13f98ac8fddbbe882" kindref="member">patch</ref>.<ref refid="class_orbit_1a4a16ae992f244b0fe4b808c85900890b" kindref="member">getOrbitalVelocityAtUT</ref>(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>);<sp/></highlight><highlight class="comment">//<sp/>gets<sp/>the<sp/>true<sp/>dV<sp/>in<sp/>world<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>orbitDirection<sp/>=<sp/>patch.getOrbitalVelocityAtUT(<ref refid="class_maneuver_node_1a1b3dd952859bbb5885340b88b565bd8b" kindref="member">UT</ref>).normalized;<sp/></highlight><highlight class="comment">//<sp/>gets<sp/>the<sp/>orbital<sp/>z<sp/>(front)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>orbitNormal<sp/>=<sp/>patch.GetOrbitNormal().normalized;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>the<sp/>orbital<sp/>normal<sp/>y<sp/>(up)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_unity_engine_1_1_quaternion_d" kindref="compound">QuaternionD</ref><sp/>nodeInv<sp/>=<sp/>QuaternionD.LookRotation(orbitDirection,<sp/>orbitNormal);<sp/></highlight><highlight class="comment">//<sp/>creates<sp/>a<sp/>rotation<sp/>from<sp/>world<sp/>to<sp/>Orbital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QuaternionD.Inverse(nodeInv)<sp/>*<sp/>WorldDV;<sp/></highlight><highlight class="comment">//<sp/>and<sp/>gets<sp/>the<sp/>dvleft<sp/>to<sp/>orbital<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/ManeuverNode.cs"/>
  </compounddef>
</doxygen>
