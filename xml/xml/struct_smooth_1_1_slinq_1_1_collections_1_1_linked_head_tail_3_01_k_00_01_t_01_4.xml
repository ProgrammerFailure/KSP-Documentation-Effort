<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4" kind="struct" prot="public">
    <compoundname>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; LinkedHeadTail&lt; K, T &gt;&gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>K</type>
      </param>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5163472cac0520d758a72a543efe6f7c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
<para>The number of elements in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="478" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a44a7260e4774466b453fd2cd0f063fb6" prot="public" static="no" mutable="no">
        <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; K, T &gt;</type>
        <definition>Linked&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
<para>The first node in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="468" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a56a873d3c88ad5c50a16779b0b9d9e1f" prot="public" static="no" mutable="no">
        <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; K, T &gt;</type>
        <definition>Linked&lt;K, T&gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
<para>The last node in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="473" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="473" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a306032f78abaefaedd1df1c88071377c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Append</definition>
        <argsstring>(K key, T value)</argsstring>
        <name>Append</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Appends a pooled node with with specified key and value to the end of the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="534" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="534" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a107671be044b3abc2806b86db05e1750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Append</definition>
        <argsstring>(Linked&lt; K, T &gt; node)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; K, T &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Appends the specified node to the end of the list. </para>        </briefdescription>
        <detaileddescription>
<para>The specified node&apos;s links will be traversed to determine the new tail and count.</para><para>If the specified node is null, the list will not be modified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="552" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="552" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5c76e53e14207818d3f187e1cfbc92a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Append</definition>
        <argsstring>(LinkedHeadTail&lt; K, T &gt; other)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the specified list to the end of this list. </para>        </briefdescription>
        <detaileddescription>
<para>This list and the specified list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour.</para><para>Calling this method will invalidate the specified list and any variables containing its nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="574" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="574" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1aab159b119a9a588b441a9cbaa9315dec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
<para>Releases the head of the list to the node pool. </para>        </briefdescription>
        <detaileddescription>
<para>The list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="611" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="611" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a79cd88e01754c1fb93f2b8f62193e361" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.DisposeInBackground</definition>
        <argsstring>()</argsstring>
        <name>DisposeInBackground</name>
        <briefdescription>
<para>Adds the head of the list to the disposal queue. </para>        </briefdescription>
        <detaileddescription>
<para>The list must be well formed when calling this method or the program will enter an invalid state, resulting in unspecified behaviour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="597" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="597" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1af63e3fc043dfaf9f554161fa21b96bd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Equals</definition>
        <argsstring>(object other)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="509" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5706f6d51c6d8b4ca1627ce8de380778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.Equals</definition>
        <argsstring>(LinkedHeadTail&lt; K, T &gt; other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="513" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="513" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5a86f6aac5d1836f1cc08736f43f91bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="517" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="517" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.LinkedHeadTail</definition>
        <argsstring>(K key, T value)</argsstring>
        <name>LinkedHeadTail</name>
        <param>
          <type>K</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns a list containing a single node with the specified key and value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="483" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a307e4cf12fe4e8d9f0fc2b818b1441c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.LinkedHeadTail</definition>
        <argsstring>(Linked&lt; K, T &gt; head)</argsstring>
        <name>LinkedHeadTail</name>
        <param>
          <type><ref refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked" kindref="compound">Linked</ref>&lt; K, T &gt;</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Returns a list that starts with the specified node. </para>        </briefdescription>
        <detaileddescription>
<para>The constructor will traverse the specified node&apos;s links to set the tail and count fields.</para><para>If the specified node is null, the resulting list will be empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="492" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="492" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1aaac7c925d4e6d819ab57f2db956b1c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.SlinqAndDispose</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndDispose</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the nodes contained in the list is transferred to the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>. When the <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is disposed, the nodes will be added to the disposal queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="649" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="649" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad53feefbc57c26c9e370dfb7900f4196" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.SlinqAndKeep</definition>
        <argsstring>()</argsstring>
        <name>SlinqAndKeep</name>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list without reliquishing ownership of the nodes. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for making sure the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is not used after the nodes are modified or returned to the pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="629" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="629" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a70156d57ab2f2b177ceb5d0819ff3bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>&lt; T, LinkedContext&lt; K, T &gt; &gt;</type>
        <definition>Slinq&lt;T, LinkedContext&lt;K, T&gt; &gt; Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.SlinqAndKeep</definition>
        <argsstring>(BacktrackDetector bd)</argsstring>
        <name>SlinqAndKeep</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_context_1_1_backtrack_detector" kindref="compound">BacktrackDetector</ref></type>
          <declname>bd</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> that enumerates the values contained in the list without reliquishing ownership of the nodes. </para>        </briefdescription>
        <detaileddescription>
<para>The caller of this method is responsible for making sure the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref> is not used after the nodes are modified or returned to the pool.</para><para>If backtrack detection is enabled, the supplied backtrack detector can be returned to the pool using its TryReleaseShared method to prevent subsequent enumeration of the returned <ref refid="class_smooth_1_1_slinq_1_1_slinq" kindref="compound">Slinq</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="640" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="640" bodyend="642"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ab9bbbd1eb605b8e9ac804a1ee6984b73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.operator!=</definition>
        <argsstring>(LinkedHeadTail&lt; K, T &gt; lhs, LinkedHeadTail&lt; K, T &gt; rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="525" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="525" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a050504954978be3b7375a5183421e4e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;.operator==</definition>
        <argsstring>(LinkedHeadTail&lt; K, T &gt; lhs, LinkedHeadTail&lt; K, T &gt; rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" kindref="member">LinkedHeadTail</ref>&lt; K, T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="521" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="521" bodyend="523"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a singly linked list. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="78783">
        <label>Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;</label>
        <link refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4"/>
        <childnode refid="78784" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78784">
        <label>IEquatable&lt; LinkedHeadTail&lt; K, T &gt;&gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="78788">
        <label>IDisposable</label>
      </node>
      <node id="78785">
        <label>Smooth.Slinq.Collections.LinkedHeadTail&lt; K, T &gt;</label>
        <link refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4"/>
        <childnode refid="78786" relation="public-inheritance">
        </childnode>
        <childnode refid="78787" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
      </node>
      <node id="78787">
        <label>Smooth.Slinq.Collections.Linked&lt; K, T &gt;</label>
        <link refid="class_smooth_1_1_slinq_1_1_collections_1_1_linked_3_01_k_00_01_t_01_4"/>
        <childnode refid="78788" relation="public-inheritance">
        </childnode>
        <childnode refid="78787" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="78786">
        <label>IEquatable&lt; LinkedHeadTail&lt; K, T &gt;&gt;</label>
      </node>
    </collaborationgraph>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" line="464" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Util Scripts/SmoothFoundations/Slinq/Collections/Linked.cs" bodystart="464" bodyend="661"/>
    <listofallmembers>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a306032f78abaefaedd1df1c88071377c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a107671be044b3abc2806b86db05e1750" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5c76e53e14207818d3f187e1cfbc92a6" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Append</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5163472cac0520d758a72a543efe6f7c" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>count</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1aab159b119a9a588b441a9cbaa9315dec" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Dispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a79cd88e01754c1fb93f2b8f62193e361" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>DisposeInBackground</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1af63e3fc043dfaf9f554161fa21b96bd3" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5706f6d51c6d8b4ca1627ce8de380778" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>Equals</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a5a86f6aac5d1836f1cc08736f43f91bd" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>GetHashCode</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a44a7260e4774466b453fd2cd0f063fb6" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>head</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad64a0c2250ce5638baf57f7b80c52e8a" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>LinkedHeadTail</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a307e4cf12fe4e8d9f0fc2b818b1441c9" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>LinkedHeadTail</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ab9bbbd1eb605b8e9ac804a1ee6984b73" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>operator!=</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a050504954978be3b7375a5183421e4e2" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>operator==</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1aaac7c925d4e6d819ab57f2db956b1c5a" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>SlinqAndDispose</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1ad53feefbc57c26c9e370dfb7900f4196" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>SlinqAndKeep</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a70156d57ab2f2b177ceb5d0819ff3bc6" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>SlinqAndKeep</name></member>
      <member refid="struct_smooth_1_1_slinq_1_1_collections_1_1_linked_head_tail_3_01_k_00_01_t_01_4_1a56a873d3c88ad5c50a16779b0b9d9e1f" prot="public" virt="non-virtual"><scope>Smooth::Slinq::Collections::LinkedHeadTail&lt; K, T &gt;</scope><name>tail</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
