<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_orbit_target_renderer_8cs" kind="file">
    <compoundname>OrbitTargetRenderer.cs</compoundname>
    <innerclass refid="class_orbit_target_renderer" prot="public">OrbitTargetRenderer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FinePrint.Utilities;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>KSP.UI.Screens.Mapview;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FinePrint;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_orbit_target_renderer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_orbit_target_renderer" kindref="compound">OrbitTargetRenderer</ref><sp/>:<sp/><ref refid="class_orbit_renderer" kindref="compound">OrbitRenderer</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_orbit_snapshot" kindref="compound">OrbitSnapshot</ref><sp/><ref refid="class_orbit_target_renderer_1a8917b35f94068326d7cca68643d2bfb5" kindref="member">snapshot</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a590a40cbf666ee6791b5f61e0f341a47" kindref="member">animationTimerMax</ref><sp/>=<sp/>8f;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a0b27e90e766536695fc4994a1ccb841c" kindref="member">animationTimerCurrent</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a6aba5a1ea3a60614d4f4b74a93c0e073" kindref="member">endColor</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/color&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1ac44487d8fb2d806fb90ba257657177df" kindref="member">startColor</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;color=#ffffff&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>focusBody;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activeFlight;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1af112b29367ff494e29a18c00aec2bae5" kindref="member">relativeInclination</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_vessel" kindref="compound">Vessel</ref><sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_orbit_target_renderer_1ab35d0bc2f802097e0b1d1316ecbd63ea" kindref="member">Setup&lt;T&gt;</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/><ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activedraw<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>where<sp/>T<sp/>:<sp/><ref refid="class_orbit_target_renderer" kindref="compound">OrbitTargetRenderer</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>color<sp/>=<sp/>SystemUtilities.RandomColor(seed,<sp/>1,<sp/>1,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>go<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameObject(name);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>renderer<sp/>=<sp/>go.AddComponent(typeof(T))<sp/>as<sp/>T;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/><ref refid="class_orbit_renderer_base_1a9d8191f96fc5b2fd6227659b2c93d305" kindref="member">driver</ref><sp/>=<sp/>go.AddComponent&lt;<ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref>&gt;();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driver.orbit<sp/>=<sp/><ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driver.orbitColor<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.snapshot<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_orbit_snapshot" kindref="compound">OrbitSnapshot</ref>(<ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.drawNodes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.drawIcons<sp/>=<sp/><ref refid="_editor_enums_8cs_1a2307bb2910e92dfc889cbd6822ddf32da5fb1f955b45e38e31789286a1790398d" kindref="member">DrawIcons.ALL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.drawMode<sp/>=<sp/>DrawMode.REDRAW_AND_RECALCULATE;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.animationTimerMax<sp/>=<sp/>ContractDefs.Satellite.AnimationDuration;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.SetColor(color);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.autoTextureOffset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.driver<sp/>=<sp/><ref refid="class_orbit_renderer_base_1a9d8191f96fc5b2fd6227659b2c93d305" kindref="member">driver</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driver.Renderer<sp/>=<sp/>renderer;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driver.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.activeDraw<sp/>=<sp/>activedraw;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1af9c97c8d78949b546d9592c4ec665c45" kindref="member">Instance</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderer.transform.parent<sp/>=<sp/>ScaledSpace.Instance.transform;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renderer;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1ac48459ccd942f3d96d1762f5179f4e8f" kindref="member">Cleanup</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_renderer_base_1a256cedeef443047a059c3cb6ce4fbf8d" kindref="member">drawNodes</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_renderer_base_1a993288d987b060cf21f1c0d855f01b9c" kindref="member">drawIcons</ref><sp/>=<sp/><ref refid="_stage_manager_enums_8cs_1a68c407e89ca150f3dcd18557e9c6e600ab50339a10e1de285ac99d4c3990b8693" kindref="member">DrawIcons.NONE</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_renderer_base_1a449d777c1534ec03b601d30dbe93f5e7" kindref="member">drawMode</ref><sp/>=<sp/>DrawMode.OFF;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameObject<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(gameObject);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_map_view" kindref="compound">MapView</ref>.<ref refid="class_map_view_1af4e18e2604f6baddb6a0700d7ac1a76d" kindref="member">MapIsEnabled</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1a9a5047b7d317cbcc9401c8d3ab04b838" kindref="member">UpdateLocals</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CheckVisibility();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_renderer_base_1a449d777c1534ec03b601d30dbe93f5e7" kindref="member">drawMode</ref><sp/>==<sp/><ref refid="class_orbit_renderer_base_1a531c9c8cac63dfad9ab02004af475b6e" kindref="member">DrawMode</ref>.OFF)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LockOrbit();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimateOrbit();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1a9a5047b7d317cbcc9401c8d3ab04b838" kindref="member">UpdateLocals</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>focusBody<sp/>=<sp/>CelestialUtilities.MapFocusBody();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activeFlight<sp/>=<sp/>(HighLogic.LoadedSceneIsFlight<sp/>&amp;&amp;<sp/>FlightGlobals.ready<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref><sp/>!=<sp/>null);<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activeFlight<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1a6e033170289d392001eb56f2ad7dcc77" kindref="member">orbit</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref><sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref><sp/>==<sp/><ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1a6e033170289d392001eb56f2ad7dcc77" kindref="member">orbit</ref>.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1a6e033170289d392001eb56f2ad7dcc77" kindref="member">orbit</ref>.<ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref><sp/>&lt;<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relative<sp/>inclinations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1af112b29367ff494e29a18c00aec2bae5" kindref="member">relativeInclination</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!activeFlight<sp/>||<sp/><ref refid="class_orbit_target_renderer_1aa691cb31d2909a5f1a307f8c11848023" kindref="member">targetVessel</ref>.<ref refid="class_vessel_1ac2cd813e267e817d86b576bc41fba1e1" kindref="member">mainBody</ref><sp/>!=<sp/>focusBody)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1af112b29367ff494e29a18c00aec2bae5" kindref="member">relativeInclination</ref><sp/>=<sp/>Math.Round(OrbitUtilities.GetRelativeInclination(targetVessel.orbit,<sp/><ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(<ref refid="class_orbit_target_renderer_1af112b29367ff494e29a18c00aec2bae5" kindref="member">relativeInclination</ref>))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1af112b29367ff494e29a18c00aec2bae5" kindref="member">relativeInclination</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CheckVisibility()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_renderer_base_1a449d777c1534ec03b601d30dbe93f5e7" kindref="member">drawMode</ref><sp/>=<sp/>(focusBody<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>focusBody<sp/>==<sp/>orbit.referenceBody<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>)<sp/>?<sp/><ref refid="class_orbit_renderer_base_1a531c9c8cac63dfad9ab02004af475b6e" kindref="member">DrawMode</ref>.REDRAW_AND_RECALCULATE<sp/>:<sp/><ref refid="class_orbit_renderer_base_1a531c9c8cac63dfad9ab02004af475b6e" kindref="member">DrawMode</ref>.OFF;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LockOrbit()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Without<sp/>locking<sp/>the<sp/>orbit<sp/>to<sp/>specific<sp/>parameters<sp/>every<sp/>frame,<sp/>it<sp/>can<sp/>drift<sp/>around.<sp/>This<sp/>is<sp/>why<sp/>we<sp/>use<sp/>an<sp/>orbit<sp/>snapshot<sp/>and<sp/>force<sp/>it<sp/>to<sp/>a<sp/>single<sp/>point<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>driver.orbit.SetOrbit(snapshot.inclination,<sp/>snapshot.eccentricity,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.semiMajorAxis,<sp/>snapshot.LAN,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.argOfPeriapsis,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snapshot.meanAnomalyAtEpoch,<sp/>snapshot.epoch,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlightGlobals.Bodies[snapshot.ReferenceBodyIndex]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AnimateOrbit()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_target_renderer_1a0b27e90e766536695fc4994a1ccb841c" kindref="member">animationTimerCurrent</ref><sp/>=<sp/>(<ref refid="class_orbit_target_renderer_1a0b27e90e766536695fc4994a1ccb841c" kindref="member">animationTimerCurrent</ref><sp/>+<sp/>Time.deltaTime)<sp/>%<sp/><ref refid="class_orbit_target_renderer_1a590a40cbf666ee6791b5f61e0f341a47" kindref="member">animationTimerMax</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>animationEccentricAnomaly<sp/>=<sp/>orbit.EccentricAnomalyAtUT(orbit.period<sp/>*<sp/>(<ref refid="class_orbit_target_renderer_1a0b27e90e766536695fc4994a1ccb841c" kindref="member">animationTimerCurrent</ref><sp/>/<sp/><ref refid="class_orbit_target_renderer_1a590a40cbf666ee6791b5f61e0f341a47" kindref="member">animationTimerMax</ref>));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_renderer_base_1ab3e46fbd0f5915a9a0339b6a04f6e546" kindref="member">textureOffset</ref><sp/>=<sp/>1f<sp/>-<sp/>(float)(((animationEccentricAnomaly<sp/>+<sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>.<ref refid="class_util_math_1a208849d04cfa23e20b115eaef3212e07" kindref="member">TwoPI</ref>)<sp/>%<sp/><ref refid="class_util_math" kindref="compound">UtilMath</ref>.<ref refid="class_util_math_1a208849d04cfa23e20b115eaef3212e07" kindref="member">TwoPI</ref>)<sp/>/<sp/><ref refid="class_util_math_1a208849d04cfa23e20b115eaef3212e07" kindref="member">UtilMath.TwoPI</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1aa13ab445f9962c0fc309204957de44e7" kindref="member">CanDrawAnyIcons</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_map_view" kindref="compound">MapView</ref>.<ref refid="class_map_view_1af4e18e2604f6baddb6a0700d7ac1a76d" kindref="member">MapIsEnabled</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_renderer_base_1a256cedeef443047a059c3cb6ce4fbf8d" kindref="member">drawNodes</ref><sp/>||<sp/><ref refid="class_orbit_renderer_base_1a993288d987b060cf21f1c0d855f01b9c" kindref="member">drawIcons</ref><sp/>==<sp/><ref refid="class_orbit_renderer_base_1a9478c15a6f42a5413aa24084c0b3f924" kindref="member">DrawIcons</ref>.NONE)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_map_view_filtering" kindref="compound">MapViewFiltering</ref>.<ref refid="class_map_view_filtering_1a4088b28ed0bd388d8a43207a66d60041" kindref="member">CheckAgainstFilter</ref>(<ref refid="class_orbit_renderer_base_1a222504026dfc5f3025790b8ce6edf420" kindref="member">vessel</ref>))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_renderer_base_1a8d2b93e04617c7cb5e126032a1bdc7a6" kindref="member">discoveryInfo</ref>.<ref refid="class_discovery_info_1ada95e52e548ab32727a2f8dae6c68776" kindref="member">Level</ref><sp/>==<sp/><ref refid="_discovery_info_8cs_1a83ff525e14671ac81ce7942f828b96ec" kindref="member">DiscoveryLevels</ref>.None)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_orbit_renderer_base_1ae183e591a769695cc98bedfc6a38ddd6" kindref="member">lineOpacity</ref><sp/>&lt;=<sp/>0f)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(focusBody<sp/>==<sp/>null<sp/>||<sp/>focusBody<sp/>!=<sp/><ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_orbit_target_renderer_1ae054f4a88817dbc018dfd67fa4ddbed8" kindref="member">ANDNNodes_OnUpdateIcon</ref>(<ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mapview_1_1_map_node" kindref="compound">MapNode</ref><sp/>n,<sp/><ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mapview_1_1_map_node" kindref="compound">MapNode</ref>.IconData<sp/>data)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.color<sp/>=<sp/><ref refid="class_orbit_renderer_1ac8e828cbfb1783b66c9b58672b6490f1" kindref="member">GetNodeColour</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.visible<sp/>=<sp/><ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref><sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1aa13ab445f9962c0fc309204957de44e7" kindref="member">CanDrawAnyIcons</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_orbit_renderer_base_1a1b3c1b182db1b9579ad92e8cd736f6fb" kindref="member">HaveStateVectorKnowledge</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_orbit_renderer_base_1a00da125a4491099d61e5cd2d01a9a62d" kindref="member">GetCurrentDrawMode</ref>()<sp/>==<sp/>DrawIcons.ALL<sp/>&amp;&amp;<sp/><ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_target_renderer_1ab60fe09c70724790dd83a4559bb05c96" kindref="member">ascNode_OnUpdatePosition</ref>(<ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mapview_1_1_map_node" kindref="compound">MapNode</ref><sp/>n)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref><sp/>||<sp/>!<ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleOfDescendingNode<sp/>=<sp/>OrbitUtilities.AngleOfDescendingNode(<ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>,<sp/>FlightGlobals.ActiveVessel.orbit);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScaledSpace.LocalToScaledSpace(orbit.getPositionFromTrueAnomaly(angleOfDescendingNode<sp/>*<sp/>(Math.PI<sp/>/<sp/>180)));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/><ref refid="class_orbit_target_renderer_1aeb7d9fef1a02bcd8d29471bf23c41f0d" kindref="member">descNode_OnUpdatePosition</ref>(<ref refid="class_k_s_p_1_1_u_i_1_1_screens_1_1_mapview_1_1_map_node" kindref="compound">MapNode</ref><sp/>n)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit_target_renderer_1a41efad3fba372a8bee82f7998ef17e71" kindref="member">ANDNVisible</ref><sp/>||<sp/>!<ref refid="class_orbit_target_renderer_1a309950d31d0bb0f369d10538a9ee86ad" kindref="member">activeDraw</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>;<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleOfAscendingNode<sp/>=<sp/>OrbitUtilities.AngleOfAscendingNode(<ref refid="class_orbit_renderer_base_1a21ce248b3af29701afdedff29852e214" kindref="member">orbit</ref>,<sp/>FlightGlobals.ActiveVessel.orbit);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScaledSpace.LocalToScaledSpace(orbit.getPositionFromTrueAnomaly(angleOfAscendingNode<sp/>*<sp/>(Math.PI<sp/>/<sp/>180)));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitTargetRenderer.cs"/>
  </compounddef>
</doxygen>
