<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_patched_conics_8cs" kind="file">
    <compoundname>PatchedConics.cs</compoundname>
    <innerclass refid="struct_patched_conics_1_1_patch_cast_hit" prot="public">PatchedConics::PatchCastHit</innerclass>
    <innerclass refid="class_patched_conics" prot="public">PatchedConics</innerclass>
    <innerclass refid="class_patched_conics_1_1_solver_parameters" prot="public">PatchedConics::SolverParameters</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_celestial_body_8cs_1ac9eb0319ef2a2099d69ed9e5dcbfcb6aa8045a0a6c688b0635e3caccc408a1446" kindref="member">System.Collections.Generic</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_patched_conics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_patched_conics" kindref="compound">PatchedConics</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_patched_conics_1_1_solver_parameters" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_patched_conics_1_1_solver_parameters" kindref="compound">SolverParameters</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a61ac05303a0cc0fc13712e949850b784" kindref="member">maxGeometrySolverIterations</ref><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1ac48cb0c5256056eaa342f37d574b8baa" kindref="member">maxTimeSolverIterations</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1ae8020ffa0573b513738241388d025992" kindref="member">GeoSolverIterations</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a71885a3bdc8d0c57615624a6be956e0d" kindref="member">TimeSolverIterations1</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a54d8e927cea19237a0c6d9dddde25fb0" kindref="member">TimeSolverIterations2</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1ad7e21864e6445da6aced13a512550a03" kindref="member">FollowManeuvers</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a9ccd84e465c5fa6b77cf32ccae1fd091" kindref="member">debug_disableEscapeCheck</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a3fff7230598a2b179d843ab4636d517e" kindref="member">outerReaches</ref><sp/>=<sp/>1.0e20;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1_1_solver_parameters_1a5ca81b3e5a5e90b7266ebf42956ef951" kindref="member">epsilon</ref><sp/>=<sp/>1e-4;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a44dce61f118ab84802c0b325fa160669" kindref="member">GetClosestApproachDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/><ref refid="class_patched_conics_1_1_solver_parameters" kindref="compound">SolverParameters</ref><sp/>pars);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a44dce61f118ab84802c0b325fa160669" kindref="member">GetClosestApproachDelegate</ref><sp/><ref refid="class_patched_conics_1ad6a54a834f132e1f355dac98ecf0d81c" kindref="member">GetClosestApproach</ref><sp/>=<sp/><ref refid="class_patched_conics_1a01a4a9a3ce3828853d96d2f1a9fcf359" kindref="member">_GetClosestApproach</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a01a4a9a3ce3828853d96d2f1a9fcf359" kindref="member">_GetClosestApproach</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/><ref refid="class_patched_conics_1_1_solver_parameters" kindref="compound">SolverParameters</ref><sp/>pars)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however,<sp/>use<sp/>the<sp/>synodic<sp/>period<sp/>as<sp/>it<sp/>may<sp/>take<sp/>quite<sp/>some<sp/>time<sp/>to<sp/>catch<sp/>up,<sp/>but<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>periods<sp/>are<sp/>the<sp/>same,<sp/>use<sp/>the<sp/>sidereal<sp/>period:<sp/>there<sp/>may<sp/>still<sp/>be<sp/>a<sp/>closest<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>the<sp/>eccentricies<sp/>are<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>synperiod<sp/>=<sp/>Orbit.SynodicPeriod(p,<sp/>s);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(synperiod))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>impossible<sp/>to<sp/>subdivide<sp/>infinity<sp/>(inf/2<sp/>=<sp/>inf,<sp/>inf<sp/>-<sp/>inf<sp/>=<sp/>NaN),<sp/>so<sp/>need<sp/>to<sp/>choose<sp/>reasonable<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>AforSOI;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(p.referenceBody.sphereOfInfluence))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>refeference<sp/>body<sp/>is<sp/>the<sp/>center<sp/>of<sp/>the<sp/>universe<sp/>(the<sp/>sun<sp/>in<sp/>stock<sp/>KSP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>body&apos;s<sp/>orbit<sp/>is<sp/>closed,<sp/>so<sp/>choose<sp/>a<sp/>distance<sp/>that<sp/>should<sp/>be<sp/>sufficiently<sp/>beyond<sp/>the<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AforSOI<sp/>=<sp/>p.TrueAnomalyAtRadius(s.semiMajorAxis<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>never<sp/>happens<sp/>in<sp/>stock<sp/>KSP,<sp/>and<sp/>I<sp/>doubt<sp/>any<sp/>planet<sp/>packs<sp/>put<sp/>bodies<sp/>on<sp/>escape<sp/>trajectories,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>just<sp/>in<sp/>case,<sp/>search<sp/>out<sp/>to<sp/>the<sp/>boonies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AforSOI<sp/>=<sp/>p.TrueAnomalyAtRadius(pars.outerReaches);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AforSOI<sp/>=<sp/>p.TrueAnomalyAtRadius(p.referenceBody.sphereOfInfluence);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synperiod<sp/>=<sp/>2<sp/>*<sp/>p.GetUTforTrueAnomaly(AforSOI,<sp/>0.0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/>AforSOI:<sp/>{0}<sp/>TforSOI:<sp/>{1}&quot;,<sp/>AforSOI,<sp/>TforSOI,<sp/>p.GetDTforTrueAnomaly(AforSOI,<sp/>0.0)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chech<sp/>at<sp/>most<sp/>one<sp/>synodic<sp/>period<sp/>into<sp/>the<sp/>future</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(synperiod<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinUT<sp/>=<sp/>Math.Max(p.UTappr<sp/>-<sp/>synperiod<sp/>/<sp/>2,<sp/>startEpoch);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxUT<sp/>=<sp/>MinUT<sp/>+<sp/>synperiod;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.timeToPe<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>escaping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinUT<sp/>=<sp/>startEpoch;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synperiod<sp/>is<sp/>negative!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxUT<sp/>=<sp/>MinUT<sp/>-<sp/>synperiod;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synperiod<sp/>is<sp/>negative!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinUT<sp/>=<sp/>Math.Max(p.UTappr<sp/>+<sp/>synperiod,<sp/>startEpoch);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxUT<sp/>=<sp/>MinUT<sp/>-<sp/>synperiod<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT<sp/>=<sp/>Math.Abs(synperiod);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>st<sp/>=<sp/>p.UTappr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>Orbit.SolveClosestApproach(p,<sp/>s,<sp/>ref<sp/>p.UTappr,<sp/>dT,<sp/>0.0,<sp/>MinUT,<sp/>MaxUT,<sp/>pars.epsilon,<sp/>pars.maxTimeSolverIterations,<sp/>ref<sp/>pars.TimeSolverIterations1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;GetClosestApproach:<sp/>{0}<sp/>{1}<sp/>{2}<sp/>{3}<sp/>{4}<sp/>{5}<sp/>{6}<sp/>{7}<sp/>{8}&quot;,<sp/>st,<sp/>p.period,<sp/>s.period,<sp/>synperiod,<sp/>MinUT,<sp/>MaxUT,<sp/>dT,<sp/>p.UTappr,<sp/>pars.TimeSolverIterations1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ade072b80d533dceadf2e7f7f2d3eb1d3" kindref="member">EncountersBodyDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>sec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/>SolverParameters<sp/>pars);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ade072b80d533dceadf2e7f7f2d3eb1d3" kindref="member">EncountersBodyDelegate</ref><sp/><ref refid="class_patched_conics_1a7b5b1e9514875e45080a39016c97784f" kindref="member">EncountersBody</ref><sp/>=<sp/>_EncountersBody;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_EncountersBody(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>sec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/>SolverParameters<sp/>pars)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>approach<sp/>is<sp/>closer<sp/>than<sp/>SOI<sp/>radius,<sp/>search<sp/>again<sp/>backwards,<sp/>to<sp/>find<sp/>the<sp/>SOI<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.ClAppr<sp/>&lt;<sp/>sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref><sp/>&amp;&amp;<sp/>p.ClAppr<sp/>!=<sp/>-1.0)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.getPositionAtUT(p.UTappr)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(s.getPositionAtUT(p.UTappr)),<sp/>XKCDColors.ElectricLime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTsoi<sp/>=<sp/>p.UTappr;</highlight><highlight class="comment">//<sp/>(startEpoch<sp/>+<sp/>p.UTappr)<sp/>*<sp/>0.5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Orbit.SolveSOI(p,<sp/>s,<sp/>ref<sp/>p.UTsoi,<sp/></highlight><highlight class="comment">//UT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p.UTappr<sp/>-<sp/>startEpoch)<sp/>*<sp/>0.5,<sp/></highlight><highlight class="comment">//dT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEpoch,<sp/><sp/></highlight><highlight class="comment">//MinUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTappr,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MaxUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pars.epsilon,<sp/>pars.maxTimeSolverIterations,<sp/>ref<sp/>pars.TimeSolverIterations1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.LogFormat(&quot;_EncountersBody:<sp/>{0}<sp/>{1}<sp/>{2}<sp/>{3}&quot;,<sp/>startEpoch,<sp/>p.UTsoi,<sp/>p.UTappr,<sp/>pars.TimeSolverIterations1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>ppos,<sp/>pvel;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>spos,<sp/>svel;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.GetOrbitalStateVectorsAtUT(p.UTsoi,<sp/>out<sp/>ppos,<sp/>out<sp/>pvel);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.GetOrbitalStateVectorsAtUT(p.UTsoi,<sp/>out<sp/>spos,<sp/>out<sp/>svel);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rpos<sp/>=<sp/>ppos<sp/>-<sp/>spos;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rvel<sp/>=<sp/>pvel<sp/>-<sp/>svel;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vector3d" kindref="compound">Vector3d</ref>.<ref refid="struct_vector3d_1a59179e16405e9c8bbde010595148a6e5" kindref="member">Dot</ref>(rpos,<sp/>rvel)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>moving<sp/>apart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>rbpos<sp/>=<sp/>p.referenceBody.position;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(ScaledSpace.LocalToScaledSpace(rbpos<sp/>+<sp/>ppos.xzy),<sp/>ScaledSpace.LocalToScaledSpace(rbpos<sp/>+<sp/>spos.xzy),<sp/>XKCDColors.AquaMarine);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.UpdateFromOrbitAtUT(p,<sp/>p.UTsoi,<sp/>sec.celestialBody);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nextPatch.DrawOrbit();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.StartUT<sp/>=<sp/>startEpoch;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.EndUT<sp/>=<sp/>p.UTsoi;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.patchEndTransition<sp/>=<sp/>Orbit.PatchTransitionType.ENCOUNTER;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1af86f2e9121af82bc0950a1a0c5fb7196" kindref="member">CheckEncounterDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>sec,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>targetBody,<sp/>SolverParameters<sp/>pars,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logErrors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1af86f2e9121af82bc0950a1a0c5fb7196" kindref="member">CheckEncounterDelegate</ref><sp/><ref refid="class_patched_conics_1a43be67cfbfc8634eb404ef7614684582" kindref="member">CheckEncounter</ref><sp/>=<sp/><ref refid="class_patched_conics_1a5d95a51e4cf17708a6d06f7505bee9d8" kindref="member">_CheckEncounter</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a5d95a51e4cf17708a6d06f7505bee9d8" kindref="member">_CheckEncounter</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>sec,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>targetBody,<sp/>SolverParameters<sp/>pars,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logErrors<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>s<sp/>=<sp/>sec.orbit;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SoIbuffer<sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="class_game_settings" kindref="compound">GameSettings</ref>.<ref refid="class_game_settings_1a7c5be258da11c41cabbf88bfa4c591ac" kindref="member">ALWAYS_SHOW_TARGET_APPROACH_MARKERS</ref><sp/>&amp;&amp;<sp/>sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>==<sp/>targetBody))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rule<sp/>out<sp/>orbits<sp/>by<sp/>Pe/Ap<sp/>intersection<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_orbit" kindref="compound">Orbit</ref>.<ref refid="class_orbit_1abaf424cdbb82e296b84cc1b14fc4bd89" kindref="member">PeApIntersects</ref>(p,<sp/>s,<sp/>sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref><sp/>*<sp/>SoIbuffer))</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>periapsis<sp/>of<sp/>the<sp/>patch<sp/>is<sp/>outside<sp/>the<sp/>apoapsis<sp/>of<sp/>the<sp/>body&apos;s<sp/>orbit,<sp/>or<sp/>the<sp/>apoapsis<sp/>of<sp/>the<sp/>patch<sp/>is<sp/>within<sp/>the<sp/>periapsis<sp/>of<sp/>the<sp/>body&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orbit<sp/>(both<sp/>with<sp/>a<sp/>buffer<sp/>for<sp/>the<sp/>body&apos;s<sp/>SoI)<sp/>then<sp/>there<sp/>is<sp/>no<sp/>chance<sp/>of<sp/>an<sp/>encounter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pe/Ap<sp/>no<sp/>intersect&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1ae51c8d96197de078b6accafdfe7a1629" kindref="member">closestEncounterLevel</ref><sp/>&lt;<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref>.<ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580" kindref="member">EncounterSolutionLevel</ref>.ORBIT_INTERSECT)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestEncounterLevel<sp/>=<sp/>Orbit.EncounterSolutionLevel.ORBIT_INTERSECT;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestEncounterBody<sp/>=<sp/>sec.celestialBody;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>out<sp/>the<sp/>encounter<sp/>values<sp/>to<sp/>avoid<sp/>trampling<sp/>them<sp/>if<sp/>they<sp/>represent<sp/>a<sp/>valid<sp/>encounter<sp/>and<sp/>this<sp/>one<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ClEctr1<sp/>=<sp/>p.ClEctr1,<sp/>ClEctr2<sp/>=<sp/>p.ClEctr2;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FEVp<sp/>=<sp/>p.FEVp,<sp/>FEVs<sp/>=<sp/>p.FEVs;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SEVp<sp/>=<sp/>p.SEVp,<sp/>SEVs<sp/>=<sp/>p.SEVs;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rule<sp/>out<sp/>orbits<sp/>without<sp/>a<sp/>closest<sp/>passage<sp/>within<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>Orbit.FindClosestPoints(p,<sp/>s,<sp/>ref<sp/>ClEctr1,<sp/>ref<sp/>ClEctr2,<sp/>ref<sp/>FEVp,<sp/>ref<sp/>FEVs,<sp/>ref<sp/>SEVp,<sp/>ref<sp/>SEVs,<sp/>0.0001,<sp/>pars.maxGeometrySolverIterations,<sp/>ref<sp/>pars.GeoSolverIterations);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>never<sp/>happen<sp/>unless<sp/>the<sp/>two<sp/>orbits<sp/>are<sp/>perfectly<sp/>circular<sp/>and<sp/>perfectly<sp/>coplanar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;CheckEncounter:<sp/>failed<sp/>to<sp/>find<sp/>any<sp/>intercepts<sp/>at<sp/>all&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//FIXME<sp/>if<sp/>within<sp/>SoI<sp/>distance,<sp/>encounters<sp/>can<sp/>still<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tt1<sp/>=<sp/>p.GetDTforTrueAnomaly(FEVp,<sp/>0.0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tt2<sp/>=<sp/>p.GetDTforTrueAnomaly(SEVp,<sp/>0.0);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ut1<sp/>=<sp/>tt1<sp/>+<sp/>startEpoch;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ut2<sp/>=<sp/>tt2<sp/>+<sp/>startEpoch;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num:<sp/>{0}<sp/>FEVp:<sp/>{1}<sp/>SEVp:<sp/>{2}&quot;,<sp/>num,<sp/>FEVp,<sp/>SEVp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tt1:<sp/>{0}<sp/>ut1;<sp/>{1}&quot;,<sp/>tt1,<sp/>ut1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tt2:<sp/>{0}<sp/>ut2;<sp/>{1}&quot;,<sp/>tt2,<sp/>ut2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(ut1)<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(ut2))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;CheckEncounter:<sp/>both<sp/>intercept<sp/>UTs<sp/>are<sp/>infinite&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ut1<sp/>&lt;<sp/>p.StartUT<sp/>||<sp/>ut1<sp/>&gt;<sp/>p.EndUT)<sp/>&amp;&amp;<sp/>(ut2<sp/>&lt;<sp/>p.StartUT<sp/>||<sp/>ut2<sp/>&gt;<sp/>p.EndUT))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encounter<sp/>UT<sp/>outside<sp/>patch<sp/>{0}<sp/>{1}<sp/>{2}<sp/>{3}&quot;,<sp/>p.StartUT,<sp/>p.EndUT,<sp/>ut1,<sp/>ut2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>first<sp/>intercept<sp/>is<sp/>earlier<sp/>than<sp/>the<sp/>second<sp/>and<sp/>is<sp/>valid<sp/>(if<sp/>it<sp/>is<sp/>not<sp/>valid,<sp/>then<sp/>the<sp/>second<sp/>is<sp/>because<sp/>of<sp/>the<sp/>previous<sp/>test)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ut2<sp/>&lt;<sp/>ut1<sp/>||<sp/>ut1<sp/>&lt;<sp/>p.StartUT<sp/>||<sp/>ut1<sp/>&gt;<sp/>p.EndUT)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SwapValues(ref<sp/>FEVp,<sp/>ref<sp/>SEVp);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SwapValues(ref<sp/>FEVs,<sp/>ref<sp/>SEVs);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SwapValues(ref<sp/>ClEctr1,<sp/>ref<sp/>ClEctr2);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SwapValues(ref<sp/>tt1,<sp/>ref<sp/>tt2);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.SwapValues(ref<sp/>ut1,<sp/>ref<sp/>ut2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ut2<sp/>&lt;<sp/>p.StartUT<sp/>||<sp/>ut2<sp/>&gt;<sp/>p.EndUT<sp/>||<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(ut2))<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>second<sp/>intercept<sp/>is<sp/>not<sp/>valid,<sp/>then<sp/>check<sp/>only<sp/>the<sp/>first<sp/>intercept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>one<sp/>intercept<sp/>is<sp/>valid,<sp/>so<sp/>update<sp/>the<sp/>patch&apos;s<sp/>encounter<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.numClosePoints<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.FEVp<sp/>=<sp/>FEVp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.FEVs<sp/>=<sp/>FEVs;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.SEVp<sp/>=<sp/>SEVp;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.SEVs<sp/>=<sp/>SEVs;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.ClEctr1<sp/>=<sp/>ClEctr1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.ClEctr2<sp/>=<sp/>ClEctr2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>guess<sp/>for<sp/>time<sp/>of<sp/>closest<sp/>approach.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>intercept<sp/>time<sp/>is<sp/>an<sp/>excellent<sp/>initial<sp/>guess,<sp/>and<sp/>GetClosestApproach<sp/>will<sp/>check<sp/>a<sp/>full<sp/>synodic<sp/>period<sp/>(+/-<sp/>1/2<sp/>period),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>only<sp/>one<sp/>check<sp/>is<sp/>needed<sp/>as<sp/>the<sp/>second<sp/>intercept<sp/>time<sp/>(if<sp/>it<sp/>exists)<sp/>will<sp/>always<sp/>be<sp/>less<sp/>than<sp/>a<sp/>even<sp/>a<sp/>target<sp/>period,<sp/>let<sp/>alone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>synodic<sp/>period<sp/>away<sp/>from<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTappr<sp/>=<sp/>ut1;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Math.Min(p.ClEctr1,<sp/>p.ClEctr2)<sp/>&gt;<sp/>sec.celestialBody.sphereOfInfluence)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>intercept<sp/>distances<sp/>are<sp/>greater<sp/>than<sp/>the<sp/>SoI<sp/>distance,<sp/>so<sp/>no<sp/>encounter<sp/>can<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest<sp/>points<sp/>too<sp/>far&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>time<sp/>of<sp/>closest<sp/>passage<sp/>to<sp/>the<sp/>target<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_game_settings" kindref="compound">GameSettings</ref>.<ref refid="class_game_settings_1a7c5be258da11c41cabbf88bfa4c591ac" kindref="member">ALWAYS_SHOW_TARGET_APPROACH_MARKERS</ref><sp/>||<sp/>Thread.CurrentThread.IsBackground)<sp/>&amp;&amp;<sp/>sec.celestialBody<sp/>==<sp/>targetBody)<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p.UTappr<sp/>set<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.ClAppr<sp/>=<sp/><ref refid="class_patched_conics_1ad6a54a834f132e1f355dac98ecf0d81c" kindref="member">GetClosestApproach</ref>(p,<sp/>s,<sp/>startEpoch,<sp/>p.nearestTT<sp/>*<sp/>0.5,<sp/>pars);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestTgtApprUT<sp/>=<sp/>p.UTappr;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.closestEncounterLevel<sp/>&lt;<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref>.<ref refid="class_orbit_1ab0e2dc2f244a601c6fb6dd1070785580" kindref="member">EncounterSolutionLevel</ref>.SOI_INTERSECT_1)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestEncounterLevel<sp/>=<sp/>Orbit.EncounterSolutionLevel.SOI_INTERSECT_1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestEncounterBody<sp/>=<sp/>sec.celestialBody;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.timeToTransition1<sp/>=<sp/>tt1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.secondaryPosAtTransition1<sp/>=<sp/>s.getPositionAtUT(ut1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(p.secondaryPosAtTransition1),<sp/>Color.yellow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.timeToTransition2<sp/>=<sp/>tt2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.secondaryPosAtTransition2<sp/>=<sp/>s.getPositionAtUT(ut2);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.DrawLine(ScaledSpace.LocalToScaledSpace(p.referenceBody.position),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(p.secondaryPosAtTransition2),<sp/>Color.red);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.nearestTT<sp/>=<sp/>p.timeToTransition1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.nextTT<sp/>=<sp/>p.timeToTransition2;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsNaN(p.nearestTT)<sp/>&amp;&amp;<sp/>!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;nearestTT<sp/>is<sp/>NaN!<sp/>t1:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>p.timeToTransition1<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>t2:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>p.timeToTransition2<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>FEVp:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>p.FEVp<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>SEVp:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>p.SEVp);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p.UTappr<sp/>set<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.ClAppr<sp/>=<sp/><ref refid="class_patched_conics_1ad6a54a834f132e1f355dac98ecf0d81c" kindref="member">GetClosestApproach</ref>(p,<sp/>s,<sp/>startEpoch,<sp/>p.nearestTT<sp/>*<sp/>0.5,<sp/>pars);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(String.Format(&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clappr<sp/>1:<sp/>{0}&quot;,<sp/>p.ClAppr));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_patched_conics_1a7b5b1e9514875e45080a39016c97784f" kindref="member">EncountersBody</ref>(p,<sp/>s,<sp/>nextPatch,<sp/>sec,<sp/>startEpoch,<sp/>pars))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>time<sp/>of<sp/>closest<sp/>passage<sp/>to<sp/>the<sp/>target<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>==<sp/>targetBody)<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestTgtApprUT<sp/>=<sp/>p.UTappr;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console.WriteLine(e);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a0ab0586efe32f9740b6145457a251dba" kindref="member">CalculatePatchDelegate</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/>SolverParameters<sp/>pars,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>targetBody);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a0ab0586efe32f9740b6145457a251dba" kindref="member">CalculatePatchDelegate</ref><sp/><ref refid="class_patched_conics_1a740f368ef2ecd563378a1f66ac45f5af" kindref="member">CalculatePatch</ref><sp/>=<sp/><ref refid="class_patched_conics_1ada5c4bb023e2b8d233be8c7ce6143626" kindref="member">_CalculatePatch</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ada5c4bb023e2b8d233be8c7ce6143626" kindref="member">_CalculatePatch</ref>(<ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>p,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>nextPatch,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startEpoch,<sp/>SolverParameters<sp/>pars,<sp/><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref><sp/>targetBody)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.activePatch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.nextPatch<sp/>=<sp/>nextPatch;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.patchEndTransition<sp/>=<sp/>Orbit.PatchTransitionType.FINAL;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestEncounterLevel<sp/>=<sp/><ref refid="_stage_manager_enums_8cs_1a68c407e89ca150f3dcd18557e9c6e600ab50339a10e1de285ac99d4c3990b8693" kindref="member">Orbit.EncounterSolutionLevel.NONE</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.numClosePoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>Planetarium.Orbits.Count;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(&quot;CalculatePatch&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_orbit_driver" kindref="compound">OrbitDriver</ref><sp/>sec<sp/>=<sp/>Planetarium.Orbits[i];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sec.<ref refid="class_orbit_driver_1a00e94137db68e4ea4e4ed449d437588e" kindref="member">orbit</ref><sp/>==<sp/>p)<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ignore<sp/>own<sp/>orbit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref>)<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>non<sp/>celestial<sp/>body<sp/>orbits<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetBody<sp/>==<sp/>null<sp/>||<sp/>sec.<ref refid="class_orbit_driver_1a4d359058f3c8b7d67dec5eb5a0b1b64a" kindref="member">celestialBody</ref><sp/>==<sp/>targetBody)<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>close<sp/>Tgt<sp/>approach<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.closestTgtApprUT<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>sec.<ref refid="class_orbit_driver_1a04d790a3ee23e8abc5ea3667b6557e0a" kindref="member">referenceBody</ref><sp/>==<sp/>p.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>)<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log(&quot;<sp/><sp/><sp/><sp/>&quot;<sp/>+<sp/>sec.celestialBody.name);<sp/>///&lt;<sp/>handle<sp/>encounters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_patched_conics_1a43be67cfbfc8634eb404ef7614684582" kindref="member">CheckEncounter</ref>(p,<sp/>nextPatch,<sp/>startEpoch,<sp/>sec,<sp/>targetBody,<sp/>pars);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>the<sp/>escape<sp/>case<sp/>only<sp/>if<sp/>there<sp/>weren&apos;t<sp/>other<sp/>events<sp/>detected<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1afa86ff0e2d192320f397f9507f2a1f37" kindref="member">patchEndTransition</ref><sp/>==<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref>.<ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712df" kindref="member">PatchTransitionType</ref>.FINAL<sp/>&amp;&amp;<sp/>!pars.debug_disableEscapeCheck)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_orbit_1a82f323a127d95a3b059eed9d6f2d0c51" kindref="member">ApR</ref><sp/>&gt;<sp/>p.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref><sp/>||<sp/>p.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">.IsInfinity(p.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>.<ref refid="class_celestial_body_1ae2df65a78c7f5b380b750ad543f2f5b6" kindref="member">sphereOfInfluence</ref>))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>escaping<sp/>the<sp/>Sun<sp/>(SOI<sp/>=<sp/>infinite)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.FEVp<sp/>=<sp/>Math.Acos(-(1.0<sp/>/<sp/>p.eccentricity));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.SEVp<sp/>=<sp/>-p.FEVp;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.StartUT<sp/>=<sp/>startEpoch;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.EndUT<sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTsoi<sp/>=<sp/>double.PositiveInfinity;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.patchEndTransition<sp/>=<sp/>Orbit.PatchTransitionType.FINAL;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.FEVp<sp/>=<sp/>p.TrueAnomalyAtRadius(p.referenceBody.sphereOfInfluence);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.SEVp<sp/>=<sp/>-p.FEVp;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.timeToTransition1<sp/>=<sp/>p.GetDTforTrueAnomaly(p.FEVp,<sp/>0.0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.timeToTransition2<sp/>=<sp/>p.GetDTforTrueAnomaly(p.SEVp,<sp/>0.0);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTsoi<sp/>=<sp/>startEpoch<sp/>+<sp/>p.timeToTransition1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.UpdateFromOrbitAtUT(p,<sp/>p.UTsoi,<sp/>p.referenceBody.referenceBody);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.StartUT<sp/>=<sp/>startEpoch;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.EndUT<sp/>=<sp/>p.UTsoi;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.patchEndTransition<sp/>=<sp/>Orbit.PatchTransitionType.ESCAPE;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.UTsoi<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.StartUT<sp/>=<sp/>startEpoch;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.EndUT<sp/>=<sp/>startEpoch<sp/>+<sp/>p.period;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.patchEndTransition<sp/>=<sp/>Orbit.PatchTransitionType.FINAL;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.StartUT<sp/>=<sp/>p.EndUT;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>orbits<sp/>have<sp/>infinite<sp/>periods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.EndUT<sp/>=<sp/>(nextPatch.eccentricity<sp/>&lt;<sp/>1d<sp/>?<sp/>nextPatch.StartUT<sp/>+<sp/>nextPatch.period<sp/>:<sp/>nextPatch.period);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.patchStartTransition<sp/>=<sp/>p.patchEndTransition;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextPatch.previousPatch<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.patchEndTransition<sp/>!=<sp/>Orbit.PatchTransitionType.FINAL;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Thread.CurrentThread.IsBackground)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console.WriteLine(e);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="struct_patched_conics_1_1_patch_cast_hit" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref><sp/>:<sp/><ref refid="interface_i_screen_caster" kindref="compound">IScreenCaster</ref></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1adbdfa9488ede4de03e872542cdbcc814" kindref="member">orbitOrigin</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ae23c8118e596ae2a5681923d7d89acf6" kindref="member">hitPoint</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a0296b9cd6de3e4a031476f8236b70791" kindref="member">orbitPoint</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a0334160f1a2e0897c31f6a1bca6ca50a" kindref="member">orbitScreenPoint</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a4b4fa2514220f21bd75a76d9b562b02d" kindref="member">mouseTA</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a2f1f36f5d5987ca33c5fdb0f0ca1adfe" kindref="member">radiusAtTA</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ab757840adf2a7b453bf3d8c95206b9ba" kindref="member">UTatTA</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a13eacdb87b7f3874ba3a6c5c919e838d" kindref="member">pr</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1a58c25a3c55cf4b621a36d1658c4f9d32" kindref="member">GetUpdatedOrbitPoint</ref>()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr.GetScaledSpacePointFromTA(<ref refid="struct_patched_conics_1_1_patch_cast_hit_1a4b4fa2514220f21bd75a76d9b562b02d" kindref="member">mouseTA</ref>,<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ab757840adf2a7b453bf3d8c95206b9ba" kindref="member">UTatTA</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ad4c2405864697d6a623f30e59b0a8494" kindref="member">GetScreenSpacePoint</ref>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PlanetariumCamera.Camera.WorldToScreenPoint(<ref refid="struct_patched_conics_1_1_patch_cast_hit_1a58c25a3c55cf4b621a36d1658c4f9d32" kindref="member">GetUpdatedOrbitPoint</ref>());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ad0a879811b72b5ed51e7914601dd7b64" kindref="member">GetUpdatedOrigin</ref>()</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_patched_conics_1_1_patch_cast_hit_1a13eacdb87b7f3874ba3a6c5c919e838d" kindref="member">pr</ref>.<ref refid="class_patch_rendering_1a3eee3261c1464f91b4a9ed6de17cb574" kindref="member">relativityMode</ref><sp/>==<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref>.<ref refid="class_patch_rendering_1a115f6e202569b90d2ff341fc4d2a26ed" kindref="member">RelativityMode</ref>.RELATIVE)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToRelative(<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>,<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ab757840adf2a7b453bf3d8c95206b9ba" kindref="member">UTatTA</ref>,<sp/>pr.relativeTo));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_patched_conics_1_1_patch_cast_hit_1a13eacdb87b7f3874ba3a6c5c919e838d" kindref="member">pr</ref>.<ref refid="class_patch_rendering_1a3eee3261c1464f91b4a9ed6de17cb574" kindref="member">relativityMode</ref><sp/>==<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref>.<ref refid="class_patch_rendering_1a115f6e202569b90d2ff341fc4d2a26ed" kindref="member">RelativityMode</ref>.DYNAMIC)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToLerped(<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>,<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit_1ab757840adf2a7b453bf3d8c95206b9ba" kindref="member">UTatTA</ref>,<sp/>pr.patch.referenceBody,<sp/>pr.relativeTo,<sp/>pr.patch.timeToPe,<sp/>pr.patch.EndUT,<sp/>pr.dynamicLinearity));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr.cb;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ae75facb6413c8a25bd3f920581b7a0f4" kindref="member">ScreenCastDelegate</ref>(Vector3<sp/>screenPos,<sp/>List&lt;PatchRendering&gt;<sp/>patchRenders,<sp/>out<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref><sp/>hitInfo,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orbitPixelWidth<sp/>=<sp/>10f,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxUT<sp/>=<sp/>-1.0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clampToPatches<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ae75facb6413c8a25bd3f920581b7a0f4" kindref="member">ScreenCastDelegate</ref><sp/><ref refid="class_patched_conics_1a3ba2ca4993aafa42c18f1f39c32a84ab" kindref="member">ScreenCast</ref><sp/>=<sp/><ref refid="class_patched_conics_1a45165c7645a83b312dfbcfb08f8844da" kindref="member">_ScreenCast</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a45165c7645a83b312dfbcfb08f8844da" kindref="member">_ScreenCast</ref>(Vector3<sp/>screenPos,<sp/>List&lt;PatchRendering&gt;<sp/>patchRenders,<sp/>out<sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref><sp/>hitInfo,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orbitPixelWidth<sp/>=<sp/>10f,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxUT<sp/>=<sp/>-1.0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clampToPatches<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref><sp/>testHit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_patched_conics_1_1_patch_cast_hit" kindref="compound">PatchCastHit</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>goodHit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>patchRenders.Count;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr<sp/>=<sp/>patchRenders[i];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pr.<ref refid="class_patch_rendering_1a365f812810ff44f47db927019414b03a" kindref="member">enabled</ref><sp/>||<sp/>!pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a488229aa4687ba8ffcd23dce27353eb6" kindref="member">activePatch</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxUT<sp/>!=<sp/>-1.0<sp/>&amp;&amp;<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref><sp/>&gt;=<sp/>maxUT)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_patched_conics_1a8681e17fc3cb1fb5a85f5dd782984098" kindref="member">ScreenCastWorker</ref>(screenPos,<sp/>pr,<sp/>out<sp/>testHit,<sp/>orbitPixelWidth,<sp/>clampToPatches))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo<sp/>=<sp/>testHit;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goodHit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goodHit;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ad544b47df6edd702c6d89244e5609a9f" kindref="member">ScreenCastWorkerDelegate</ref>(Vector3<sp/>screenPos,<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr,<sp/>out<sp/>PatchCastHit<sp/>hitInfo,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orbitPixelWidth<sp/>=<sp/>10f,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clampToPatch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1ad544b47df6edd702c6d89244e5609a9f" kindref="member">ScreenCastWorkerDelegate</ref><sp/><ref refid="class_patched_conics_1a8681e17fc3cb1fb5a85f5dd782984098" kindref="member">ScreenCastWorker</ref><sp/>=<sp/><ref refid="class_patched_conics_1a70768b78c8c9f3cb23c9f6479798de4e" kindref="member">_ScreenCastWorker</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a70768b78c8c9f3cb23c9f6479798de4e" kindref="member">_ScreenCastWorker</ref>(Vector3<sp/>screenPos,<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr,<sp/>out<sp/>PatchCastHit<sp/>hitInfo,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>orbitPixelWidth<sp/>=<sp/>10f,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clampToPatch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PatchCastHit();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edba0d3adee051531c15b3509b4d4d75ce7b" kindref="member">Plane</ref><sp/>hitPlane;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>mouseRay;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rayDist;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>rPoint;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.pr<sp/>=<sp/>pr;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pr.<ref refid="class_patch_rendering_1a3eee3261c1464f91b4a9ed6de17cb574" kindref="member">relativityMode</ref><sp/>==<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref>.<ref refid="class_patch_rendering_1a115f6e202569b90d2ff341fc4d2a26ed" kindref="member">RelativityMode</ref>.RELATIVE)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>patch<sp/>is<sp/>in<sp/>relative<sp/>mode,<sp/>figure<sp/>out<sp/>the<sp/>actual<sp/>TA<sp/>by<sp/>taking<sp/>the<sp/>angle<sp/>from<sp/>the<sp/>cb<sp/>pos<sp/>at<sp/>that<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>find<sp/>the<sp/>time,<sp/>we<sp/>use<sp/>a<sp/>root-finding<sp/>algorithm<sp/>that<sp/>returns<sp/>the<sp/>TA<sp/>at<sp/>the<sp/>point<sp/>closest<sp/>to<sp/>the<sp/>mouse,<sp/>in<sp/>screen<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.UTatTA<sp/>=<sp/>pr.patch.StartUT;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.mouseTA<sp/>=<sp/>SolveRelativeTA_BSP(pr,<sp/>screenPos,<sp/>ref<sp/>hitInfo.UTatTA,<sp/>(pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref><sp/>-<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>)<sp/>*<sp/>0.5,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>,<sp/>0.001);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitOrigin<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToRelative(<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>,<sp/>hitInfo.UTatTA,<sp/>pr.relativeTo));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.hitPoint<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToRelative(pr.patch.getRelativePositionAtUT(hitInfo.UTatTA).xzy,<sp/>hitInfo.UTatTA,<sp/>pr.<ref refid="class_patch_rendering_1a46d4a66205e7a4ff88d82815a2e264c2" kindref="member">relativeTo</ref>))<sp/>-<sp/>hitInfo.orbitOrigin;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pr.<ref refid="class_patch_rendering_1a3eee3261c1464f91b4a9ed6de17cb574" kindref="member">relativityMode</ref><sp/>==<sp/><ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref>.<ref refid="class_patch_rendering_1a115f6e202569b90d2ff341fc4d2a26ed" kindref="member">RelativityMode</ref>.DYNAMIC)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>above<sp/>for<sp/>dynamic<sp/>(lerped)<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.UTatTA<sp/>=<sp/>pr.patch.StartUT;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.mouseTA<sp/>=<sp/>SolveDynamicTA_BSP(pr,<sp/>screenPos,<sp/>ref<sp/>hitInfo.UTatTA,<sp/>(pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref><sp/>-<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>)<sp/>*<sp/>0.5,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aaef81af080f4f478a74485bdc66d3640" kindref="member">StartUT</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>,<sp/>0.001);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitOrigin<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToLerped(<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>,<sp/>hitInfo.UTatTA,<sp/>pr.patch.referenceBody,<sp/>pr.relativeTo,<sp/>pr.patch.timeToPe,<sp/>pr.patch.EndUT,<sp/>pr.dynamicLinearity));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.hitPoint<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToLerped(pr.patch.getRelativePositionAtUT(hitInfo.UTatTA).xzy,<sp/>hitInfo.UTatTA,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a46d4a66205e7a4ff88d82815a2e264c2" kindref="member">relativeTo</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a58b01b241ecfb2d1a4421bb20a6aebc7" kindref="member">dynamicLinearity</ref>))<sp/>-<sp/>hitInfo.orbitOrigin;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;=<sp/>1.0)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trajectories<sp/>with<sp/>excessively<sp/>straight<sp/>sections<sp/>have<sp/>problems<sp/>getting<sp/>the<sp/>hit<sp/>point<sp/>near<sp/>the<sp/>mouse.<sp/>There<sp/>may<sp/>be<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>high<sp/>eccentricity<sp/>orbits<sp/>that<sp/>exhibit<sp/>such<sp/>problems,<sp/>but<sp/>hyperbolic<sp/>trajectories<sp/>always<sp/>tend<sp/>towards<sp/>straight<sp/>lines<sp/>once<sp/>far<sp/>enough<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.UTatTA<sp/>=<sp/>pr.patch.StartUT;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.mouseTA<sp/>=<sp/>pr.patch.fromV;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxV<sp/>=<sp/>Math.Acos(-1/pr.patch.eccentricity);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.mouseTA<sp/>=<sp/>SolveLocalTA_BSP(pr,<sp/>screenPos,<sp/>ref<sp/>hitInfo.UTatTA,<sp/>hitInfo.mouseTA,<sp/>(maxV<sp/>-<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.fromV)<sp/>*<sp/>0.5,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.fromV,<sp/>maxV,<sp/>1e-8);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitOrigin<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToLocal(<ref refid="struct_vector3d_1ab5cc094f7c0af75948624cae1840bf43" kindref="member">Vector3d.zero</ref>));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.hitPoint<sp/>=<sp/>ScaledSpace.LocalToScaledSpace(pr.trajectory.ConvertPointToLocal(pr.patch.getRelativePositionAtUT(hitInfo.UTatTA).xzy))<sp/>-<sp/>hitInfo.orbitOrigin;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vector3d" kindref="compound">Vector3d</ref><sp/>patchNormal<sp/>=<sp/>pr.patch.GetOrbitNormal();<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitOrigin<sp/>=<sp/>pr.cb;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitPlane<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_vessel_8cs_1afa39c7ec7cc0926b332fcd2d77425edba0d3adee051531c15b3509b4d4d75ce7b" kindref="member">Plane</ref>(patchNormal.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref>.<ref refid="struct_vector3d_1a45908a89b3874a4df667b706508a528f" kindref="member">normalized</ref>,<sp/>hitInfo.orbitOrigin);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawRay(hitInfo.orbitOrigin,<sp/>hitPlane.normal<sp/>*<sp/>1000f,<sp/>Color.cyan);<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseRay<sp/>=<sp/>PlanetariumCamera.Camera.ScreenPointToRay(screenPos);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitPlane.Raycast(mouseRay,<sp/>out<sp/>rayDist);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.hitPoint<sp/>=<sp/>(mouseRay.origin<sp/>+<sp/>mouseRay.direction<sp/>*<sp/>rayDist)<sp/>-<sp/>hitInfo.orbitOrigin;<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rPoint<sp/>=<sp/><ref refid="struct_unity_engine_1_1_quaternion_d" kindref="compound">QuaternionD</ref>.<ref refid="struct_unity_engine_1_1_quaternion_d_1a4ca9825b2a0edf4399f691512b6eb6f0" kindref="member">Inverse</ref>(<ref refid="struct_unity_engine_1_1_quaternion_d" kindref="compound">QuaternionD</ref>.<ref refid="struct_unity_engine_1_1_quaternion_d_1a42a1e92d747ca0fcdd4398ad7ed06c0c" kindref="member">LookRotation</ref>(-(pr.<ref refid="class_patch_rendering_1af5a924c250d74ca97dbdf2f865e8980d" kindref="member">pe</ref><sp/>-<sp/>pr.cb).normalized,<sp/>patchNormal.<ref refid="struct_vector3d_1aa88ec800d01ad074b116e795cdd3fd32" kindref="member">xzy</ref>))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hitInfo.hitPoint;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.mouseTA<sp/>=<sp/>Mathf.Atan2(rPoint.x,<sp/>-rPoint.z);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.UTatTA<sp/>=<sp/>pr.patch.StartUT<sp/>+<sp/>pr.patch.GetDTforTrueAnomaly(hitInfo.mouseTA,<sp/>0.0);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clampToPatch)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_patched_conics_1a730c33d4bb157126472dfbaad36a9039" kindref="member">TAIsWithinPatchBounds</ref>(hitInfo.mouseTA,<sp/>pr.patch))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawRay(hitInfo.orbitOrigin,<sp/>hitInfo.hitPoint,<sp/>Color.red);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>radius<sp/>for<sp/>the<sp/>true<sp/>anomaly<sp/>on<sp/>this<sp/>orbit,<sp/>and<sp/>the<sp/>point<sp/>along<sp/>the<sp/>orbit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.radiusAtTA<sp/>=<sp/>pr.patch.RadiusAtTrueAnomaly(hitInfo.mouseTA)<sp/>*<sp/><ref refid="class_scaled_space" kindref="compound">ScaledSpace</ref>.<ref refid="class_scaled_space_1a546aa7536255ae0cc44732ee47c2013f" kindref="member">InverseScaleFactor</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitPoint<sp/>=<sp/>(hitInfo.hitPoint.normalized<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)hitInfo.radiusAtTA)<sp/>+<sp/>hitInfo.orbitOrigin;<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitScreenPoint<sp/>=<sp/><ref refid="class_planetarium_camera" kindref="compound">PlanetariumCamera</ref>.<ref refid="class_planetarium_camera_1a39cbb63f5123cc5cc170efe0bebe40eb" kindref="member">Camera</ref>.WorldToScreenPoint(hitInfo.orbitPoint);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitInfo.orbitScreenPoint<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(hitInfo.orbitScreenPoint.x,<sp/>hitInfo.orbitScreenPoint.y,<sp/>0f);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Vector3.Distance(hitInfo.orbitScreenPoint,<sp/><ref refid="namespace_expansions_1_1_missions_1_1_editor_1aafb6ee653ec040184fc29538573f634ba324118a6721dd6b8a9b9f4e327df2bf5" kindref="member">Input</ref>.mousePosition)<sp/>&lt;<sp/>orbitPixelWidth)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(hitInfo.orbitOrigin,<sp/>hitInfo.orbitPoint,<sp/>Color.green);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine(hitInfo.orbitOrigin,<sp/>hitInfo.orbitPoint,<sp/>Color.yellow);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SolveRelativeTA_BSP(<ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr,<sp/>Vector3<sp/>screenPos,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>point<sp/>at<sp/>which<sp/>the<sp/>screenspace<sp/>position<sp/>of<sp/>the<sp/>orbiting<sp/>object<sp/>is<sp/>closest<sp/>to<sp/>the<sp/>mouse<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.BSPSolver(ref<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>dT,<sp/>ut<sp/>=&gt;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PlanetariumCamera.Camera.WorldToScreenPoint(</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr.trajectory.ConvertPointToRelative(pr.patch.getRelativePositionAtUT(ut).xzy,<sp/>ut,<sp/>pr.<ref refid="class_patch_rendering_1a46d4a66205e7a4ff88d82815a2e264c2" kindref="member">relativeTo</ref>)));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(v.x,<sp/>v.y,<sp/>0f);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>-<sp/>screenPos).sqrMagnitude;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>MinUT,<sp/>MaxUT,<sp/>epsilon,<sp/>50);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr.patch.TrueAnomalyAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SolveDynamicTA_BSP(<ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr,<sp/>Vector3<sp/>screenPos,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxUT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>point<sp/>at<sp/>which<sp/>the<sp/>screenspace<sp/>position<sp/>of<sp/>the<sp/>orbiting<sp/>object<sp/>is<sp/>closest<sp/>to<sp/>the<sp/>mouse<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.BSPSolver(ref<sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/>dT,<sp/>ut<sp/>=&gt;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PlanetariumCamera.Camera.WorldToScreenPoint(</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr.trajectory.ConvertPointToLerped(pr.patch.getRelativePositionAtUT(ut).xzy,<sp/>ut,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1aadc55b3f7f9c0aad54fece7dd21951d1" kindref="member">referenceBody</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a46d4a66205e7a4ff88d82815a2e264c2" kindref="member">relativeTo</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a63f79606447a608d91cc1bd9a9f1420d" kindref="member">timeToPe</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a98a3f0b59ebccdb9529772c8737790ff" kindref="member">patch</ref>.<ref refid="class_orbit_1a6b459e3e5ea36b515dcc3c28e725735e" kindref="member">EndUT</ref>,<sp/>pr.<ref refid="class_patch_rendering_1a58b01b241ecfb2d1a4421bb20a6aebc7" kindref="member">dynamicLinearity</ref>)));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(v.x,<sp/>v.y,<sp/>0f);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>-<sp/>screenPos).sqrMagnitude;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>MinUT,<sp/>MaxUT,<sp/>epsilon,<sp/>50);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr.patch.TrueAnomalyAtUT(<ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SolveLocalTA_BSP(<ref refid="class_patch_rendering" kindref="compound">PatchRendering</ref><sp/>pr,<sp/>Vector3<sp/>screenPos,<sp/>ref<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_maneuver_node_editor_vector_handle_8cs_1a2a7107d722b47f34b1a6334be44e2d6aa87db16cba59e908888837d351af65bfe" kindref="member">UT</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dTA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MinTA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MaxTA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>point<sp/>at<sp/>which<sp/>the<sp/>screenspace<sp/>position<sp/>of<sp/>the<sp/>orbiting<sp/>object<sp/>is<sp/>closest<sp/>to<sp/>the<sp/>mouse<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UtilMath.BSPSolver(ref<sp/>TA,<sp/>dTA,<sp/>ta<sp/>=&gt;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>PlanetariumCamera.Camera.WorldToScreenPoint(</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScaledSpace.LocalToScaledSpace(pr.patch.referenceBody.position<sp/>+<sp/>pr.patch.getRelativePositionFromTrueAnomaly(ta).xzy));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(v.x,<sp/>v.y,<sp/>0f);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(v<sp/>-<sp/>screenPos).sqrMagnitude;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>MinTA,<sp/>MaxTA,<sp/>epsilon,<sp/>50);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UT<sp/>=<sp/>pr.patch.GetUTforTrueAnomaly(TA,<sp/>0.0);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TA;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>any<sp/>angle<sp/>to<sp/>-pi..pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a77d877ee3ab6d81822147ccea1ab8d6c" kindref="member">AngleWrap</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Math.Floor(a<sp/>/<sp/>(2<sp/>*<sp/>Math.PI)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>-<sp/>i<sp/>*<sp/>2<sp/>*<sp/>Math.PI;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_patched_conics_1a730c33d4bb157126472dfbaad36a9039" kindref="member">TAIsWithinPatchBounds</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tA,<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref><sp/>patch)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patch.<ref refid="class_orbit_1af6ae5d7e13cf3e73547c0652f622a23d" kindref="member">eccentricity</ref><sp/>&gt;<sp/>1.0<sp/>||<sp/>patch.<ref refid="class_orbit_1afa86ff0e2d192320f397f9507f2a1f37" kindref="member">patchEndTransition</ref><sp/>!=<sp/><ref refid="class_orbit" kindref="compound">Orbit</ref>.<ref refid="class_orbit_1a96fe2f2e726341f4b6d1342c792712df" kindref="member">PatchTransitionType</ref>.FINAL)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>orbit<sp/>is<sp/>only<sp/>a<sp/>patch,<sp/>check<sp/>if<sp/>TA<sp/>is<sp/>within<sp/>the<sp/>patch<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patch.fromV<sp/>!=<sp/>0.0<sp/>&amp;&amp;<sp/>patch.toV<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="class_patched_conics_1a77d877ee3ab6d81822147ccea1ab8d6c" kindref="member">AngleWrap</ref>(tA);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromV<sp/>=<sp/><ref refid="class_patched_conics_1a77d877ee3ab6d81822147ccea1ab8d6c" kindref="member">AngleWrap</ref>(patch.fromV);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toV<sp/>=<sp/><ref refid="class_patched_conics_1a77d877ee3ab6d81822147ccea1ab8d6c" kindref="member">AngleWrap</ref>(patch.toV);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromV<sp/>&lt;<sp/>toV)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>fromV<sp/>||<sp/>v<sp/>&gt;<sp/>toV)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>fromV<sp/>&amp;&amp;<sp/>v<sp/>&gt;<sp/>toV)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/PatchedConics.cs"/>
  </compounddef>
</doxygen>
