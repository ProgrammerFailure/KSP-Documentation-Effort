<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="class_orbit_util" kind="class" prot="public">
    <compoundname>OrbitUtil</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_orbit_util_1a23784ef903c5b801a126203f765eeaf2" prot="private" static="yes" mutable="no">
        <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>[]</type>
        <definition>CelestialBody [] OrbitUtil.p1Hierarchy</definition>
        <argsstring></argsstring>
        <name>p1Hierarchy</name>
        <initializer>= new <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>[10]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="185" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orbit_util_1a1cffd92f7fddea58b02d2ac11d4f65e7" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int OrbitUtil.p1i</definition>
        <argsstring></argsstring>
        <name>p1i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="186" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orbit_util_1a228502c38ce7b81024587a2ec2c8be6e" prot="private" static="yes" mutable="no">
        <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>[]</type>
        <definition>CelestialBody [] OrbitUtil.p2Hierarchy</definition>
        <argsstring></argsstring>
        <name>p2Hierarchy</name>
        <initializer>= new <ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>[10]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="188" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_orbit_util_1ac68b5c4844de3370aba6d103847893ed" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int OrbitUtil.p2i</definition>
        <argsstring></argsstring>
        <name>p2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="189" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_orbit_util_1aceddcbc4002a390b8088902a8df633e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_intersect_information" kindref="compound">IntersectInformation</ref></type>
        <definition>static IntersectInformation OrbitUtil.CalculateIntersections</definition>
        <argsstring>(Orbit referenceOrbit, Orbit targetOrbit)</argsstring>
        <name>CalculateIntersections</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>referenceOrbit</declname>
        </param>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>targetOrbit</declname>
        </param>
        <briefdescription>
<para>Calculates the intersection distances and universal times between <emphasis>reference</emphasis>  and <emphasis>target</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A quaternion where x and y are distance and time for intersection 1, respectively. z and w for intersection 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Target.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="94" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="94" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1a60d98b1dfe1250eed1fceb53abf66710" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.CurrentEjectionAngle</definition>
        <argsstring>(Orbit origin, double UT)</argsstring>
        <name>CurrentEjectionAngle</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>UT</declname>
        </param>
        <briefdescription>
<para>Calculates the ejection angle for orbit <emphasis>origin</emphasis>  at specified time <emphasis>UT</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ejection angle.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>Origin.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UT</parametername>
</parameternamelist>
<parameterdescription>
<para>Universal Time.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="53" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1a57a278be42c5b23c5ddd17910865a5f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.CurrentEjectionAngle</definition>
        <argsstring>(Orbit origin, double UT, Vector3d prograde)</argsstring>
        <name>CurrentEjectionAngle</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>UT</declname>
        </param>
        <param>
          <type><ref refid="struct_vector3d" kindref="compound">Vector3d</ref></type>
          <declname>prograde</declname>
        </param>
        <briefdescription>
<para>Calculates the ejection angle for orbit <emphasis>origin</emphasis>  at specified time <emphasis>UT</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ejection angle.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>Origin.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UT</parametername>
</parameternamelist>
<parameterdescription>
<para>Universal Time.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="66" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="66" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1a0d8db9ae6f9e014f9a618cd9970c971b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.CurrentPhaseAngle</definition>
        <argsstring>(Orbit origin, Orbit destination)</argsstring>
        <name>CurrentPhaseAngle</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Calculates the current phase angle between <emphasis>origin</emphasis>  and <emphasis>destination</emphasis> . </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The phase angle.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>Origin.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="29" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="29" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1aba6e8c439eed10a137909d66b4db47e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
        <definition>static CelestialBody OrbitUtil.FindCommonAncestor</definition>
        <argsstring>(Orbit o, CelestialBody cb)</argsstring>
        <name>FindCommonAncestor</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="192" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="192" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1ae148314f2a33174519b54267a964a788" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
        <definition>static CelestialBody OrbitUtil.FindPlanet</definition>
        <argsstring>(CelestialBody src)</argsstring>
        <name>FindPlanet</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Looks up the solar system hierarchy for the first object directly orbiting the sun. Returns null if passed the <ref refid="class_sun" kindref="compound">Sun</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="168" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="168" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1a9cb3601f9eafa776cfc21f21f9e99301" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.GetSmaDistance</definition>
        <argsstring>(Orbit o1, Orbit o2)</argsstring>
        <name>GetSmaDistance</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the delta of semi-major axis distances to sun between two orbits </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>currentBody</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tgtBody</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="237" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1aee519fb5b1a99db2b64c3ac924d6bf25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.GetSmaDistanceToSun</definition>
        <argsstring>(Orbit obt, double d=0.0)</argsstring>
        <name>GetSmaDistanceToSun</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>obt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="242" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="242" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1a26cf49303457138e8e6f21a755f6e20b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.GetTransferPhaseAngle</definition>
        <argsstring>(Orbit o1, Orbit o2, double Th)</argsstring>
        <name>GetTransferPhaseAngle</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Th</declname>
        </param>
        <briefdescription>
<para>Get the phase angle for an optimal transfer between both orbits </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o1</parametername>
</parameternamelist>
<parameterdescription>
<para>the origin orbit</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o2</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination orbit</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Th</parametername>
</parameternamelist>
<parameterdescription>
<para>the transfer time. Use GetTransferTime for that.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The phase angle, in radians</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="155" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_orbit_util_1aa9ce493b6f69914122bf7b9306422c75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double OrbitUtil.GetTransferTime</definition>
        <argsstring>(Orbit o1, Orbit o2)</argsstring>
        <name>GetTransferTime</name>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o1</declname>
        </param>
        <param>
          <type><ref refid="class_orbit" kindref="compound">Orbit</ref></type>
          <declname>o2</declname>
        </param>
        <briefdescription>
<para>Get the transit time between two orbits. Orbits are assumed to be circular, plane-aligned and to share the same central body. The transfer orbit is assumed to be a perfect Hohmann transfer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>o1</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o2</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="143" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="143" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_orbit_util_1a2f40fb8fa71a441f5df4bb53cd121a55" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void OrbitUtil.GetBodyHierarchy</definition>
        <argsstring>(CelestialBody cb, CelestialBody[] hierarchy, ref int i)</argsstring>
        <name>GetBodyHierarchy</name>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type><ref refid="class_celestial_body" kindref="compound">CelestialBody</ref>[]</type>
          <declname>hierarchy</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="222" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="222" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" line="22" column="1" bodyfile="D:/Workspace/KSP1/KSP/KSP/Assets/Scripts/Orbit Scripts/OrbitUtil.cs" bodystart="21" bodyend="255"/>
    <listofallmembers>
      <member refid="class_orbit_util_1aceddcbc4002a390b8088902a8df633e8" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>CalculateIntersections</name></member>
      <member refid="class_orbit_util_1a60d98b1dfe1250eed1fceb53abf66710" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>CurrentEjectionAngle</name></member>
      <member refid="class_orbit_util_1a57a278be42c5b23c5ddd17910865a5f7" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>CurrentEjectionAngle</name></member>
      <member refid="class_orbit_util_1a0d8db9ae6f9e014f9a618cd9970c971b" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>CurrentPhaseAngle</name></member>
      <member refid="class_orbit_util_1aba6e8c439eed10a137909d66b4db47e8" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>FindCommonAncestor</name></member>
      <member refid="class_orbit_util_1ae148314f2a33174519b54267a964a788" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>FindPlanet</name></member>
      <member refid="class_orbit_util_1a2f40fb8fa71a441f5df4bb53cd121a55" prot="private" virt="non-virtual"><scope>OrbitUtil</scope><name>GetBodyHierarchy</name></member>
      <member refid="class_orbit_util_1a9cb3601f9eafa776cfc21f21f9e99301" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>GetSmaDistance</name></member>
      <member refid="class_orbit_util_1aee519fb5b1a99db2b64c3ac924d6bf25" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>GetSmaDistanceToSun</name></member>
      <member refid="class_orbit_util_1a26cf49303457138e8e6f21a755f6e20b" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>GetTransferPhaseAngle</name></member>
      <member refid="class_orbit_util_1aa9ce493b6f69914122bf7b9306422c75" prot="public" virt="non-virtual"><scope>OrbitUtil</scope><name>GetTransferTime</name></member>
      <member refid="class_orbit_util_1a23784ef903c5b801a126203f765eeaf2" prot="private" virt="non-virtual"><scope>OrbitUtil</scope><name>p1Hierarchy</name></member>
      <member refid="class_orbit_util_1a1cffd92f7fddea58b02d2ac11d4f65e7" prot="private" virt="non-virtual"><scope>OrbitUtil</scope><name>p1i</name></member>
      <member refid="class_orbit_util_1a228502c38ce7b81024587a2ec2c8be6e" prot="private" virt="non-virtual"><scope>OrbitUtil</scope><name>p2Hierarchy</name></member>
      <member refid="class_orbit_util_1ac68b5c4844de3370aba6d103847893ed" prot="private" virt="non-virtual"><scope>OrbitUtil</scope><name>p2i</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
